var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.724,1,2.251]],["body/controllers/AppController.html",[0,2.858,1,3.73,2,2.335,3,0.378,4,0.333,5,0.333,6,3.868,7,0.425,8,1.619,9,5.331,10,1.739,11,0.026,12,0.742,13,4.58,14,1.322,15,1.227,16,0.463,17,0.866,18,3.353,19,3.868,20,0.378,21,0.09,22,2.005,23,2.16,24,1.515,25,4.58,26,0.021,27,0.021]],["title/modules/AppModule.html",[28,1.284,29,2.251]],["body/modules/AppModule.html",[1,3.424,2,2.294,3,0.27,4,0.238,5,0.238,11,0.027,16,0.537,17,0.618,18,3.326,19,2.758,20,0.27,21,0.064,26,0.017,27,0.017,28,1.954,29,4.424,30,1.541,31,1.541,32,1.808,33,1.808,34,1.541,35,2.848,36,1.808,37,2.758,38,2.758,39,2.758,40,3.632,41,3.326,42,3.326,43,3.632,44,2.49,45,1.808,46,1.665,47,3.267,48,3.11,49,4.499,50,3.068,51,1.665,52,2.174,53,1.541,54,3.267,55,0.788,56,1.665,57,1.708,58,2.424,59,2.758,60,3.267,61,3.267,62,2.758,63,3.267,64,3.267,65,1.331,66,3.267,67,2.424,68,0.41,69,3.267,70,3.267,71,3.267,72,2.174,73,3.267,74,3.267,75,3.267,76,3.267,77,3.267,78,2.758,79,2.424]],["title/injectables/AppService.html",[18,1.872,80,0.74]],["body/injectables/AppService.html",[3,0.393,4,0.346,5,0.346,7,0.441,8,1.656,9,5.4,11,0.026,12,0.771,14,1.374,15,1.255,16,0.393,17,0.899,18,3.175,20,0.393,21,0.094,24,1.574,26,0.022,27,0.022,80,1.255,81,2.244,82,4.017,83,4.757,84,4.757,85,4.757]],["title/controllers/AuthController.html",[0,1.724,86,2.251]],["body/controllers/AuthController.html",[0,0.986,2,0.986,3,0.16,4,0.141,5,0.141,7,0.179,8,0.881,10,1.972,11,0.027,12,0.841,14,1.5,15,0.827,16,0.486,17,0.366,20,0.16,21,0.038,22,0.847,23,0.912,24,1.718,26,0.012,27,0.012,55,0.535,65,2.021,68,0.725,86,2.03,87,1.633,88,1.633,89,1.435,90,2.798,91,2.803,92,3.19,93,3.19,94,3.19,95,2.576,96,3.19,97,3.051,98,1.633,99,3.622,100,4.678,101,2.576,102,1.934,103,1.934,104,1.844,105,1.844,106,1.934,107,1.718,108,1.401,109,1.401,110,3.139,111,1.633,112,2.998,113,3.051,114,3.051,115,1.934,116,1.633,117,3.555,118,4.29,119,1.934,120,1.934,121,1.934,122,2.263,123,1.934,124,1.633,125,1.934,126,1.934,127,1.934,128,1.633,129,2.998,130,3.051,131,1.934,132,1.934,133,4.967,134,3.051,135,1.934,136,1.934,137,3.051,138,1.934,139,1.633,140,4.19,141,1.633,142,3.051,143,2.091,144,1.633,145,2.576,146,1.633,147,1.633,148,1.633,149,2.592,150,1.934,151,1.287,152,1.633,153,1.243,154,0.912,155,0.912,156,1.169,157,1.934,158,1.633,159,1.633,160,1.435,161,0.986,162,1.934,163,1.688,164,1.287,165,1.633,166,1.934,167,1.934,168,3.19,169,1.633,170,1.934,171,1.934,172,1.934,173,1.633,174,1.934,175,2.576,176,1.934,177,1.336,178,2.283,179,3.051,180,0.64,181,2.091,182,1.07,183,1.934,184,3.051,185,1.934,186,3.051,187,3.051,188,3.051,189,1.934,190,0.986,191,1.934,192,3.051,193,2.263,194,3.051,195,3.051,196,1.934,197,2.263,198,3.051,199,1.934,200,1.934,201,3.051,202,3.051,203,1.934,204,1.633,205,1.934,206,1.07,207,1.934,208,1.633,209,1.878,210,1.934,211,1.688,212,1.934,213,1.934,214,1.934]],["title/modules/AuthModule.html",[28,1.284,40,2.044]],["body/modules/AuthModule.html",[2,2.321,3,0.274,4,0.242,5,0.242,11,0.027,16,0.539,17,0.628,20,0.274,21,0.065,26,0.017,27,0.017,28,1.971,30,1.567,31,1.567,32,1.839,33,1.839,34,1.567,35,2.873,36,2.873,40,4.004,41,3.343,42,3.343,44,2.519,45,1.839,46,1.694,48,2.75,50,3.09,51,1.694,52,2.211,53,1.567,55,0.582,56,1.694,59,2.806,62,2.806,67,2.465,79,2.465,86,3.455,143,3.641,144,2.806,215,2.806,216,3.323,217,2.806,218,2.806,219,3.651,220,3.323,221,3.323,222,2.465,223,3.323,224,3.323,225,3.323,226,2.211,227,2.465,228,3.323,229,3.323,230,2.211,231,3.323,232,3.323,233,2.806,234,3.323,235,2.806,236,3.323]],["title/injectables/AuthService.html",[80,0.74,143,1.872]],["body/injectables/AuthService.html",[3,0.124,4,0.109,5,0.109,7,0.14,8,0.719,11,0.027,12,0.848,14,1.466,15,1.277,16,0.469,17,0.284,20,0.124,21,0.03,23,1.747,24,1.225,26,0.01,27,0.01,50,2.591,51,0.767,53,0.71,55,1.086,56,0.767,57,0.571,68,0.656,80,0.545,81,0.71,90,2.697,91,1.848,92,2.103,93,2.69,94,2.103,95,2.103,96,2.103,104,1.505,105,0.909,107,1.731,108,1.412,109,1.412,110,3.069,111,2.103,112,2.672,116,1.27,117,3.315,124,2.103,128,1.27,129,2.238,143,1.378,145,2.103,146,1.27,147,1.27,148,1.27,153,1.298,154,0.71,155,0.71,159,1.27,177,2.523,178,3.069,180,1.953,181,3.036,182,2.971,190,2.496,197,1.848,206,1.378,208,2.103,209,1.395,211,0.833,222,1.116,235,3.127,237,1.27,238,2.49,239,2.49,240,2.49,241,1.09,242,1.116,243,2.464,244,4.681,245,2.591,246,1.504,247,1.848,248,1.504,249,2.103,250,3.953,251,1.504,252,1.504,253,1.504,254,1.504,255,1.504,256,1.504,257,1.504,258,1.504,259,1.624,260,1.504,261,2.49,262,1.504,263,1.504,264,1.504,265,2.103,266,2.748,267,1.116,268,0.833,269,1.504,270,2.103,271,1.504,272,3.186,273,1.504,274,1.116,275,1.27,276,1.27,277,1.116,278,2.238,279,2.364,280,3.186,281,3.186,282,4.422,283,3.127,284,2.48,285,3.186,286,2.12,287,2.69,288,3.186,289,3.186,290,3.186,291,3.465,292,3.704,293,2.364,294,2.49,295,3.186,296,2.69,297,2.103,298,1.27,299,2.69,300,1.504,301,2.103,302,2.49,303,2.49,304,1.504,305,1.504,306,1.504,307,1.001,308,1.27,309,1.504,310,1.504,311,1.504,312,1.504,313,1.504,314,1.504,315,1.504,316,1.504,317,1.27,318,1.116,319,1.27,320,1.504,321,1.504,322,1.504,323,1.504,324,1.504,325,2.103,326,1.504,327,2.49,328,1.27,329,1.504,330,1.27,331,1.27,332,1.504,333,2.49,334,1.504,335,1.116,336,1.001,337,1.116,338,0.767,339,1.001,340,1.27,341,2.49,342,1.504]],["title/entities/Company.html",[57,1.284,343,2.044]],["body/entities/Company.html",[3,0.193,4,0.17,5,0.17,7,0.216,10,2.441,11,0.027,12,1.042,15,1.416,16,0.351,20,0.193,21,0.046,26,0.014,27,0.014,55,1.101,57,1.339,65,2.602,68,0.811,72,1.552,108,1.278,177,1.862,268,1.291,293,3.517,307,2.83,337,3.155,338,1.798,339,2.83,343,1.41,344,1.97,345,1.09,346,2.83,347,3.591,348,2.83,349,2.353,350,5.09,351,2.83,352,2.83,353,2.83,354,2.83,355,2.57,356,3.591,357,2.353,358,4.694,359,2.333,360,3.591,361,2.333,362,2.333,363,2.333,364,2.978,365,2.333,366,2.864,367,2.978,368,2.333,369,5.253,370,2.333,371,2.333,372,2.333,373,2.333,374,2.333,375,3.076,376,1.97,377,4.002,378,3.517,379,1.731,380,2.333,381,2.333,382,2.333,383,2.333,384,2.333,385,3.527,386,2.333,387,3.591,388,2.333,389,2.333,390,3.527,391,2.333,392,1.97,393,3.527,394,3.527,395,2.978,396,2.978,397,1.552,398,1.552,399,2.333,400,2.333,401,4.694,402,1.41]],["title/guards/CompanyAccessGuard.html",[403,2.044,404,2.251]],["body/guards/CompanyAccessGuard.html",[3,0.313,4,0.276,5,0.276,7,0.351,8,1.435,11,0.027,12,0.805,14,1.093,16,0.458,17,0.716,20,0.313,21,0.074,22,1.658,24,1.644,26,0.019,27,0.019,55,0.664,57,1.438,65,1.543,68,0.623,80,1.087,105,2.288,107,1.644,108,1.34,109,1.34,153,1.543,154,1.786,155,1.786,180,1.835,241,1.658,259,2.533,355,2.288,357,2.096,366,3.003,404,3.306,405,2.288,406,4.683,407,3.198,408,3.918,409,2.81,410,4.655,411,3.787,412,3.306,413,3.918,414,3.787,415,2.52,416,2.52,417,2.288,418,2.52,419,2.52,420,2.81,421,3.787,422,3.787,423,4.196,424,3.787,425,2.288,426,2.81]],["title/classes/CompleteRegistrationDto.html",[21,0.066,112,2.044]],["body/classes/CompleteRegistrationDto.html",[3,0.352,4,0.31,5,0.31,7,0.395,10,2.036,11,0.026,12,0.869,15,1.347,16,0.352,20,0.352,21,0.105,26,0.021,27,0.021,68,0.672,112,3.24,178,3.833,181,3.246,206,2.967,286,3.568,345,1.657,427,2.011,428,4.953,429,3.6,430,4.263,431,4.528,432,4.528,433,4.263,434,4.263,435,4.263,436,3.903,437,3.545,438,3.6,439,3.6,440,2.174,441,3.6,442,3.6]],["title/classes/CreateCompanyDto.html",[21,0.066,443,2.509]],["body/classes/CreateCompanyDto.html",[3,0.286,4,0.252,5,0.252,7,0.321,10,2.373,11,0.026,12,1.013,15,1.467,16,0.286,20,0.286,21,0.092,26,0.018,27,0.018,68,0.784,108,1.429,109,1.786,177,2.321,345,1.446,346,3.527,348,3.527,351,3.527,353,3.527,354,3.527,427,1.631,436,3.112,437,3.695,440,1.763,443,3.47,444,5.369,445,2.92,446,4.795,447,3.458,448,3.458,449,3.458,450,3.458,451,2.92,452,3.458,453,2.92,454,3.458,455,3.458,456,3.458,457,4.638,458,3.47,459,3.95]],["title/classes/CreateInvitationDto.html",[21,0.066,117,2.044]],["body/classes/CreateInvitationDto.html",[3,0.39,4,0.344,5,0.344,7,0.438,10,1.793,11,0.026,12,0.765,15,1.25,16,0.39,20,0.39,21,0.112,26,0.022,27,0.022,68,0.592,117,3.452,177,2.688,345,1.765,427,2.228,436,3.801,440,2.408,458,4.238,460,4.238,461,3.989,462,3.989,463,4.724]],["title/classes/CreateSuperAdminDto.html",[21,0.066,129,2.044]],["body/classes/CreateSuperAdminDto.html",[3,0.335,4,0.295,5,0.295,7,0.376,10,2.177,11,0.026,12,0.929,15,1.399,16,0.335,20,0.335,21,0.102,26,0.02,27,0.02,68,0.719,129,3.141,177,2.51,178,3.776,206,2.876,286,3.458,328,4.841,345,1.606,427,1.915,431,4.389,432,4.389,436,4.023,437,3.465,438,3.427,439,3.427,440,2.069,441,3.427,442,3.427,451,3.427,458,3.856,460,4.485,462,3.427,464,3.427,465,4.059,466,4.059,467,4.059,468,4.059]],["title/interfaces/FeatureConfig.html",[469,2.044,470,2.251]],["body/interfaces/FeatureConfig.html",[3,0.33,4,0.291,5,0.291,7,0.371,11,0.027,15,1.246,16,0.33,20,0.33,26,0.02,27,0.02,55,0.701,68,0.646,180,1.323,209,1.751,345,1.591,375,3.633,397,2.661,398,2.661,402,2.417,469,2.417,470,3.426,471,2.967,472,2.967,473,4.006,474,5.598,475,2.417,476,2.967,477,3.377,478,2.661,479,4.808,480,3.377,481,3.426,482,4.347,483,3.377,484,3.426,485,3.377,486,2.417,487,3.377,488,3.377,489,3.377,490,3.377,491,3.377,492,3.377,493,3.377]],["title/guards/FeatureGuard.html",[161,1.724,403,2.044]],["body/guards/FeatureGuard.html",[3,0.272,4,0.24,5,0.24,7,0.306,8,1.308,11,0.027,12,0.734,14,0.952,16,0.46,17,0.624,20,0.272,21,0.065,22,1.444,23,2.136,24,1.842,26,0.017,27,0.017,55,0.578,57,1.719,65,1.845,68,0.568,80,0.991,107,1.498,108,1.221,109,1.221,161,2.309,180,2.042,241,1.444,278,2.737,336,2.195,338,1.682,345,1.019,352,3.013,355,1.993,366,2.737,375,2.737,397,2.195,398,2.195,402,2.737,405,1.993,408,3.704,409,2.447,410,4.472,412,3.013,413,3.704,415,2.195,416,2.195,417,1.993,418,2.195,419,2.195,420,2.447,425,1.993,470,3.013,475,1.993,481,2.195,484,2.195,494,2.785,495,4.529,496,3.298,497,3.298,498,3.298,499,2.447,500,2.195,501,2.447,502,4.367,503,3.298,504,2.785,505,2.785,506,3.824,507,2.785,508,3.298,509,3.298,510,3.298,511,3.298,512,4.529,513,3.298,514,4.529,515,3.298]],["title/classes/FeatureRestrictionFilter.html",[21,0.066,516,2.509]],["body/classes/FeatureRestrictionFilter.html",[3,0.322,4,0.283,5,0.283,7,0.361,8,1.461,11,0.027,12,0.631,14,1.125,16,0.418,17,0.737,20,0.322,21,0.077,26,0.019,27,0.019,68,0.489,107,1.289,108,1.051,109,1.051,133,4.274,160,2.89,180,1.86,206,2.156,339,3.368,417,3.059,427,1.838,516,3.755,517,4.274,518,3.29,519,5.622,520,5.622,521,5.062,522,5.952,523,4.172,524,5.952,525,3.896,526,3.896,527,3.896,528,3.896,529,3.896,530,3.896,531,3.896,532,3.896,533,5.062,534,3.896,535,3.896,536,3.896,537,3.896,538,2.89,539,3.29,540,3.896,541,3.29,542,3.896,543,3.896,544,3.29,545,3.29,546,3.29,547,3.896,548,3.896,549,3.896]],["title/classes/FilterUsersDto.html",[21,0.066,550,2.044]],["body/classes/FilterUsersDto.html",[3,0.308,4,0.271,5,0.271,7,0.345,10,2.309,11,0.026,12,0.985,15,1.415,16,0.406,20,0.308,21,0.097,26,0.019,27,0.019,68,0.763,109,1.781,153,2.241,154,1.757,155,1.757,209,2.408,259,2.804,345,1.519,427,1.757,437,3.675,440,1.899,457,4.634,550,2.97,551,5.274,552,3.145,553,3.66,554,4.645,555,4.645,556,5.85,557,3.724,558,3.724,559,3.724,560,3.724,561,3.724,562,3.724,563,3.724,564,3.724]],["title/modules/GuardsModule.html",[28,1.284,41,1.872]],["body/modules/GuardsModule.html",[3,0.313,4,0.276,5,0.276,11,0.027,16,0.528,17,0.716,20,0.313,21,0.074,26,0.019,27,0.019,28,2.105,30,1.786,31,1.786,32,2.096,33,2.096,34,1.786,35,3.069,36,3.069,41,3.631,44,2.75,45,2.096,46,1.931,48,2.288,52,2.52,53,1.786,55,0.972,56,1.931,57,1.886,58,2.81,161,3.308,163,3.59,165,3.198,227,2.81,565,3.198,566,3.198,567,3.198,568,3.716,569,3.787,570,3.787,571,3.198]],["title/injectables/JwtAuthGuard.html",[80,0.74,156,2.044]],["body/injectables/JwtAuthGuard.html",[3,0.358,4,0.315,5,0.315,7,0.402,8,1.564,11,0.027,12,0.702,14,1.251,16,0.447,17,0.819,20,0.358,21,0.085,24,1.433,26,0.021,27,0.021,55,1.117,68,0.543,80,1.185,81,2.043,107,1.433,108,1.168,109,1.168,156,3.273,190,2.208,226,2.882,265,4.573,284,2.617,572,4.573,573,3.657,574,4.573,575,5.415,576,5.415,577,5.415,578,4.331,579,5.908,580,4.331]],["title/injectables/JwtStrategy.html",[80,0.74,219,2.044]],["body/injectables/JwtStrategy.html",[3,0.303,4,0.267,5,0.267,7,0.341,8,1.406,11,0.027,12,0.885,14,1.061,16,0.48,17,0.695,20,0.303,21,0.072,22,1.609,24,1.611,26,0.019,27,0.019,50,3.443,51,1.873,68,0.611,80,1.066,81,1.733,90,2.392,107,1.611,108,1.314,109,1.314,110,2.22,177,1.609,180,1.611,181,2.695,190,1.873,209,1.609,219,2.943,226,2.445,230,2.445,233,3.102,241,1.609,259,1.873,284,2.22,338,1.873,349,2.033,418,2.445,574,4.113,581,3.102,582,4.871,583,4.871,584,3.102,585,3.674,586,4.871,587,3.674,588,3.674,589,3.674,590,3.674,591,3.674,592,3.102,593,5.464,594,3.674,595,3.674,596,3.674,597,3.674,598,3.674,599,3.674,600,3.674,601,3.674,602,3.674,603,3.674,604,3.674]],["title/modules/MailModule.html",[28,1.284,42,1.872]],["body/modules/MailModule.html",[3,0.319,4,0.281,5,0.281,11,0.027,16,0.49,17,0.73,20,0.319,21,0.076,26,0.019,27,0.019,28,2.126,30,1.822,31,1.822,32,2.137,33,2.137,34,1.822,35,3.099,36,3.099,42,3.556,44,2.786,45,2.137,46,1.969,48,2.334,50,3.099,51,1.969,55,0.677,67,2.866,79,2.866,89,2.866,90,1.691,193,2.866,245,3.727,523,2.866,605,3.261,606,3.261,607,3.261,608,3.862,609,3.862,610,2.866,611,3.261,612,3.862,613,3.862,614,3.862,615,3.862,616,3.862,617,3.862,618,3.862,619,3.261,620,3.862,621,3.862,622,3.862]],["title/injectables/MailService.html",[80,0.74,245,1.872]],["body/injectables/MailService.html",[3,0.225,4,0.198,5,0.198,7,0.252,8,1.142,11,0.026,12,0.828,14,1.142,15,1.448,16,0.385,17,0.515,20,0.225,21,0.054,22,1.192,26,0.015,27,0.015,50,3.134,51,1.388,55,0.477,68,0.584,80,0.865,81,1.284,89,2.02,90,2.479,107,1.54,108,1.256,109,1.256,177,2.377,180,1.308,181,3.134,182,2.188,193,2.02,197,2.934,241,1.192,245,2.188,278,2.814,286,1.811,301,3.339,338,1.388,345,1.222,523,2.02,539,3.339,541,4.316,584,2.299,619,2.299,623,2.299,624,4.657,625,4.657,626,3.954,627,3.954,628,2.722,629,5.428,630,5.111,631,2.722,632,3.954,633,2.722,634,3.339,635,2.722,636,2.722,637,2.722,638,2.722,639,2.722,640,2.722,641,2.722,642,2.722,643,2.722,644,2.722,645,2.722,646,2.722,647,2.722,648,3.954,649,3.954,650,3.954,651,3.954,652,3.954,653,3.954,654,3.954,655,3.954,656,5.663,657,5.663,658,3.954,659,3.954,660,2.722,661,2.722,662,2.722,663,2.722,664,3.954,665,3.954,666,5.111,667,3.954,668,3.954,669,5.111,670,3.954,671,3.954,672,3.954,673,3.954,674,3.954,675,3.954,676,2.722,677,2.722,678,2.722,679,2.722]],["title/interfaces/PlanLimits.html",[469,2.044,680,2.044]],["body/interfaces/PlanLimits.html",[3,0.341,4,0.301,5,0.301,7,0.383,11,0.027,15,1.265,16,0.341,20,0.341,26,0.02,27,0.02,68,0.659,180,1.367,345,1.625,352,3.848,357,3.2,375,2.498,397,2.75,398,2.75,402,2.498,469,2.498,471,3.067,473,3.944,476,3.067,478,2.75,481,2.75,484,2.75,680,3.494,681,3.067,682,3.067,683,5.511,684,3.848,685,4.44,686,4.883,687,4.44,688,3.067,689,4.44,690,2.75]],["title/guards/RolesGuard.html",[149,2.044,403,2.044]],["body/guards/RolesGuard.html",[3,0.295,4,0.26,5,0.26,7,0.331,8,1.379,11,0.027,12,0.774,14,1.03,16,0.475,17,0.675,20,0.295,21,0.07,22,1.562,24,1.58,26,0.018,27,0.018,55,0.625,65,1.453,68,0.599,80,1.045,104,2.156,105,2.156,107,1.58,108,1.288,109,1.288,122,2.647,149,2.886,152,3.012,153,1.453,154,1.683,155,1.683,180,1.983,181,1.974,230,2.374,241,1.562,318,2.647,366,2.886,405,2.156,408,3.826,409,2.647,410,4.578,412,3.178,413,3.826,415,2.374,416,2.374,417,2.156,419,2.374,425,2.156,499,2.647,500,2.374,501,2.647,504,3.012,691,3.012,692,3.568,693,3.568,694,2.647,695,4.776,696,3.568,697,3.568,698,3.568,699,3.568,700,3.012,701,3.012,702,3.568,703,4.776,704,3.568,705,4.776,706,3.568,707,3.568]],["title/classes/UpdateUserProfileDto.html",[21,0.066,708,2.509]],["body/classes/UpdateUserProfileDto.html",[3,0.286,4,0.252,5,0.252,7,0.321,10,2.373,11,0.026,12,1.013,15,1.467,16,0.286,20,0.286,21,0.092,26,0.018,27,0.018,68,0.784,109,1.808,345,1.446,346,3.527,348,3.527,351,3.527,353,3.527,354,3.527,427,1.631,437,3.778,440,1.763,446,5.163,453,2.92,457,4.717,459,3.95,708,3.47,709,5.369,710,2.92,711,4.475,712,4.475,713,3.458,714,3.458,715,3.458,716,3.458,717,3.458,718,3.458,719,3.458]],["title/entities/User.html",[55,0.593,343,2.044]],["body/entities/User.html",[3,0.156,4,0.138,5,0.138,7,0.176,10,2.418,11,0.027,12,1.032,15,1.415,16,0.35,20,0.156,21,0.037,26,0.011,27,0.011,55,0.526,57,2.221,65,2.655,68,0.82,72,1.26,108,1.143,153,1.882,154,1.415,155,0.893,177,1.632,178,2.252,209,1.632,211,1.048,259,2.507,268,1.048,274,3.429,276,1.599,293,3.648,296,3.147,297,3.147,318,1.405,335,2.226,337,2.765,338,2.161,339,2.48,340,1.599,343,1.144,345,0.927,346,2.48,347,3.147,348,2.48,349,2.557,351,2.48,353,2.48,354,2.48,356,3.147,358,4.857,360,3.147,364,2.533,366,1.813,367,1.599,369,5.187,376,2.533,377,4.512,378,3.429,379,3.145,387,3.147,392,1.599,395,3.58,396,2.533,401,5.014,486,2.252,500,1.996,684,1.996,711,3.147,712,3.147,720,1.599,721,3.726,722,1.893,723,1.893,724,1.893,725,1.893,726,1.893,727,1.893,728,1.893,729,1.893,730,1.893,731,1.893,732,1.893,733,4.239,734,3,735,1.893,736,3,737,1.893,738,1.893,739,1.893,740,2.533,741,1.893,742,1.893,743,1.893,744,1.893,745,1.893,746,1.893,747,1.893,748,3,749,3,750,1.893,751,1.893,752,3,753,3,754,3,755,1.893,756,3,757,3,758,1.893,759,1.893,760,1.893,761,1.893,762,3]],["title/guards/UserLimitGuard.html",[163,1.872,403,2.044]],["body/guards/UserLimitGuard.html",[3,0.313,4,0.276,5,0.276,7,0.351,8,1.435,11,0.027,12,0.805,14,1.093,16,0.41,17,0.716,20,0.313,21,0.074,22,1.658,23,1.786,24,1.644,26,0.019,27,0.019,55,0.871,65,2.024,68,0.623,80,1.087,90,2.428,107,1.644,108,1.34,109,1.34,163,2.75,164,3.69,180,1.835,182,2.096,190,1.931,241,1.658,266,2.81,284,2.288,336,2.52,355,2.288,405,2.288,408,3.918,412,3.306,413,3.918,415,2.52,417,2.288,418,2.52,419,2.52,420,2.81,425,2.288,426,2.81,505,3.198,553,2.52,568,3.472,571,3.198,763,3.198,764,3.787,765,3.787,766,3.787,767,4.196,768,3.787,769,3.787,770,3.787,771,3.787]],["title/injectables/UserLimitService.html",[80,0.74,568,1.872]],["body/injectables/UserLimitService.html",[3,0.265,4,0.234,5,0.234,7,0.298,8,1.284,11,0.027,12,0.72,14,0.928,15,1.308,16,0.494,17,0.607,20,0.265,21,0.063,23,2.098,24,1.687,26,0.017,27,0.017,53,1.515,55,0.563,56,1.638,57,1.936,58,2.383,65,1.309,68,0.558,80,0.973,81,1.515,90,2.233,107,1.471,108,1.199,109,1.199,164,3.394,180,1.687,182,2.461,206,2.461,211,1.778,241,1.947,242,2.383,243,4.079,247,3.299,259,2.947,267,2.383,268,1.778,277,2.383,278,2.687,317,2.713,338,2.267,349,1.778,538,2.383,544,2.713,545,2.713,546,3.755,553,2.959,568,2.461,680,1.941,767,3.755,772,2.713,773,4.447,774,5.101,775,3.212,776,4.447,777,3.212,778,3.212,779,3.212,780,3.212,781,3.212,782,5.101,783,3.212,784,3.212,785,3.212,786,4.447,787,3.212,788,3.212,789,5.101,790,3.212,791,3.212,792,3.212,793,3.212]],["title/controllers/UsersController.html",[0,1.724,794,2.251]],["body/controllers/UsersController.html",[0,1.302,2,1.302,3,0.211,4,0.186,5,0.186,7,0.237,8,1.089,10,1.882,11,0.027,12,0.803,14,1.431,15,1.253,16,0.511,17,0.483,20,0.211,21,0.05,22,1.118,23,1.204,24,1.64,26,0.014,27,0.014,68,0.737,88,2.156,90,2.744,91,3.329,98,2.156,99,4.185,100,5.507,101,3.186,104,2.995,107,1.64,108,1.337,109,1.337,110,2.995,122,3.924,139,2.156,140,3.789,141,2.156,149,2.28,151,1.699,153,1.537,154,1.204,155,1.204,156,1.543,158,2.156,161,1.923,168,2.156,169,3.186,173,3.186,175,4.185,209,2.17,211,2.088,349,2.743,357,1.413,379,1.894,404,1.699,486,2.711,550,2.995,684,1.699,794,2.51,795,2.156,796,3.186,797,3.186,798,3.789,799,2.553,800,2.553,801,2.553,802,2.156,803,2.553,804,2.553,805,3.186,806,2.156,807,2.553,808,2.553,809,2.553,810,2.156,811,2.553,812,2.553,813,2.553,814,2.553,815,2.553,816,2.483,817,2.156,818,2.553,819,2.553,820,2.553,821,2.553,822,2.553,823,2.799,824,2.553,825,2.553,826,2.156,827,2.156,828,2.553,829,1.894,830,2.553,831,2.553,832,2.553,833,2.553,834,2.553,835,2.553,836,2.553,837,2.553,838,2.553,839,2.553,840,2.553,841,2.553,842,2.553,843,2.553,844,2.553]],["title/modules/UsersModule.html",[28,1.284,43,2.044]],["body/modules/UsersModule.html",[2,2.675,3,0.34,4,0.3,5,0.3,11,0.026,16,0.518,17,0.779,20,0.34,21,0.081,26,0.02,27,0.02,28,2.192,30,1.944,31,1.944,32,2.28,33,2.28,34,1.944,35,3.195,36,3.195,43,3.941,44,2.904,45,2.28,46,2.101,48,2.49,52,2.742,53,1.944,55,0.722,56,2.101,227,3.057,794,3.842,816,3.762,817,3.48,845,3.48,846,3.48,847,3.48,848,4.121,849,4.121]],["title/injectables/UsersService.html",[80,0.74,816,1.872]],["body/injectables/UsersService.html",[3,0.139,4,0.123,5,0.123,7,0.157,8,0.79,11,0.027,12,0.707,14,1.146,15,1.159,16,0.386,17,0.319,20,0.139,21,0.033,23,0.796,24,1.142,26,0.01,27,0.01,53,0.796,55,1.102,56,0.861,57,1.507,68,0.547,80,0.599,81,0.796,90,2.484,104,2.086,105,3.096,107,1.443,108,1.177,109,1.177,110,2.399,153,1.617,154,0.796,155,0.796,180,1.627,182,2.197,190,2.773,209,2.045,211,1.91,241,1.198,242,1.252,243,2.641,247,2.03,249,3.684,250,4.791,259,1.395,266,1.252,267,1.252,268,0.934,277,1.252,278,1.02,279,2.561,283,2.914,284,3.287,287,2.311,291,1.425,298,2.311,299,1.425,307,1.123,319,3.352,325,1.425,335,1.252,349,2.414,355,2.636,357,1.91,423,2.914,425,2.636,426,2.945,486,2.399,501,2.03,507,1.425,538,3.237,550,2.399,553,1.821,554,2.311,555,3.684,684,2.296,740,1.425,796,2.311,797,2.311,798,2.311,802,2.311,805,2.311,806,2.311,810,2.311,816,1.514,826,1.425,827,1.425,850,1.425,851,2.737,852,1.688,853,2.737,854,1.688,855,1.688,856,1.688,857,1.688,858,1.688,859,1.688,860,1.688,861,2.737,862,3.451,863,3.451,864,1.688,865,1.688,866,1.688,867,1.688,868,1.688,869,1.688,870,1.688,871,1.688,872,1.688,873,1.688,874,1.688,875,1.688,876,1.688,877,1.688,878,1.688,879,1.688,880,1.688,881,1.688,882,4.671,883,2.737,884,2.737,885,1.688,886,1.688,887,1.688,888,2.737,889,1.688,890,1.688,891,1.688,892,3.451,893,1.688,894,1.688,895,1.688,896,1.688,897,1.688,898,3.451,899,1.688,900,1.688,901,1.688,902,1.688,903,3.451,904,1.688,905,1.688,906,1.688,907,1.688,908,1.688,909,4.362,910,4.362,911,4.362,912,1.688,913,1.688,914,1.688,915,3.451,916,1.688,917,1.688,918,4.362,919,3.451,920,1.688,921,1.688,922,1.688,923,1.688,924,2.737,925,2.737,926,2.737,927,2.737,928,1.688,929,2.737,930,1.688,931,1.688,932,2.737,933,1.688,934,1.688,935,1.688,936,1.688,937,1.688]],["title/coverage.html",[938,3.418]],["body/coverage.html",[0,2.424,1,1.879,5,0.205,6,2.385,11,0.027,18,1.563,21,0.116,26,0.016,27,0.016,34,1.332,55,0.495,57,1.072,68,0.354,80,1.293,82,2.385,86,1.879,87,2.385,112,1.707,117,1.707,129,1.707,143,1.563,149,1.707,151,1.879,156,1.707,161,1.44,163,1.563,164,2.702,190,1.44,219,1.707,237,2.385,245,1.563,343,2.454,344,2.385,403,3.142,404,1.879,406,2.385,407,2.385,428,2.385,429,2.385,443,2.095,444,2.385,445,2.385,460,3.013,461,2.385,464,2.385,469,2.454,470,1.879,472,3.013,475,1.707,494,2.385,516,2.095,517,2.385,518,2.385,550,1.707,551,2.385,552,2.385,568,1.563,572,2.385,573,2.385,581,2.385,623,2.385,680,2.454,681,3.013,682,3.013,691,2.385,694,2.095,708,2.095,709,2.385,710,2.385,720,2.385,763,2.385,772,2.385,794,1.879,795,2.385,816,1.563,823,2.095,829,2.095,850,2.385,938,2.095,939,2.385,940,2.824,941,2.824,942,6.907,943,5.508,944,4.755,945,2.824,946,3.429,947,6.046,948,6.327,949,6.046,950,3.429,951,3.429,952,2.385,953,3.429,954,3.429,955,2.385,956,4.061,957,4.061,958,4.061,959,2.385,960,2.824,961,2.824,962,2.824]],["title/dependencies.html",[31,1.918,963,2.389]],["body/dependencies.html",[11,0.027,17,0.814,21,0.106,26,0.021,27,0.021,31,2.03,51,2.194,53,2.03,160,3.193,222,3.193,226,2.864,230,2.864,268,2.382,270,3.634,416,2.864,440,2.194,592,4.555,610,3.193,611,3.634,634,3.634,964,4.304,965,5.891,966,4.304,967,5.394,968,4.304,969,4.304,970,4.304,971,4.304,972,4.304,973,4.304,974,4.304,975,4.304,976,4.304,977,4.304,978,4.304,979,4.304,980,4.304,981,4.304,982,4.304,983,4.304,984,4.304,985,4.304,986,4.304,987,4.304]],["title/miscellaneous/enumerations.html",[988,1.565,989,3.433]],["body/miscellaneous/enumerations.html",[7,0.404,11,0.026,26,0.021,27,0.021,55,0.953,153,2.215,274,4.034,275,4.591,307,3.618,308,4.591,336,3.618,375,3.286,478,3.618,688,4.034,690,3.618,988,2.412,989,3.681,990,3.681,991,5.437,992,5.437,993,5.437,994,5.437,995,4.359,996,5.724,997,5.437,998,5.437,999,5.437]],["title/miscellaneous/functions.html",[988,1.565,1000,3.433]],["body/miscellaneous/functions.html",[7,0.487,11,0.023,26,0.023,27,0.023,34,3.029,959,4.437,988,2.908,1000,4.437,1001,5.255]],["title/index.html",[7,0.262,1002,2.829,1003,2.829]],["body/index.html",[4,0.201,11,0.025,26,0.015,27,0.015,46,2.903,78,3.378,204,2.336,243,1.841,279,4.225,330,2.336,331,2.336,473,1.672,475,1.672,610,4.461,690,1.841,938,2.053,939,3.378,1004,2.767,1005,2.767,1006,4.7,1007,4.001,1008,2.767,1009,2.767,1010,2.767,1011,2.767,1012,4.001,1013,4.7,1014,2.767,1015,2.767,1016,5.149,1017,5.149,1018,6.013,1019,2.767,1020,5.872,1021,2.767,1022,2.767,1023,2.767,1024,4.001,1025,2.767,1026,2.767,1027,4.7,1028,2.767,1029,4.001,1030,2.767,1031,2.767,1032,2.767,1033,2.767,1034,2.767,1035,5.149,1036,5.694,1037,4.001,1038,2.767,1039,2.767,1040,2.767,1041,2.767,1042,4.001,1043,5.149,1044,2.767,1045,4.001,1046,2.767,1047,2.767,1048,4.001,1049,5.694,1050,5.149,1051,2.767,1052,4.001,1053,2.767,1054,2.767,1055,2.767,1056,2.767,1057,5.149,1058,2.767,1059,2.767,1060,2.767,1061,2.767,1062,4.001,1063,2.767,1064,2.767,1065,2.767,1066,2.767,1067,4.001,1068,2.767,1069,2.767,1070,2.767,1071,4.001,1072,2.767,1073,2.767,1074,4.348,1075,4.001,1076,2.767,1077,2.767,1078,2.767,1079,2.767,1080,2.767,1081,2.767,1082,2.767,1083,2.767,1084,4.001,1085,2.767,1086,2.767,1087,2.767,1088,2.767,1089,4.7,1090,2.767,1091,2.767,1092,2.767,1093,2.767,1094,2.767,1095,4.001,1096,2.767,1097,2.767,1098,2.767,1099,2.767,1100,2.767,1101,4.001,1102,2.767,1103,2.767,1104,2.767,1105,4.001,1106,4.001,1107,2.767,1108,2.767,1109,2.767,1110,2.767,1111,2.767,1112,2.767,1113,2.767,1114,2.767,1115,2.767,1116,2.767,1117,2.767,1118,2.336,1119,2.767,1120,2.767,1121,2.767,1122,2.767,1123,2.767,1124,2.767,1125,2.336]],["title/modules.html",[30,2.173]],["body/modules.html",[11,0.022,26,0.022,27,0.022,29,3.269,30,2.317,40,2.968,41,2.718,42,2.718,43,2.968,1074,5.575,1126,6.602,1127,6.602,1128,6.602]],["title/overview.html",[1129,3.89]],["body/overview.html",[2,1.741,11,0.026,18,2.914,26,0.018,27,0.018,28,1.296,29,4.398,30,1.611,31,1.611,32,1.89,33,1.89,34,1.611,35,1.89,36,1.89,37,2.883,38,2.883,39,2.883,40,3.994,41,3.557,42,3.448,43,3.681,44,2.566,45,1.89,46,1.741,72,2.272,81,1.611,143,3.448,161,2.88,163,3.126,215,2.883,217,2.883,218,2.883,219,3.182,245,3.448,405,2.063,427,1.611,471,2.534,499,2.534,500,3.086,565,2.883,566,2.883,567,2.883,568,3.448,605,2.883,606,2.883,607,2.883,700,2.883,701,2.883,816,3.448,845,2.883,846,2.883,847,2.883,1129,2.883,1130,4.637]],["title/properties.html",[345,1.256,963,2.389]],["body/properties.html",[11,0.026,26,0.023,27,0.023,345,1.605,473,3.139,1118,4.386,1125,4.386,1131,5.195,1132,5.195,1133,5.195]],["title/miscellaneous/variables.html",[988,1.565,1134,3.433]],["body/miscellaneous/variables.html",[7,0.294,11,0.027,15,1.197,26,0.017,27,0.017,55,0.555,65,1.29,68,0.721,151,3.827,153,1.29,209,1.387,352,3.369,357,2.802,378,4.62,402,2.661,472,2.35,473,3.763,474,4.856,475,2.661,476,3.267,477,2.675,478,2.93,479,4.275,480,2.675,481,3.369,482,3.719,483,2.675,484,3.369,485,2.675,486,1.914,487,2.675,488,2.675,489,2.675,490,2.675,491,2.675,492,2.675,493,2.675,502,2.675,506,3.719,680,2.661,681,2.35,682,3.267,683,4.275,685,3.719,686,4.275,687,3.719,688,2.35,689,3.719,690,2.108,694,3.267,823,3.756,829,3.267,946,2.675,950,2.675,951,4.275,952,3.719,953,2.675,954,4.275,955,3.719,988,1.753,990,3.719,996,5.258,1134,2.675,1135,4.404,1136,3.167,1137,3.167,1138,4.404,1139,3.167,1140,3.167,1141,3.167]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/Company.html":{},"guards/CompanyAccessGuard.html":{},"classes/CompleteRegistrationDto.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateInvitationDto.html":{},"classes/CreateSuperAdminDto.html":{},"interfaces/FeatureConfig.html":{},"guards/FeatureGuard.html":{},"classes/FeatureRestrictionFilter.html":{},"classes/FilterUsersDto.html":{},"modules/GuardsModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"interfaces/PlanLimits.html":{},"guards/RolesGuard.html":{},"classes/UpdateUserProfileDto.html":{},"entities/User.html":{},"guards/UserLimitGuard.html":{},"injectables/UserLimitService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":942,"title":{},"body":{"coverage.html":{}}}],["0.0.1",{"_index":1132,"title":{},"body":{"properties.html":{}}}],["0.14.1",{"_index":973,"title":{},"body":{"dependencies.html":{}}}],["0.2.2",{"_index":984,"title":{},"body":{"dependencies.html":{}}}],["0.3.20",{"_index":987,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":972,"title":{},"body":{"dependencies.html":{}}}],["0.7.0",{"_index":978,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":948,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":945,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":943,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":949,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":956,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":958,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":957,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":944,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":501,"title":{},"body":{"guards/FeatureGuard.html":{},"guards/RolesGuard.html":{},"injectables/UsersService.html":{}}}],["1.4.7",{"_index":976,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":335,"title":{},"body":{"injectables/AuthService.html":{},"entities/User.html":{},"injectables/UsersService.html":{}}}],["1000",{"_index":199,"title":{},"body":{"controllers/AuthController.html":{}}}],["11.0.0",{"_index":967,"title":{},"body":{"dependencies.html":{}}}],["11.0.1",{"_index":965,"title":{},"body":{"dependencies.html":{}}}],["11.0.5",{"_index":968,"title":{},"body":{"dependencies.html":{}}}],["15",{"_index":685,"title":{},"body":{"interfaces/PlanLimits.html":{},"miscellaneous/variables.html":{}}}],["2",{"_index":500,"title":{},"body":{"guards/FeatureGuard.html":{},"guards/RolesGuard.html":{},"entities/User.html":{},"overview.html":{}}}],["2.0.2",{"_index":964,"title":{},"body":{"dependencies.html":{}}}],["24",{"_index":197,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/MailService.html":{}}}],["3",{"_index":499,"title":{},"body":{"guards/FeatureGuard.html":{},"guards/RolesGuard.html":{},"overview.html":{}}}],["30",{"_index":687,"title":{},"body":{"interfaces/PlanLimits.html":{},"miscellaneous/variables.html":{}}}],["4",{"_index":701,"title":{},"body":{"guards/RolesGuard.html":{},"overview.html":{}}}],["4.0.0",{"_index":966,"title":{},"body":{"dependencies.html":{}}}],["4.0.1",{"_index":979,"title":{},"body":{"dependencies.html":{}}}],["403",{"_index":533,"title":{},"body":{"classes/FeatureRestrictionFilter.html":{}}}],["5",{"_index":700,"title":{},"body":{"guards/RolesGuard.html":{},"overview.html":{}}}],["5.1.1",{"_index":970,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":689,"title":{},"body":{"interfaces/PlanLimits.html":{},"miscellaneous/variables.html":{}}}],["6.10.0",{"_index":977,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":198,"title":{},"body":{"controllers/AuthController.html":{}}}],["7",{"_index":1130,"title":{},"body":{"overview.html":{}}}],["7.8.1",{"_index":986,"title":{},"body":{"dependencies.html":{}}}],["8.13.3",{"_index":981,"title":{},"body":{"dependencies.html":{}}}],["aby",{"_index":664,"title":{},"body":{"injectables/MailService.html":{}}}],["access",{"_index":423,"title":{},"body":{"guards/CompanyAccessGuard.html":{},"injectables/UsersService.html":{}}}],["access.decorator",{"_index":825,"title":{},"body":{"controllers/UsersController.html":{}}}],["access.decorator.ts",{"_index":951,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["access.guard",{"_index":821,"title":{},"body":{"controllers/UsersController.html":{}}}],["access.guard.ts",{"_index":407,"title":{},"body":{"guards/CompanyAccessGuard.html":{},"coverage.html":{}}}],["access.guard.ts:6",{"_index":411,"title":{},"body":{"guards/CompanyAccessGuard.html":{}}}],["access.guard.ts:9",{"_index":414,"title":{},"body":{"guards/CompanyAccessGuard.html":{}}}],["active",{"_index":998,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["add",{"_index":897,"title":{},"body":{"injectables/UsersService.html":{}}}],["admin",{"_index":308,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/enumerations.html":{}}}],["administrator",{"_index":313,"title":{},"body":{"injectables/AuthService.html":{}}}],["adresem",{"_index":288,"title":{},"body":{"injectables/AuthService.html":{}}}],["advanced",{"_index":482,"title":{},"body":{"interfaces/FeatureConfig.html":{},"miscellaneous/variables.html":{}}}],["advanced_analytics",{"_index":487,"title":{},"body":{"interfaces/FeatureConfig.html":{},"miscellaneous/variables.html":{}}}],["aiom",{"_index":657,"title":{},"body":{"injectables/MailService.html":{}}}],["aktualizacj",{"_index":545,"title":{},"body":{"classes/FeatureRestrictionFilter.html":{},"injectables/UserLimitService.html":{}}}],["allow",{"_index":935,"title":{},"body":{"injectables/UsersService.html":{}}}],["allowed",{"_index":782,"title":{},"body":{"injectables/UserLimitService.html":{}}}],["allowing",{"_index":1063,"title":{},"body":{"index.html":{}}}],["already",{"_index":280,"title":{},"body":{"injectables/AuthService.html":{}}}],["amazing",{"_index":1111,"title":{},"body":{"index.html":{}}}],["analytics",{"_index":488,"title":{},"body":{"interfaces/FeatureConfig.html":{},"miscellaneous/variables.html":{}}}],["andwhere('user.role",{"_index":887,"title":{},"body":{"injectables/UsersService.html":{}}}],["ani",{"_index":931,"title":{},"body":{"injectables/UsersService.html":{}}}],["app.controller",{"_index":54,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["application",{"_index":1036,"title":{},"body":{"index.html":{}}}],["applications",{"_index":1012,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":29,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":18,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["argumentshost",{"_index":524,"title":{},"body":{"classes/FeatureRestrictionFilter.html":{}}}],["async",{"_index":90,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"guards/UserLimitGuard.html":{},"injectables/UserLimitService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["auth",{"_index":89,"title":{},"body":{"controllers/AuthController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{}}}],["auth.controller",{"_index":223,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.guard",{"_index":158,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["auth.guard.ts",{"_index":573,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["auth.guard.ts:6",{"_index":578,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["auth.service",{"_index":144,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["auth/auth.module",{"_index":60,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/decorators/roles.decorator",{"_index":822,"title":{},"body":{"controllers/UsersController.html":{}}}],["auth/guards/jwt",{"_index":818,"title":{},"body":{"controllers/UsersController.html":{}}}],["auth/guards/roles.guard",{"_index":819,"title":{},"body":{"controllers/UsersController.html":{}}}],["authcontroller",{"_index":86,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authguard",{"_index":580,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authguard('jwt",{"_index":575,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authmodule",{"_index":40,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":1118,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authservice",{"_index":143,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["await",{"_index":182,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/MailService.html":{},"guards/UserLimitGuard.html":{},"injectables/UserLimitService.html":{},"injectables/UsersService.html":{}}}],["aws",{"_index":1052,"title":{},"body":{"index.html":{}}}],["backers",{"_index":1112,"title":{},"body":{"index.html":{}}}],["badrequestexception",{"_index":266,"title":{},"body":{"injectables/AuthService.html":{},"guards/UserLimitGuard.html":{},"injectables/UsersService.html":{}}}],["badrequestexception('nie",{"_index":918,"title":{},"body":{"injectables/UsersService.html":{}}}],["badrequestexception(result.message",{"_index":771,"title":{},"body":{"guards/UserLimitGuard.html":{}}}],["base",{"_index":880,"title":{},"body":{"injectables/UsersService.html":{}}}],["based",{"_index":1047,"title":{},"body":{"index.html":{}}}],["basic",{"_index":478,"title":{},"body":{"interfaces/FeatureConfig.html":{},"interfaces/PlanLimits.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["bcrypt",{"_index":270,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["bcrypt.hash(password",{"_index":334,"title":{},"body":{"injectables/AuthService.html":{}}}],["blocked",{"_index":999,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["board",{"_index":1104,"title":{},"body":{"index.html":{}}}],["body",{"_index":140,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["boolean",{"_index":366,"title":{},"body":{"entities/Company.html":{},"guards/CompanyAccessGuard.html":{},"guards/FeatureGuard.html":{},"guards/RolesGuard.html":{},"entities/User.html":{}}}],["bootstrap",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/GuardsModule.html":{},"modules/MailModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":1128,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1126,"title":{},"body":{"modules.html":{}}}],["building",{"_index":1007,"title":{},"body":{"index.html":{}}}],["business",{"_index":688,"title":{},"body":{"interfaces/PlanLimits.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["bypass",{"_index":505,"title":{},"body":{"guards/FeatureGuard.html":{},"guards/UserLimitGuard.html":{}}}],["can't",{"_index":915,"title":{},"body":{"injectables/UsersService.html":{}}}],["canactivate",{"_index":408,"title":{},"body":{"guards/CompanyAccessGuard.html":{},"guards/FeatureGuard.html":{},"guards/RolesGuard.html":{},"guards/UserLimitGuard.html":{}}}],["canactivate(context",{"_index":412,"title":{},"body":{"guards/CompanyAccessGuard.html":{},"guards/FeatureGuard.html":{},"guards/RolesGuard.html":{},"guards/UserLimitGuard.html":{}}}],["catch",{"_index":520,"title":{},"body":{"classes/FeatureRestrictionFilter.html":{}}}],["catch(exception",{"_index":521,"title":{},"body":{"classes/FeatureRestrictionFilter.html":{}}}],["catch(httpexception",{"_index":528,"title":{},"body":{"classes/FeatureRestrictionFilter.html":{}}}],["certs",{"_index":646,"title":{},"body":{"injectables/MailService.html":{}}}],["change",{"_index":916,"title":{},"body":{"injectables/UsersService.html":{}}}],["changerole",{"_index":851,"title":{},"body":{"injectables/UsersService.html":{}}}],["changerole(userid",{"_index":853,"title":{},"body":{"injectables/UsersService.html":{}}}],["changeuserrole",{"_index":91,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/UsersController.html":{}}}],["changeuserrole(undefined",{"_index":98,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["changeuserrole(userid",{"_index":248,"title":{},"body":{"injectables/AuthService.html":{}}}],["channel",{"_index":1077,"title":{},"body":{"index.html":{}}}],["check",{"_index":279,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["checkuserlimit",{"_index":773,"title":{},"body":{"injectables/UserLimitService.html":{}}}],["checkuserlimit(userid",{"_index":776,"title":{},"body":{"injectables/UserLimitService.html":{}}}],["ci",{"_index":677,"title":{},"body":{"injectables/MailService.html":{}}}],["city",{"_index":346,"title":{},"body":{"entities/Company.html":{},"classes/CreateCompanyDto.html":{},"classes/UpdateUserProfileDto.html":{},"entities/User.html":{}}}],["class",{"_index":21,"title":{"classes/CompleteRegistrationDto.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateInvitationDto.html":{},"classes/CreateSuperAdminDto.html":{},"classes/FeatureRestrictionFilter.html":{},"classes/FilterUsersDto.html":{},"classes/UpdateUserProfileDto.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/Company.html":{},"guards/CompanyAccessGuard.html":{},"classes/CompleteRegistrationDto.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateInvitationDto.html":{},"classes/CreateSuperAdminDto.html":{},"guards/FeatureGuard.html":{},"classes/FeatureRestrictionFilter.html":{},"classes/FilterUsersDto.html":{},"modules/GuardsModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"guards/RolesGuard.html":{},"classes/UpdateUserProfileDto.html":{},"entities/User.html":{},"guards/UserLimitGuard.html":{},"injectables/UserLimitService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":427,"title":{},"body":{"classes/CompleteRegistrationDto.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateInvitationDto.html":{},"classes/CreateSuperAdminDto.html":{},"classes/FeatureRestrictionFilter.html":{},"classes/FilterUsersDto.html":{},"classes/UpdateUserProfileDto.html":{},"overview.html":{}}}],["clear",{"_index":184,"title":{},"body":{"controllers/AuthController.html":{}}}],["clicks",{"_index":1062,"title":{},"body":{"index.html":{}}}],["client",{"_index":167,"title":{},"body":{"controllers/AuthController.html":{}}}],["client')@useguards(jwtauthguard",{"_index":125,"title":{},"body":{"controllers/AuthController.html":{}}}],["cloud",{"_index":1046,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":215,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":217,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":216,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":218,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_guardsmodule",{"_index":565,"title":{},"body":{"modules/GuardsModule.html":{},"overview.html":{}}}],["cluster_guardsmodule_exports",{"_index":567,"title":{},"body":{"modules/GuardsModule.html":{},"overview.html":{}}}],["cluster_guardsmodule_providers",{"_index":566,"title":{},"body":{"modules/GuardsModule.html":{},"overview.html":{}}}],["cluster_mailmodule",{"_index":605,"title":{},"body":{"modules/MailModule.html":{},"overview.html":{}}}],["cluster_mailmodule_exports",{"_index":607,"title":{},"body":{"modules/MailModule.html":{},"overview.html":{}}}],["cluster_mailmodule_providers",{"_index":606,"title":{},"body":{"modules/MailModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":845,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_exports",{"_index":846,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_providers",{"_index":847,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["column",{"_index":369,"title":{},"body":{"entities/Company.html":{},"entities/User.html":{}}}],["column('decimal",{"_index":752,"title":{},"body":{"entities/User.html":{}}}],["column({default",{"_index":367,"title":{},"body":{"entities/Company.html":{},"entities/User.html":{}}}],["column({nullable",{"_index":358,"title":{},"body":{"entities/Company.html":{},"entities/User.html":{}}}],["column({type",{"_index":376,"title":{},"body":{"entities/Company.html":{},"entities/User.html":{}}}],["column({unique",{"_index":728,"title":{},"body":{"entities/User.html":{}}}],["come",{"_index":1068,"title":{},"body":{"index.html":{}}}],["comes",{"_index":698,"title":{},"body":{"guards/RolesGuard.html":{}}}],["companies",{"_index":424,"title":{},"body":{"guards/CompanyAccessGuard.html":{}}}],["company",{"_index":57,"title":{"entities/Company.html":{}},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"entities/Company.html":{},"guards/CompanyAccessGuard.html":{},"guards/FeatureGuard.html":{},"modules/GuardsModule.html":{},"entities/User.html":{},"injectables/UserLimitService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["company.dto.ts",{"_index":445,"title":{},"body":{"classes/CreateCompanyDto.html":{},"coverage.html":{}}}],["company.dto.ts:10",{"_index":449,"title":{},"body":{"classes/CreateCompanyDto.html":{}}}],["company.dto.ts:14",{"_index":454,"title":{},"body":{"classes/CreateCompanyDto.html":{}}}],["company.dto.ts:18",{"_index":447,"title":{},"body":{"classes/CreateCompanyDto.html":{}}}],["company.dto.ts:22",{"_index":456,"title":{},"body":{"classes/CreateCompanyDto.html":{}}}],["company.dto.ts:26",{"_index":450,"title":{},"body":{"classes/CreateCompanyDto.html":{}}}],["company.dto.ts:30",{"_index":455,"title":{},"body":{"classes/CreateCompanyDto.html":{}}}],["company.dto.ts:6",{"_index":452,"title":{},"body":{"classes/CreateCompanyDto.html":{}}}],["company.entity",{"_index":758,"title":{},"body":{"entities/User.html":{}}}],["company.id",{"_index":788,"title":{},"body":{"injectables/UserLimitService.html":{}}}],["company.plan",{"_index":793,"title":{},"body":{"injectables/UserLimitService.html":{}}}],["company.users",{"_index":761,"title":{},"body":{"entities/User.html":{}}}],["company.users)@joincolumn({name",{"_index":724,"title":{},"body":{"entities/User.html":{}}}],["company_access_key",{"_index":952,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["companyaccess",{"_index":823,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["companyaccessguard",{"_index":404,"title":{"guards/CompanyAccessGuard.html":{}},"body":{"guards/CompanyAccessGuard.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["companyid",{"_index":259,"title":{},"body":{"injectables/AuthService.html":{},"guards/CompanyAccessGuard.html":{},"classes/FilterUsersDto.html":{},"injectables/JwtStrategy.html":{},"entities/User.html":{},"injectables/UserLimitService.html":{},"injectables/UsersService.html":{}}}],["companyname",{"_index":629,"title":{},"body":{"injectables/MailService.html":{}}}],["companyplan",{"_index":375,"title":{},"body":{"entities/Company.html":{},"interfaces/FeatureConfig.html":{},"guards/FeatureGuard.html":{},"interfaces/PlanLimits.html":{},"miscellaneous/enumerations.html":{}}}],["companyplan.basic",{"_index":402,"title":{},"body":{"entities/Company.html":{},"interfaces/FeatureConfig.html":{},"guards/FeatureGuard.html":{},"interfaces/PlanLimits.html":{},"miscellaneous/variables.html":{}}}],["companyplan.business",{"_index":481,"title":{},"body":{"interfaces/FeatureConfig.html":{},"guards/FeatureGuard.html":{},"interfaces/PlanLimits.html":{},"miscellaneous/variables.html":{}}}],["companyplan.enterprise",{"_index":484,"title":{},"body":{"interfaces/FeatureConfig.html":{},"guards/FeatureGuard.html":{},"interfaces/PlanLimits.html":{},"miscellaneous/variables.html":{}}}],["companyrepository",{"_index":774,"title":{},"body":{"injectables/UserLimitService.html":{}}}],["complete",{"_index":651,"title":{},"body":{"injectables/MailService.html":{}}}],["completeregistration",{"_index":92,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["completeregistration(completeregistrationdto",{"_index":111,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["completeregistrationdto",{"_index":112,"title":{"classes/CompleteRegistrationDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CompleteRegistrationDto.html":{},"coverage.html":{}}}],["condition",{"_index":889,"title":{},"body":{"injectables/UsersService.html":{}}}],["conditions",{"_index":881,"title":{},"body":{"injectables/UsersService.html":{}}}],["config",{"_index":614,"title":{},"body":{"modules/MailModule.html":{}}}],["config.get('email_from",{"_index":622,"title":{},"body":{"modules/MailModule.html":{}}}],["config.get('email_password",{"_index":620,"title":{},"body":{"modules/MailModule.html":{}}}],["config.get('email_user",{"_index":618,"title":{},"body":{"modules/MailModule.html":{}}}],["config.get('smtp_secure",{"_index":617,"title":{},"body":{"modules/MailModule.html":{}}}],["config/features.config",{"_index":498,"title":{},"body":{"guards/FeatureGuard.html":{}}}],["config/plan",{"_index":778,"title":{},"body":{"injectables/UserLimitService.html":{}}}],["configmodule",{"_index":49,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":63,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":50,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{}}}],["configservice.get('database_url",{"_index":71,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('jwt_expiration_time')}s",{"_index":236,"title":{},"body":{"modules/AuthModule.html":{}}}],["configservice.get('jwt_secret",{"_index":233,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["configservice.get('node_env",{"_index":74,"title":{},"body":{"modules/AppModule.html":{}}}],["const",{"_index":180,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/CompanyAccessGuard.html":{},"interfaces/FeatureConfig.html":{},"guards/FeatureGuard.html":{},"classes/FeatureRestrictionFilter.html":{},"injectables/JwtStrategy.html":{},"injectables/MailService.html":{},"interfaces/PlanLimits.html":{},"guards/RolesGuard.html":{},"guards/UserLimitGuard.html":{},"injectables/UserLimitService.html":{},"injectables/UsersService.html":{}}}],["constructor",{"_index":241,"title":{},"body":{"injectables/AuthService.html":{},"guards/CompanyAccessGuard.html":{},"guards/FeatureGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/MailService.html":{},"guards/RolesGuard.html":{},"guards/UserLimitGuard.html":{},"injectables/UserLimitService.html":{},"injectables/UsersService.html":{}}}],["constructor(configservice",{"_index":584,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/MailService.html":{}}}],["constructor(private",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"guards/CompanyAccessGuard.html":{},"guards/FeatureGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/MailService.html":{},"guards/RolesGuard.html":{},"guards/UserLimitGuard.html":{},"controllers/UsersController.html":{}}}],["constructor(reflector",{"_index":409,"title":{},"body":{"guards/CompanyAccessGuard.html":{},"guards/FeatureGuard.html":{},"guards/RolesGuard.html":{}}}],["constructor(userlimitservice",{"_index":764,"title":{},"body":{"guards/UserLimitGuard.html":{}}}],["constructor(userrepository",{"_index":242,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserLimitService.html":{},"injectables/UsersService.html":{}}}],["context",{"_index":415,"title":{},"body":{"guards/CompanyAccessGuard.html":{},"guards/FeatureGuard.html":{},"guards/RolesGuard.html":{},"guards/UserLimitGuard.html":{}}}],["context.getclass",{"_index":697,"title":{},"body":{"guards/RolesGuard.html":{}}}],["context.gethandler",{"_index":504,"title":{},"body":{"guards/FeatureGuard.html":{},"guards/RolesGuard.html":{}}}],["context.switchtohttp().getrequest",{"_index":419,"title":{},"body":{"guards/CompanyAccessGuard.html":{},"guards/FeatureGuard.html":{},"guards/RolesGuard.html":{},"guards/UserLimitGuard.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/UsersController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":166,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('users",{"_index":832,"title":{},"body":{"controllers/UsersController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["cookie",{"_index":974,"title":{},"body":{"dependencies.html":{}}}],["count",{"_index":904,"title":{},"body":{"injectables/UsersService.html":{}}}],["courses",{"_index":1083,"title":{},"body":{"index.html":{}}}],["coverage",{"_index":938,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":291,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["createcompanydto",{"_index":443,"title":{"classes/CreateCompanyDto.html":{}},"body":{"classes/CreateCompanyDto.html":{},"coverage.html":{}}}],["createcompanymemberinvitation",{"_index":93,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["createcompanymemberinvitation(createinvitationdto",{"_index":116,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["createdat",{"_index":347,"title":{},"body":{"entities/Company.html":{},"entities/User.html":{}}}],["createdatecolumn",{"_index":360,"title":{},"body":{"entities/Company.html":{},"entities/User.html":{}}}],["createinvitationdto",{"_index":117,"title":{"classes/CreateInvitationDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateInvitationDto.html":{},"coverage.html":{}}}],["createnewclientinvitation",{"_index":94,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["createnewclientinvitation(createinvitationdto",{"_index":124,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["createsuperadmin",{"_index":95,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["createsuperadmin(@body",{"_index":213,"title":{},"body":{"controllers/AuthController.html":{}}}],["createsuperadmin(createsuperadmindto",{"_index":128,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["createsuperadmindto",{"_index":129,"title":{"classes/CreateSuperAdminDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateSuperAdminDto.html":{},"coverage.html":{}}}],["ctx",{"_index":529,"title":{},"body":{"classes/FeatureRestrictionFilter.html":{}}}],["ctx.getresponse",{"_index":531,"title":{},"body":{"classes/FeatureRestrictionFilter.html":{}}}],["currentplanlevel",{"_index":514,"title":{},"body":{"guards/FeatureGuard.html":{}}}],["currentuser",{"_index":250,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["currentuser.company.name",{"_index":321,"title":{},"body":{"injectables/AuthService.html":{}}}],["currentuser.companyid",{"_index":319,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["currentuser.firstname",{"_index":322,"title":{},"body":{"injectables/AuthService.html":{}}}],["currentuser.id",{"_index":917,"title":{},"body":{"injectables/UsersService.html":{}}}],["currentuser.lastname",{"_index":323,"title":{},"body":{"injectables/AuthService.html":{}}}],["currentuser.role",{"_index":882,"title":{},"body":{"injectables/UsersService.html":{}}}],["currentusercount",{"_index":786,"title":{},"body":{"injectables/UserLimitService.html":{}}}],["date",{"_index":293,"title":{},"body":{"injectables/AuthService.html":{},"entities/Company.html":{},"entities/User.html":{}}}],["declarations",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/GuardsModule.html":{},"modules/MailModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"entities/Company.html":{},"classes/CompleteRegistrationDto.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateInvitationDto.html":{},"classes/CreateSuperAdminDto.html":{},"classes/FilterUsersDto.html":{},"classes/UpdateUserProfileDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{}}}],["decorators/company",{"_index":824,"title":{},"body":{"controllers/UsersController.html":{}}}],["decorators/require",{"_index":830,"title":{},"body":{"controllers/UsersController.html":{}}}],["decorators/roles.decorator",{"_index":152,"title":{},"body":{"controllers/AuthController.html":{},"guards/RolesGuard.html":{}}}],["deeper",{"_index":1079,"title":{},"body":{"index.html":{}}}],["default",{"_index":378,"title":{},"body":{"entities/Company.html":{},"entities/User.html":{},"miscellaneous/variables.html":{}}}],["defaults",{"_index":621,"title":{},"body":{"modules/MailModule.html":{}}}],["defaultstrategy",{"_index":229,"title":{},"body":{"modules/AuthModule.html":{}}}],["defined",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"entities/Company.html":{},"guards/CompanyAccessGuard.html":{},"classes/CompleteRegistrationDto.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateInvitationDto.html":{},"classes/CreateSuperAdminDto.html":{},"guards/FeatureGuard.html":{},"classes/FeatureRestrictionFilter.html":{},"classes/FilterUsersDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/MailService.html":{},"guards/RolesGuard.html":{},"classes/UpdateUserProfileDto.html":{},"entities/User.html":{},"guards/UserLimitGuard.html":{},"injectables/UserLimitService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["dependencies",{"_index":31,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/GuardsModule.html":{},"modules/MailModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deploy",{"_index":1035,"title":{},"body":{"index.html":{}}}],["deploying",{"_index":1051,"title":{},"body":{"index.html":{}}}],["deployment",{"_index":1042,"title":{},"body":{"index.html":{}}}],["deploywith",{"_index":1061,"title":{},"body":{"index.html":{}}}],["desc",{"_index":902,"title":{},"body":{"injectables/UsersService.html":{}}}],["description",{"_index":473,"title":{},"body":{"interfaces/FeatureConfig.html":{},"interfaces/PlanLimits.html":{},"index.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["dev",{"_index":75,"title":{},"body":{"modules/AppModule.html":{}}}],["development",{"_index":1021,"title":{},"body":{"index.html":{}}}],["devtools",{"_index":1091,"title":{},"body":{"index.html":{}}}],["discord",{"_index":1076,"title":{},"body":{"index.html":{}}}],["dive",{"_index":1078,"title":{},"body":{"index.html":{}}}],["dla",{"_index":792,"title":{},"body":{"injectables/UserLimitService.html":{}}}],["documentation",{"_index":939,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["dokończ",{"_index":670,"title":{},"body":{"injectables/MailService.html":{}}}],["dokończy",{"_index":665,"title":{},"body":{"injectables/MailService.html":{}}}],["domain",{"_index":201,"title":{},"body":{"controllers/AuthController.html":{}}}],["don't",{"_index":913,"title":{},"body":{"injectables/UsersService.html":{}}}],["dostępna",{"_index":540,"title":{},"body":{"classes/FeatureRestrictionFilter.html":{}}}],["dołączenia",{"_index":678,"title":{},"body":{"injectables/MailService.html":{}}}],["dto/user/complete",{"_index":147,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dto/user/create",{"_index":145,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dto/user/filter",{"_index":826,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["e2e",{"_index":1030,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":1008,"title":{},"body":{"index.html":{}}}],["efficiently",{"_index":1041,"title":{},"body":{"index.html":{}}}],["email",{"_index":177,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"entities/Company.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateInvitationDto.html":{},"classes/CreateSuperAdminDto.html":{},"injectables/JwtStrategy.html":{},"injectables/MailService.html":{},"entities/User.html":{}}}],["employee",{"_index":485,"title":{},"body":{"interfaces/FeatureConfig.html":{},"miscellaneous/variables.html":{}}}],["ensure",{"_index":1039,"title":{},"body":{"index.html":{}}}],["enterprise",{"_index":690,"title":{},"body":{"interfaces/PlanLimits.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["entities",{"_index":72,"title":{},"body":{"modules/AppModule.html":{},"entities/Company.html":{},"entities/User.html":{},"overview.html":{}}}],["entities/company.entity",{"_index":58,"title":{},"body":{"modules/AppModule.html":{},"modules/GuardsModule.html":{},"injectables/UserLimitService.html":{}}}],["entities/user.entity",{"_index":56,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/GuardsModule.html":{},"injectables/UserLimitService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["entity",{"_index":343,"title":{"entities/Company.html":{},"entities/User.html":{}},"body":{"entities/Company.html":{},"entities/User.html":{},"coverage.html":{}}}],["entity('companies",{"_index":400,"title":{},"body":{"entities/Company.html":{}}}],["entity('users",{"_index":759,"title":{},"body":{"entities/User.html":{}}}],["enum",{"_index":377,"title":{},"body":{"entities/Company.html":{},"entities/User.html":{}}}],["enumerations",{"_index":989,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enums/company",{"_index":397,"title":{},"body":{"entities/Company.html":{},"interfaces/FeatureConfig.html":{},"guards/FeatureGuard.html":{},"interfaces/PlanLimits.html":{}}}],["enums/user",{"_index":154,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/CompanyAccessGuard.html":{},"classes/FilterUsersDto.html":{},"guards/RolesGuard.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["err",{"_index":579,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["error",{"_index":547,"title":{},"body":{"classes/FeatureRestrictionFilter.html":{}}}],["error('jwt_secret",{"_index":594,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["example",{"_index":1017,"title":{},"body":{"index.html":{}}}],["exception",{"_index":526,"title":{},"body":{"classes/FeatureRestrictionFilter.html":{}}}],["exception.getstatus",{"_index":532,"title":{},"body":{"classes/FeatureRestrictionFilter.html":{}}}],["exceptionfilter",{"_index":519,"title":{},"body":{"classes/FeatureRestrictionFilter.html":{}}}],["executioncontext",{"_index":413,"title":{},"body":{"guards/CompanyAccessGuard.html":{},"guards/FeatureGuard.html":{},"guards/RolesGuard.html":{},"guards/UserLimitGuard.html":{}}}],["existing",{"_index":185,"title":{},"body":{"controllers/AuthController.html":{}}}],["existinguser",{"_index":282,"title":{},"body":{"injectables/AuthService.html":{}}}],["exists",{"_index":281,"title":{},"body":{"injectables/AuthService.html":{}}}],["experience",{"_index":1081,"title":{},"body":{"index.html":{}}}],["expiresin",{"_index":235,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["expiresin.sethours(expiresin.gethours",{"_index":294,"title":{},"body":{"injectables/AuthService.html":{}}}],["export",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/Company.html":{},"guards/CompanyAccessGuard.html":{},"classes/CompleteRegistrationDto.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateInvitationDto.html":{},"classes/CreateSuperAdminDto.html":{},"interfaces/FeatureConfig.html":{},"guards/FeatureGuard.html":{},"classes/FeatureRestrictionFilter.html":{},"classes/FilterUsersDto.html":{},"modules/GuardsModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"interfaces/PlanLimits.html":{},"guards/RolesGuard.html":{},"classes/UpdateUserProfileDto.html":{},"entities/User.html":{},"guards/UserLimitGuard.html":{},"injectables/UserLimitService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["exports",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/GuardsModule.html":{},"modules/MailModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["express",{"_index":160,"title":{},"body":{"controllers/AuthController.html":{},"classes/FeatureRestrictionFilter.html":{},"dependencies.html":{}}}],["extends",{"_index":574,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{}}}],["extractjwt",{"_index":590,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromextractors",{"_index":597,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["fail",{"_index":644,"title":{},"body":{"injectables/MailService.html":{}}}],["false",{"_index":338,"title":{},"body":{"injectables/AuthService.html":{},"entities/Company.html":{},"guards/FeatureGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/MailService.html":{},"entities/User.html":{},"injectables/UserLimitService.html":{}}}],["fast",{"_index":1055,"title":{},"body":{"index.html":{}}}],["feature",{"_index":506,"title":{},"body":{"guards/FeatureGuard.html":{},"miscellaneous/variables.html":{}}}],["feature.decorator",{"_index":831,"title":{},"body":{"controllers/UsersController.html":{}}}],["feature.decorator.ts",{"_index":954,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["feature.guard",{"_index":570,"title":{},"body":{"modules/GuardsModule.html":{}}}],["feature_key",{"_index":955,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["featureconfig",{"_index":470,"title":{"interfaces/FeatureConfig.html":{}},"body":{"interfaces/FeatureConfig.html":{},"guards/FeatureGuard.html":{},"coverage.html":{}}}],["featureguard",{"_index":161,"title":{"guards/FeatureGuard.html":{}},"body":{"controllers/AuthController.html":{},"guards/FeatureGuard.html":{},"modules/GuardsModule.html":{},"controllers/UsersController.html":{},"coverage.html":{},"overview.html":{}}}],["featurerestrictionfilter",{"_index":516,"title":{"classes/FeatureRestrictionFilter.html":{}},"body":{"classes/FeatureRestrictionFilter.html":{},"coverage.html":{}}}],["features",{"_index":475,"title":{},"body":{"interfaces/FeatureConfig.html":{},"guards/FeatureGuard.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["features[requiredfeature",{"_index":511,"title":{},"body":{"guards/FeatureGuard.html":{}}}],["few",{"_index":1057,"title":{},"body":{"index.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/Company.html":{},"guards/CompanyAccessGuard.html":{},"classes/CompleteRegistrationDto.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateInvitationDto.html":{},"classes/CreateSuperAdminDto.html":{},"interfaces/FeatureConfig.html":{},"guards/FeatureGuard.html":{},"classes/FeatureRestrictionFilter.html":{},"classes/FilterUsersDto.html":{},"modules/GuardsModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"interfaces/PlanLimits.html":{},"guards/RolesGuard.html":{},"classes/UpdateUserProfileDto.html":{},"entities/User.html":{},"guards/UserLimitGuard.html":{},"injectables/UserLimitService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["filter",{"_index":895,"title":{},"body":{"injectables/UsersService.html":{}}}],["filterdto",{"_index":805,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["filterusersdto",{"_index":550,"title":{"classes/FilterUsersDto.html":{}},"body":{"classes/FilterUsersDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["findall",{"_index":796,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findall(@query",{"_index":833,"title":{},"body":{"controllers/UsersController.html":{}}}],["findall(filterdto",{"_index":802,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findone",{"_index":797,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findone(@param('id",{"_index":837,"title":{},"body":{"controllers/UsersController.html":{}}}],["findone(id",{"_index":806,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["firma",{"_index":783,"title":{},"body":{"injectables/UserLimitService.html":{}}}],["firmy",{"_index":675,"title":{},"body":{"injectables/MailService.html":{}}}],["firstname",{"_index":711,"title":{},"body":{"classes/UpdateUserProfileDto.html":{},"entities/User.html":{}}}],["fitfleet",{"_index":656,"title":{},"body":{"injectables/MailService.html":{}}}],["focus",{"_index":1064,"title":{},"body":{"index.html":{}}}],["follow",{"_index":1098,"title":{},"body":{"index.html":{}}}],["forbidden",{"_index":548,"title":{},"body":{"classes/FeatureRestrictionFilter.html":{}}}],["framework",{"_index":1006,"title":{},"body":{"index.html":{}}}],["frontend_url",{"_index":650,"title":{},"body":{"injectables/MailService.html":{}}}],["full",{"_index":1094,"title":{},"body":{"index.html":{}}}],["function",{"_index":960,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":1000,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["funkcja",{"_index":537,"title":{},"body":{"classes/FeatureRestrictionFilter.html":{}}}],["g",{"_index":1060,"title":{},"body":{"index.html":{}}}],["generatetoken",{"_index":238,"title":{},"body":{"injectables/AuthService.html":{}}}],["generatetoken(user",{"_index":256,"title":{},"body":{"injectables/AuthService.html":{}}}],["get(':id",{"_index":835,"title":{},"body":{"controllers/UsersController.html":{}}}],["get(':id')@roles(userrole.superadmin",{"_index":807,"title":{},"body":{"controllers/UsersController.html":{}}}],["get()@roles(userrole.superadmin",{"_index":803,"title":{},"body":{"controllers/UsersController.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getting",{"_index":1002,"title":{"index.html":{}},"body":{}}],["godziny",{"_index":673,"title":{},"body":{"injectables/MailService.html":{}}}],["graph",{"_index":1086,"title":{},"body":{"index.html":{}}}],["grow",{"_index":1108,"title":{},"body":{"index.html":{}}}],["guard",{"_index":403,"title":{"guards/CompanyAccessGuard.html":{},"guards/FeatureGuard.html":{},"guards/RolesGuard.html":{},"guards/UserLimitGuard.html":{}},"body":{"coverage.html":{}}}],["guards",{"_index":405,"title":{},"body":{"guards/CompanyAccessGuard.html":{},"guards/FeatureGuard.html":{},"guards/RolesGuard.html":{},"guards/UserLimitGuard.html":{},"overview.html":{}}}],["guards/company",{"_index":820,"title":{},"body":{"controllers/UsersController.html":{}}}],["guards/feature.guard",{"_index":828,"title":{},"body":{"controllers/UsersController.html":{}}}],["guards/guards.module",{"_index":62,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["guards/jwt",{"_index":157,"title":{},"body":{"controllers/AuthController.html":{}}}],["guards/roles.guard",{"_index":150,"title":{},"body":{"controllers/AuthController.html":{}}}],["guardsmodule",{"_index":41,"title":{"modules/GuardsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/GuardsModule.html":{},"modules.html":{},"overview.html":{}}}],["handlerequest",{"_index":576,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["handlerequest(err",{"_index":577,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["hands",{"_index":1080,"title":{},"body":{"index.html":{}}}],["handy",{"_index":1069,"title":{},"body":{"index.html":{}}}],["hash",{"_index":332,"title":{},"body":{"injectables/AuthService.html":{}}}],["hashedpassword",{"_index":333,"title":{},"body":{"injectables/AuthService.html":{}}}],["hello",{"_index":84,"title":{},"body":{"injectables/AppService.html":{}}}],["help",{"_index":1084,"title":{},"body":{"index.html":{}}}],["here",{"_index":1116,"title":{},"body":{"index.html":{}}}],["host",{"_index":523,"title":{},"body":{"classes/FeatureRestrictionFilter.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{}}}],["host.switchtohttp",{"_index":530,"title":{},"body":{"classes/FeatureRestrictionFilter.html":{}}}],["hours",{"_index":200,"title":{},"body":{"controllers/AuthController.html":{}}}],["housenumber",{"_index":348,"title":{},"body":{"entities/Company.html":{},"classes/CreateCompanyDto.html":{},"classes/UpdateUserProfileDto.html":{},"entities/User.html":{}}}],["html",{"_index":658,"title":{},"body":{"injectables/MailService.html":{}}}],["httpexception",{"_index":522,"title":{},"body":{"classes/FeatureRestrictionFilter.html":{}}}],["httponly",{"_index":192,"title":{},"body":{"controllers/AuthController.html":{}}}],["https://nestjs.com",{"_index":1122,"title":{},"body":{"index.html":{}}}],["id",{"_index":349,"title":{},"body":{"entities/Company.html":{},"injectables/JwtStrategy.html":{},"entities/User.html":{},"injectables/UserLimitService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["identifier",{"_index":940,"title":{},"body":{"coverage.html":{}}}],["ignoreexpiration",{"_index":599,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["ilike",{"_index":859,"title":{},"body":{"injectables/UsersService.html":{}}}],["implements",{"_index":417,"title":{},"body":{"guards/CompanyAccessGuard.html":{},"guards/FeatureGuard.html":{},"classes/FeatureRestrictionFilter.html":{},"guards/RolesGuard.html":{},"guards/UserLimitGuard.html":{}}}],["import",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/Company.html":{},"guards/CompanyAccessGuard.html":{},"classes/CompleteRegistrationDto.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateInvitationDto.html":{},"classes/CreateSuperAdminDto.html":{},"interfaces/FeatureConfig.html":{},"guards/FeatureGuard.html":{},"classes/FeatureRestrictionFilter.html":{},"classes/FilterUsersDto.html":{},"modules/GuardsModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"interfaces/PlanLimits.html":{},"guards/RolesGuard.html":{},"classes/UpdateUserProfileDto.html":{},"entities/User.html":{},"guards/UserLimitGuard.html":{},"injectables/UserLimitService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["imports",{"_index":48,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/GuardsModule.html":{},"modules/MailModule.html":{},"modules/UsersModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"entities/Company.html":{},"guards/CompanyAccessGuard.html":{},"classes/CompleteRegistrationDto.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateInvitationDto.html":{},"classes/CreateSuperAdminDto.html":{},"interfaces/FeatureConfig.html":{},"guards/FeatureGuard.html":{},"classes/FeatureRestrictionFilter.html":{},"classes/FilterUsersDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/MailService.html":{},"interfaces/PlanLimits.html":{},"guards/RolesGuard.html":{},"classes/UpdateUserProfileDto.html":{},"entities/User.html":{},"guards/UserLimitGuard.html":{},"injectables/UserLimitService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/Company.html":{},"guards/CompanyAccessGuard.html":{},"classes/CompleteRegistrationDto.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateInvitationDto.html":{},"classes/CreateSuperAdminDto.html":{},"interfaces/FeatureConfig.html":{},"guards/FeatureGuard.html":{},"classes/FeatureRestrictionFilter.html":{},"classes/FilterUsersDto.html":{},"modules/GuardsModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"interfaces/PlanLimits.html":{},"guards/RolesGuard.html":{},"classes/UpdateUserProfileDto.html":{},"entities/User.html":{},"guards/UserLimitGuard.html":{},"injectables/UserLimitService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["information",{"_index":1044,"title":{},"body":{"index.html":{}}}],["infrastructure",{"_index":1066,"title":{},"body":{"index.html":{}}}],["inject",{"_index":79,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/MailModule.html":{}}}],["injectable",{"_index":80,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/MailService.html":{},"injectables/UserLimitService.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"guards/CompanyAccessGuard.html":{},"guards/FeatureGuard.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/MailService.html":{},"guards/RolesGuard.html":{},"guards/UserLimitGuard.html":{},"injectables/UserLimitService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":81,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/MailService.html":{},"injectables/UserLimitService.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["injectrepository",{"_index":267,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserLimitService.html":{},"injectables/UsersService.html":{}}}],["injectrepository(company",{"_index":780,"title":{},"body":{"injectables/UserLimitService.html":{}}}],["injectrepository(user",{"_index":277,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserLimitService.html":{},"injectables/UsersService.html":{}}}],["install",{"_index":1059,"title":{},"body":{"index.html":{}}}],["installcompile",{"_index":1019,"title":{},"body":{"index.html":{}}}],["interact",{"_index":1087,"title":{},"body":{"index.html":{}}}],["interface",{"_index":469,"title":{"interfaces/FeatureConfig.html":{},"interfaces/PlanLimits.html":{}},"body":{"interfaces/FeatureConfig.html":{},"interfaces/PlanLimits.html":{},"coverage.html":{}}}],["interfaces",{"_index":471,"title":{},"body":{"interfaces/FeatureConfig.html":{},"interfaces/PlanLimits.html":{},"overview.html":{}}}],["invalid",{"_index":645,"title":{},"body":{"injectables/MailService.html":{}}}],["inversejoincolumn",{"_index":749,"title":{},"body":{"entities/User.html":{}}}],["invitation",{"_index":292,"title":{},"body":{"injectables/AuthService.html":{}}}],["invitation.dto",{"_index":146,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["invitation.dto.ts",{"_index":461,"title":{},"body":{"classes/CreateInvitationDto.html":{},"coverage.html":{}}}],["invitation.dto.ts:6",{"_index":463,"title":{},"body":{"classes/CreateInvitationDto.html":{}}}],["invitationexpires",{"_index":297,"title":{},"body":{"injectables/AuthService.html":{},"entities/User.html":{}}}],["invitationlink",{"_index":648,"title":{},"body":{"injectables/MailService.html":{}}}],["invitationtoken",{"_index":296,"title":{},"body":{"injectables/AuthService.html":{},"entities/User.html":{}}}],["inviter",{"_index":305,"title":{},"body":{"injectables/AuthService.html":{}}}],["invitername",{"_index":630,"title":{},"body":{"injectables/MailService.html":{}}}],["invitetocompany",{"_index":239,"title":{},"body":{"injectables/AuthService.html":{}}}],["invitetocompany(email",{"_index":258,"title":{},"body":{"injectables/AuthService.html":{}}}],["isemail",{"_index":458,"title":{},"body":{"classes/CreateCompanyDto.html":{},"classes/CreateInvitationDto.html":{},"classes/CreateSuperAdminDto.html":{}}}],["isemail()@isnotempty",{"_index":462,"title":{},"body":{"classes/CreateInvitationDto.html":{},"classes/CreateSuperAdminDto.html":{}}}],["isemail()@isoptional",{"_index":448,"title":{},"body":{"classes/CreateCompanyDto.html":{}}}],["isenum",{"_index":563,"title":{},"body":{"classes/FilterUsersDto.html":{}}}],["isenum(userrole",{"_index":564,"title":{},"body":{"classes/FilterUsersDto.html":{}}}],["isglobal",{"_index":64,"title":{},"body":{"modules/AppModule.html":{}}}],["isnotempty",{"_index":436,"title":{},"body":{"classes/CompleteRegistrationDto.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateInvitationDto.html":{},"classes/CreateSuperAdminDto.html":{}}}],["isnotempty()@isstring",{"_index":434,"title":{},"body":{"classes/CompleteRegistrationDto.html":{}}}],["isnotempty()@isstring()@minlength(8)@matches(/((?=.*\\d)|(?=.*\\w+))(?![.\\n])(?=.*[a",{"_index":430,"title":{},"body":{"classes/CompleteRegistrationDto.html":{}}}],["isoptional",{"_index":457,"title":{},"body":{"classes/CreateCompanyDto.html":{},"classes/FilterUsersDto.html":{},"classes/UpdateUserProfileDto.html":{}}}],["isoptional()@isenum(userrole",{"_index":560,"title":{},"body":{"classes/FilterUsersDto.html":{}}}],["isoptional()@isstring",{"_index":556,"title":{},"body":{"classes/FilterUsersDto.html":{}}}],["isphonenumber",{"_index":459,"title":{},"body":{"classes/CreateCompanyDto.html":{},"classes/UpdateUserProfileDto.html":{}}}],["isphonenumber()@isoptional",{"_index":453,"title":{},"body":{"classes/CreateCompanyDto.html":{},"classes/UpdateUserProfileDto.html":{}}}],["isprofilecomplete",{"_index":337,"title":{},"body":{"injectables/AuthService.html":{},"entities/Company.html":{},"entities/User.html":{}}}],["isstring",{"_index":437,"title":{},"body":{"classes/CompleteRegistrationDto.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateSuperAdminDto.html":{},"classes/FilterUsersDto.html":{},"classes/UpdateUserProfileDto.html":{}}}],["isstring()@isnotempty",{"_index":451,"title":{},"body":{"classes/CreateCompanyDto.html":{},"classes/CreateSuperAdminDto.html":{}}}],["isstring()@isnotempty()@minlength(8)@matches(/((?=.*\\d)|(?=.*\\w+))(?![.\\n])(?=.*[a",{"_index":466,"title":{},"body":{"classes/CreateSuperAdminDto.html":{}}}],["isstring()@isoptional",{"_index":446,"title":{},"body":{"classes/CreateCompanyDto.html":{},"classes/UpdateUserProfileDto.html":{}}}],["istnieje",{"_index":290,"title":{},"body":{"injectables/AuthService.html":{}}}],["jest",{"_index":539,"title":{},"body":{"classes/FeatureRestrictionFilter.html":{},"injectables/MailService.html":{}}}],["job",{"_index":1101,"title":{},"body":{"index.html":{}}}],["jobs",{"_index":1103,"title":{},"body":{"index.html":{}}}],["join",{"_index":1114,"title":{},"body":{"index.html":{}}}],["joincolumn",{"_index":395,"title":{},"body":{"entities/Company.html":{},"entities/User.html":{}}}],["jointable",{"_index":757,"title":{},"body":{"entities/User.html":{}}}],["ju",{"_index":289,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwt",{"_index":230,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"guards/RolesGuard.html":{},"dependencies.html":{}}}],["jwtauthguard",{"_index":156,"title":{"injectables/JwtAuthGuard.html":{}},"body":{"controllers/AuthController.html":{},"injectables/JwtAuthGuard.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["jwtfromrequest",{"_index":596,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":221,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.registerasync",{"_index":231,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtsecret",{"_index":593,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtservice",{"_index":244,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":219,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["kamil",{"_index":1119,"title":{},"body":{"index.html":{}}}],["key",{"_index":331,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["kliknij",{"_index":667,"title":{},"body":{"injectables/MailService.html":{}}}],["korzystania",{"_index":662,"title":{},"body":{"injectables/MailService.html":{}}}],["lastname",{"_index":712,"title":{},"body":{"classes/UpdateUserProfileDto.html":{},"entities/User.html":{}}}],["leader",{"_index":997,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["learn",{"_index":1072,"title":{},"body":{"index.html":{}}}],["legend",{"_index":32,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/GuardsModule.html":{},"modules/MailModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["license",{"_index":1125,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":1106,"title":{},"body":{"index.html":{}}}],["limit",{"_index":553,"title":{},"body":{"classes/FilterUsersDto.html":{},"guards/UserLimitGuard.html":{},"injectables/UserLimitService.html":{},"injectables/UsersService.html":{}}}],["limit.guard",{"_index":165,"title":{},"body":{"controllers/AuthController.html":{},"modules/GuardsModule.html":{}}}],["limit.guard.ts",{"_index":763,"title":{},"body":{"guards/UserLimitGuard.html":{},"coverage.html":{}}}],["limit.guard.ts:5",{"_index":765,"title":{},"body":{"guards/UserLimitGuard.html":{}}}],["limit.guard.ts:8",{"_index":766,"title":{},"body":{"guards/UserLimitGuard.html":{}}}],["limit.service",{"_index":571,"title":{},"body":{"modules/GuardsModule.html":{},"guards/UserLimitGuard.html":{}}}],["limit.service.ts",{"_index":772,"title":{},"body":{"injectables/UserLimitService.html":{},"coverage.html":{}}}],["limit.service.ts:17",{"_index":777,"title":{},"body":{"injectables/UserLimitService.html":{}}}],["limit.service.ts:9",{"_index":775,"title":{},"body":{"injectables/UserLimitService.html":{}}}],["limits.config",{"_index":779,"title":{},"body":{"injectables/UserLimitService.html":{}}}],["limits.config.ts",{"_index":682,"title":{},"body":{"interfaces/PlanLimits.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["link",{"_index":669,"title":{},"body":{"injectables/MailService.html":{}}}],["linkedin",{"_index":1100,"title":{},"body":{"index.html":{}}}],["literal",{"_index":99,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["login",{"_index":96,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["login(email",{"_index":261,"title":{},"body":{"injectables/AuthService.html":{}}}],["login(undefined",{"_index":132,"title":{},"body":{"controllers/AuthController.html":{}}}],["logout",{"_index":97,"title":{},"body":{"controllers/AuthController.html":{}}}],["logout(@res",{"_index":203,"title":{},"body":{"controllers/AuthController.html":{}}}],["logout(response",{"_index":136,"title":{},"body":{"controllers/AuthController.html":{}}}],["looking",{"_index":1045,"title":{},"body":{"index.html":{}}}],["loop",{"_index":1096,"title":{},"body":{"index.html":{}}}],["lower(:search",{"_index":892,"title":{},"body":{"injectables/UsersService.html":{}}}],["lower(user.email",{"_index":891,"title":{},"body":{"injectables/UsersService.html":{}}}],["lower(user.firstname",{"_index":893,"title":{},"body":{"injectables/UsersService.html":{}}}],["lower(user.lastname",{"_index":894,"title":{},"body":{"injectables/UsersService.html":{}}}],["lub",{"_index":312,"title":{},"body":{"injectables/AuthService.html":{}}}],["mail.service",{"_index":612,"title":{},"body":{"modules/MailModule.html":{}}}],["mail/mail.module",{"_index":59,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["mail/mail.service",{"_index":269,"title":{},"body":{"injectables/AuthService.html":{}}}],["mailermodule",{"_index":609,"title":{},"body":{"modules/MailModule.html":{}}}],["mailermodule.forrootasync",{"_index":613,"title":{},"body":{"modules/MailModule.html":{}}}],["mailmodule",{"_index":42,"title":{"modules/MailModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/MailModule.html":{},"modules.html":{},"overview.html":{}}}],["mailservice",{"_index":245,"title":{"injectables/MailService.html":{}},"body":{"injectables/AuthService.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"coverage.html":{},"overview.html":{}}}],["makes",{"_index":1053,"title":{},"body":{"index.html":{}}}],["management",{"_index":479,"title":{},"body":{"interfaces/FeatureConfig.html":{},"miscellaneous/variables.html":{}}}],["managing",{"_index":1065,"title":{},"body":{"index.html":{}}}],["manytomany",{"_index":396,"title":{},"body":{"entities/Company.html":{},"entities/User.html":{}}}],["manytomany(undefined",{"_index":384,"title":{},"body":{"entities/Company.html":{}}}],["manytomany(undefined)@jointable({name",{"_index":747,"title":{},"body":{"entities/User.html":{}}}],["manytoone",{"_index":756,"title":{},"body":{"entities/User.html":{}}}],["manytoone(undefined",{"_index":723,"title":{},"body":{"entities/User.html":{}}}],["masz",{"_index":924,"title":{},"body":{"injectables/UsersService.html":{}}}],["matches",{"_index":439,"title":{},"body":{"classes/CompleteRegistrationDto.html":{},"classes/CreateSuperAdminDto.html":{}}}],["matches(/((?=.*\\d)|(?=.*\\w+))(?![.\\n])(?=.*[a",{"_index":442,"title":{},"body":{"classes/CompleteRegistrationDto.html":{},"classes/CreateSuperAdminDto.html":{}}}],["matching",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/Company.html":{},"guards/CompanyAccessGuard.html":{},"classes/CompleteRegistrationDto.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateInvitationDto.html":{},"classes/CreateSuperAdminDto.html":{},"interfaces/FeatureConfig.html":{},"guards/FeatureGuard.html":{},"classes/FeatureRestrictionFilter.html":{},"classes/FilterUsersDto.html":{},"modules/GuardsModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"interfaces/PlanLimits.html":{},"guards/RolesGuard.html":{},"classes/UpdateUserProfileDto.html":{},"entities/User.html":{},"guards/UserLimitGuard.html":{},"injectables/UserLimitService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["math.ceil(total",{"_index":907,"title":{},"body":{"injectables/UsersService.html":{}}}],["math.max(...requiredroles.map(role",{"_index":706,"title":{},"body":{"guards/RolesGuard.html":{}}}],["mau",{"_index":1049,"title":{},"body":{"index.html":{}}}],["maxage",{"_index":196,"title":{},"body":{"controllers/AuthController.html":{}}}],["maxusers",{"_index":683,"title":{},"body":{"interfaces/PlanLimits.html":{},"miscellaneous/variables.html":{}}}],["member",{"_index":171,"title":{},"body":{"controllers/AuthController.html":{}}}],["member')@useguards(jwtauthguard",{"_index":119,"title":{},"body":{"controllers/AuthController.html":{}}}],["message",{"_index":206,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CompleteRegistrationDto.html":{},"classes/CreateSuperAdminDto.html":{},"classes/FeatureRestrictionFilter.html":{},"injectables/UserLimitService.html":{}}}],["metadata",{"_index":983,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/CompanyAccessGuard.html":{},"guards/FeatureGuard.html":{},"classes/FeatureRestrictionFilter.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/MailService.html":{},"guards/RolesGuard.html":{},"guards/UserLimitGuard.html":{},"injectables/UserLimitService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["minlength",{"_index":438,"title":{},"body":{"classes/CompleteRegistrationDto.html":{},"classes/CreateSuperAdminDto.html":{}}}],["minlength(8",{"_index":441,"title":{},"body":{"classes/CompleteRegistrationDto.html":{},"classes/CreateSuperAdminDto.html":{}}}],["minplan",{"_index":474,"title":{},"body":{"interfaces/FeatureConfig.html":{},"miscellaneous/variables.html":{}}}],["miscellaneous",{"_index":988,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1105,"title":{},"body":{"index.html":{}}}],["mode",{"_index":1024,"title":{},"body":{"index.html":{}}}],["modify",{"_index":929,"title":{},"body":{"injectables/UsersService.html":{}}}],["module",{"_index":28,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/GuardsModule.html":{},"modules/MailModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/GuardsModule.html":{},"modules/MailModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["modules",{"_index":30,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/GuardsModule.html":{},"modules/MailModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/mailer",{"_index":611,"title":{},"body":{"modules/MailModule.html":{},"dependencies.html":{}}}],["modyfikowa",{"_index":932,"title":{},"body":{"injectables/UsersService.html":{}}}],["more",{"_index":1043,"title":{},"body":{"index.html":{}}}],["może",{"_index":314,"title":{},"body":{"injectables/AuthService.html":{}}}],["możesz",{"_index":919,"title":{},"body":{"injectables/UsersService.html":{}}}],["myśliwiec",{"_index":1120,"title":{},"body":{"index.html":{}}}],["name",{"_index":108,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"entities/Company.html":{},"guards/CompanyAccessGuard.html":{},"classes/CreateCompanyDto.html":{},"guards/FeatureGuard.html":{},"classes/FeatureRestrictionFilter.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/MailService.html":{},"guards/RolesGuard.html":{},"entities/User.html":{},"guards/UserLimitGuard.html":{},"injectables/UserLimitService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["need",{"_index":1092,"title":{},"body":{"index.html":{}}}],["nest",{"_index":1013,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":1124,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":610,"title":{},"body":{"modules/MailModule.html":{},"dependencies.html":{},"index.html":{}}}],["nestjs/common",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/CompanyAccessGuard.html":{},"guards/FeatureGuard.html":{},"classes/FeatureRestrictionFilter.html":{},"modules/GuardsModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"guards/RolesGuard.html":{},"guards/UserLimitGuard.html":{},"injectables/UserLimitService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":51,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":416,"title":{},"body":{"guards/CompanyAccessGuard.html":{},"guards/FeatureGuard.html":{},"guards/RolesGuard.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":222,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":226,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":969,"title":{},"body":{"dependencies.html":{}}}],["nestjs/typeorm",{"_index":53,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/GuardsModule.html":{},"injectables/UserLimitService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["never",{"_index":885,"title":{},"body":{"injectables/UsersService.html":{}}}],["new",{"_index":190,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"guards/UserLimitGuard.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["newrole",{"_index":249,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["nie",{"_index":538,"title":{},"body":{"classes/FeatureRestrictionFilter.html":{},"injectables/UserLimitService.html":{},"injectables/UsersService.html":{}}}],["node.js",{"_index":1005,"title":{},"body":{"index.html":{}}}],["nodemailer",{"_index":634,"title":{},"body":{"injectables/MailService.html":{},"dependencies.html":{}}}],["nodemailer.createtransport",{"_index":636,"title":{},"body":{"injectables/MailService.html":{}}}],["non",{"_index":883,"title":{},"body":{"injectables/UsersService.html":{}}}],["notfoundexception",{"_index":858,"title":{},"body":{"injectables/UsersService.html":{}}}],["notfoundexception('użytkownik",{"_index":909,"title":{},"body":{"injectables/UsersService.html":{}}}],["now",{"_index":324,"title":{},"body":{"injectables/AuthService.html":{}}}],["nowych",{"_index":316,"title":{},"body":{"injectables/AuthService.html":{}}}],["npm",{"_index":1018,"title":{},"body":{"index.html":{}}}],["null",{"_index":733,"title":{},"body":{"entities/User.html":{}}}],["nullable",{"_index":401,"title":{},"body":{"entities/Company.html":{},"entities/User.html":{}}}],["number",{"_index":684,"title":{},"body":{"interfaces/PlanLimits.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["offer",{"_index":1102,"title":{},"body":{"index.html":{}}}],["official",{"_index":1050,"title":{},"body":{"index.html":{}}}],["onetomany",{"_index":393,"title":{},"body":{"entities/Company.html":{}}}],["onetomany(undefined",{"_index":389,"title":{},"body":{"entities/Company.html":{}}}],["onetoone",{"_index":394,"title":{},"body":{"entities/Company.html":{}}}],["onetoone(undefined)@joincolumn({name",{"_index":371,"title":{},"body":{"entities/Company.html":{}}}],["open",{"_index":1107,"title":{},"body":{"index.html":{}}}],["optional",{"_index":109,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/CompanyAccessGuard.html":{},"classes/CreateCompanyDto.html":{},"guards/FeatureGuard.html":{},"classes/FeatureRestrictionFilter.html":{},"classes/FilterUsersDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/MailService.html":{},"guards/RolesGuard.html":{},"classes/UpdateUserProfileDto.html":{},"guards/UserLimitGuard.html":{},"injectables/UserLimitService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["orderby('user.createdat",{"_index":901,"title":{},"body":{"injectables/UsersService.html":{}}}],["osiągnięto",{"_index":791,"title":{},"body":{"injectables/UserLimitService.html":{}}}],["out",{"_index":46,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/GuardsModule.html":{},"modules/MailModule.html":{},"modules/UsersModule.html":{},"index.html":{},"overview.html":{}}}],["overview",{"_index":1129,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owner",{"_index":307,"title":{},"body":{"injectables/AuthService.html":{},"entities/Company.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{}}}],["ownerid",{"_index":350,"title":{},"body":{"entities/Company.html":{}}}],["owners",{"_index":298,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["package",{"_index":963,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["page",{"_index":554,"title":{},"body":{"classes/FilterUsersDto.html":{},"injectables/UsersService.html":{}}}],["pages",{"_index":906,"title":{},"body":{"injectables/UsersService.html":{}}}],["pagination",{"_index":898,"title":{},"body":{"injectables/UsersService.html":{}}}],["param",{"_index":814,"title":{},"body":{"controllers/UsersController.html":{}}}],["param('id",{"_index":843,"title":{},"body":{"controllers/UsersController.html":{}}}],["parameters",{"_index":107,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/CompanyAccessGuard.html":{},"guards/FeatureGuard.html":{},"classes/FeatureRestrictionFilter.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/MailService.html":{},"guards/RolesGuard.html":{},"guards/UserLimitGuard.html":{},"injectables/UserLimitService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["parseint(limit",{"_index":862,"title":{},"body":{"injectables/UsersService.html":{}}}],["parseint(page",{"_index":861,"title":{},"body":{"injectables/UsersService.html":{}}}],["parser",{"_index":975,"title":{},"body":{"dependencies.html":{}}}],["part",{"_index":1093,"title":{},"body":{"index.html":{}}}],["pass",{"_index":619,"title":{},"body":{"modules/MailModule.html":{},"injectables/MailService.html":{}}}],["passport",{"_index":592,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":225,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportmodule.register",{"_index":228,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":589,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":582,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passthrough",{"_index":179,"title":{},"body":{"controllers/AuthController.html":{}}}],["password",{"_index":178,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CompleteRegistrationDto.html":{},"classes/CreateSuperAdminDto.html":{},"entities/User.html":{}}}],["payload",{"_index":588,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.companyid",{"_index":604,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.email",{"_index":602,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.role",{"_index":603,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.sub",{"_index":601,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["permission",{"_index":306,"title":{},"body":{"injectables/AuthService.html":{}}}],["pg",{"_index":980,"title":{},"body":{"dependencies.html":{}}}],["phonenumber",{"_index":351,"title":{},"body":{"entities/Company.html":{},"classes/CreateCompanyDto.html":{},"classes/UpdateUserProfileDto.html":{},"entities/User.html":{}}}],["plan",{"_index":352,"title":{},"body":{"entities/Company.html":{},"guards/FeatureGuard.html":{},"interfaces/PlanLimits.html":{},"miscellaneous/variables.html":{}}}],["plan.enum",{"_index":398,"title":{},"body":{"entities/Company.html":{},"interfaces/FeatureConfig.html":{},"guards/FeatureGuard.html":{},"interfaces/PlanLimits.html":{}}}],["plan.enum.ts",{"_index":991,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["planhierarchy",{"_index":495,"title":{},"body":{"guards/FeatureGuard.html":{}}}],["planie",{"_index":543,"title":{},"body":{"classes/FeatureRestrictionFilter.html":{}}}],["planlimit",{"_index":789,"title":{},"body":{"injectables/UserLimitService.html":{}}}],["planlimits",{"_index":680,"title":{"interfaces/PlanLimits.html":{}},"body":{"interfaces/PlanLimits.html":{},"injectables/UserLimitService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["planlimits[company.plan].maxusers",{"_index":790,"title":{},"body":{"injectables/UserLimitService.html":{}}}],["planu",{"_index":546,"title":{},"body":{"classes/FeatureRestrictionFilter.html":{},"injectables/UserLimitService.html":{}}}],["platform",{"_index":1048,"title":{},"body":{"index.html":{}}}],["please",{"_index":1075,"title":{},"body":{"index.html":{}}}],["pomyślnie",{"_index":208,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["poniższy",{"_index":668,"title":{},"body":{"injectables/MailService.html":{}}}],["port",{"_index":638,"title":{},"body":{"injectables/MailService.html":{}}}],["positive",{"_index":936,"title":{},"body":{"injectables/UsersService.html":{}}}],["possible",{"_index":204,"title":{},"body":{"controllers/AuthController.html":{},"index.html":{}}}],["post",{"_index":139,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["post(':id/wage",{"_index":841,"title":{},"body":{"controllers/UsersController.html":{}}}],["post(':id/wage')@roles(userrole.owner",{"_index":811,"title":{},"body":{"controllers/UsersController.html":{}}}],["post('change",{"_index":101,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["post('complete",{"_index":113,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('invite",{"_index":118,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('login",{"_index":134,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('logout",{"_index":137,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('setup/superadmin",{"_index":130,"title":{},"body":{"controllers/AuthController.html":{}}}],["postcode",{"_index":353,"title":{},"body":{"entities/Company.html":{},"classes/CreateCompanyDto.html":{},"classes/UpdateUserProfileDto.html":{},"entities/User.html":{}}}],["postgres",{"_index":69,"title":{},"body":{"modules/AppModule.html":{}}}],["pozdrawiamy,zesp",{"_index":674,"title":{},"body":{"injectables/MailService.html":{}}}],["precision",{"_index":753,"title":{},"body":{"entities/User.html":{}}}],["prefix",{"_index":88,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["primarygeneratedcolumn",{"_index":392,"title":{},"body":{"entities/Company.html":{},"entities/User.html":{}}}],["primarygeneratedcolumn('uuid",{"_index":364,"title":{},"body":{"entities/Company.html":{},"entities/User.html":{}}}],["private",{"_index":278,"title":{},"body":{"injectables/AuthService.html":{},"guards/FeatureGuard.html":{},"injectables/MailService.html":{},"injectables/UserLimitService.html":{},"injectables/UsersService.html":{}}}],["process.env.cookie_domain",{"_index":202,"title":{},"body":{"controllers/AuthController.html":{}}}],["process.env.node_env",{"_index":77,"title":{},"body":{"modules/AppModule.html":{}}}],["production",{"_index":78,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["profile.dto.ts",{"_index":710,"title":{},"body":{"classes/UpdateUserProfileDto.html":{},"coverage.html":{}}}],["profile.dto.ts:10",{"_index":716,"title":{},"body":{"classes/UpdateUserProfileDto.html":{}}}],["profile.dto.ts:14",{"_index":717,"title":{},"body":{"classes/UpdateUserProfileDto.html":{}}}],["profile.dto.ts:18",{"_index":713,"title":{},"body":{"classes/UpdateUserProfileDto.html":{}}}],["profile.dto.ts:22",{"_index":719,"title":{},"body":{"classes/UpdateUserProfileDto.html":{}}}],["profile.dto.ts:26",{"_index":715,"title":{},"body":{"classes/UpdateUserProfileDto.html":{}}}],["profile.dto.ts:30",{"_index":718,"title":{},"body":{"classes/UpdateUserProfileDto.html":{}}}],["profile.dto.ts:6",{"_index":714,"title":{},"body":{"classes/UpdateUserProfileDto.html":{}}}],["progressive",{"_index":1004,"title":{},"body":{"index.html":{}}}],["project",{"_index":1016,"title":{},"body":{"index.html":{}}}],["promise",{"_index":767,"title":{},"body":{"guards/UserLimitGuard.html":{},"injectables/UserLimitService.html":{}}}],["properties",{"_index":345,"title":{"properties.html":{}},"body":{"entities/Company.html":{},"classes/CompleteRegistrationDto.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateInvitationDto.html":{},"classes/CreateSuperAdminDto.html":{},"interfaces/FeatureConfig.html":{},"guards/FeatureGuard.html":{},"classes/FilterUsersDto.html":{},"injectables/MailService.html":{},"interfaces/PlanLimits.html":{},"classes/UpdateUserProfileDto.html":{},"entities/User.html":{},"properties.html":{}}}],["providers",{"_index":35,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/GuardsModule.html":{},"modules/MailModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["przez",{"_index":672,"title":{},"body":{"injectables/MailService.html":{}}}],["query",{"_index":815,"title":{},"body":{"controllers/UsersController.html":{}}}],["querybuilder",{"_index":863,"title":{},"body":{"injectables/UsersService.html":{}}}],["querybuilder.andwhere",{"_index":890,"title":{},"body":{"injectables/UsersService.html":{}}}],["querybuilder.andwhere('user.role",{"_index":896,"title":{},"body":{"injectables/UsersService.html":{}}}],["querybuilder.getmanyandcount",{"_index":905,"title":{},"body":{"injectables/UsersService.html":{}}}],["questions",{"_index":1073,"title":{},"body":{"index.html":{}}}],["read",{"_index":1115,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/FeatureGuard.html":{},"guards/UserLimitGuard.html":{},"injectables/UserLimitService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["ready",{"_index":1034,"title":{},"body":{"index.html":{}}}],["real",{"_index":1088,"title":{},"body":{"index.html":{}}}],["record",{"_index":476,"title":{},"body":{"interfaces/FeatureConfig.html":{},"interfaces/PlanLimits.html":{},"miscellaneous/variables.html":{}}}],["referencedcolumnname",{"_index":762,"title":{},"body":{"entities/User.html":{}}}],["reflect",{"_index":982,"title":{},"body":{"dependencies.html":{}}}],["reflector",{"_index":410,"title":{},"body":{"guards/CompanyAccessGuard.html":{},"guards/FeatureGuard.html":{},"guards/RolesGuard.html":{}}}],["registration",{"_index":114,"title":{},"body":{"controllers/AuthController.html":{}}}],["registration.dto",{"_index":148,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["registration.dto.ts",{"_index":429,"title":{},"body":{"classes/CompleteRegistrationDto.html":{},"coverage.html":{}}}],["registration.dto.ts:14",{"_index":433,"title":{},"body":{"classes/CompleteRegistrationDto.html":{}}}],["registration.dto.ts:6",{"_index":435,"title":{},"body":{"classes/CompleteRegistrationDto.html":{}}}],["registration?token=${token",{"_index":652,"title":{},"body":{"injectables/MailService.html":{}}}],["rejectunauthorized",{"_index":647,"title":{},"body":{"injectables/MailService.html":{}}}],["rejestracj",{"_index":666,"title":{},"body":{"injectables/MailService.html":{}}}],["relations",{"_index":908,"title":{},"body":{"injectables/UsersService.html":{}}}],["reporting",{"_index":489,"title":{},"body":{"interfaces/FeatureConfig.html":{},"miscellaneous/variables.html":{}}}],["repository",{"_index":243,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserLimitService.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["req",{"_index":100,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["req.user",{"_index":175,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["request",{"_index":418,"title":{},"body":{"guards/CompanyAccessGuard.html":{},"guards/FeatureGuard.html":{},"injectables/JwtStrategy.html":{},"guards/UserLimitGuard.html":{}}}],["request.params.companyid",{"_index":421,"title":{},"body":{"guards/CompanyAccessGuard.html":{}}}],["request.query.companyid",{"_index":422,"title":{},"body":{"guards/CompanyAccessGuard.html":{}}}],["request.user",{"_index":420,"title":{},"body":{"guards/CompanyAccessGuard.html":{},"guards/FeatureGuard.html":{},"guards/UserLimitGuard.html":{}}}],["request?.cookies?.fitlit_token",{"_index":598,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["required",{"_index":510,"title":{},"body":{"guards/FeatureGuard.html":{}}}],["requiredfeature",{"_index":502,"title":{},"body":{"guards/FeatureGuard.html":{},"miscellaneous/variables.html":{}}}],["requiredplanlevel",{"_index":512,"title":{},"body":{"guards/FeatureGuard.html":{}}}],["requiredrolelevel",{"_index":705,"title":{},"body":{"guards/RolesGuard.html":{}}}],["requiredroles",{"_index":695,"title":{},"body":{"guards/RolesGuard.html":{}}}],["requirefeature",{"_index":829,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["requirefeature('role_management",{"_index":839,"title":{},"body":{"controllers/UsersController.html":{}}}],["requirefeature('wage_management",{"_index":842,"title":{},"body":{"controllers/UsersController.html":{}}}],["requiring",{"_index":1056,"title":{},"body":{"index.html":{}}}],["res",{"_index":142,"title":{},"body":{"controllers/AuthController.html":{}}}],["reset",{"_index":45,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/GuardsModule.html":{},"modules/MailModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["resources",{"_index":1067,"title":{},"body":{"index.html":{}}}],["response",{"_index":133,"title":{},"body":{"controllers/AuthController.html":{},"classes/FeatureRestrictionFilter.html":{}}}],["response.clearcookie('fitlit_token",{"_index":205,"title":{},"body":{"controllers/AuthController.html":{}}}],["response.clearcookie('jwt",{"_index":187,"title":{},"body":{"controllers/AuthController.html":{}}}],["response.clearcookie('token",{"_index":188,"title":{},"body":{"controllers/AuthController.html":{}}}],["response.cookie('fitlit_token",{"_index":191,"title":{},"body":{"controllers/AuthController.html":{}}}],["response.status(403).json",{"_index":534,"title":{},"body":{"classes/FeatureRestrictionFilter.html":{}}}],["response.status(status).json(exception.getresponse",{"_index":549,"title":{},"body":{"classes/FeatureRestrictionFilter.html":{}}}],["restriction.filter.ts",{"_index":518,"title":{},"body":{"classes/FeatureRestrictionFilter.html":{},"coverage.html":{}}}],["restriction.filter.ts:6",{"_index":525,"title":{},"body":{"classes/FeatureRestrictionFilter.html":{}}}],["restrictions",{"_index":507,"title":{},"body":{"guards/FeatureGuard.html":{},"injectables/UsersService.html":{}}}],["result",{"_index":768,"title":{},"body":{"guards/UserLimitGuard.html":{}}}],["result.allowed",{"_index":770,"title":{},"body":{"guards/UserLimitGuard.html":{}}}],["results",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/Company.html":{},"guards/CompanyAccessGuard.html":{},"classes/CompleteRegistrationDto.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateInvitationDto.html":{},"classes/CreateSuperAdminDto.html":{},"interfaces/FeatureConfig.html":{},"guards/FeatureGuard.html":{},"classes/FeatureRestrictionFilter.html":{},"classes/FilterUsersDto.html":{},"modules/GuardsModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"interfaces/PlanLimits.html":{},"guards/RolesGuard.html":{},"classes/UpdateUserProfileDto.html":{},"entities/User.html":{},"guards/UserLimitGuard.html":{},"injectables/UserLimitService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/CompanyAccessGuard.html":{},"guards/FeatureGuard.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"guards/RolesGuard.html":{},"guards/UserLimitGuard.html":{},"injectables/UserLimitService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["returns",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/CompanyAccessGuard.html":{},"guards/FeatureGuard.html":{},"classes/FeatureRestrictionFilter.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/MailService.html":{},"guards/RolesGuard.html":{},"guards/UserLimitGuard.html":{},"injectables/UserLimitService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["role",{"_index":209,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/FeatureConfig.html":{},"classes/FilterUsersDto.html":{},"injectables/JwtStrategy.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["role')@roles(userrole.owner",{"_index":799,"title":{},"body":{"controllers/UsersController.html":{}}}],["role')@useguards(jwtauthguard",{"_index":102,"title":{},"body":{"controllers/AuthController.html":{}}}],["role.enum",{"_index":155,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/CompanyAccessGuard.html":{},"classes/FilterUsersDto.html":{},"guards/RolesGuard.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["role.enum.ts",{"_index":993,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["role_management",{"_index":480,"title":{},"body":{"interfaces/FeatureConfig.html":{},"miscellaneous/variables.html":{}}}],["rolehierarchy",{"_index":699,"title":{},"body":{"guards/RolesGuard.html":{}}}],["rolehierarchy[role",{"_index":707,"title":{},"body":{"guards/RolesGuard.html":{}}}],["rolehierarchy[user.role",{"_index":704,"title":{},"body":{"guards/RolesGuard.html":{}}}],["roles",{"_index":151,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["roles(userrole.admin",{"_index":210,"title":{},"body":{"controllers/AuthController.html":{}}}],["roles(userrole.owner",{"_index":173,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["roles(userrole.superadmin",{"_index":169,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["roles_key",{"_index":694,"title":{},"body":{"guards/RolesGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["rolesguard",{"_index":149,"title":{"guards/RolesGuard.html":{}},"body":{"controllers/AuthController.html":{},"guards/RolesGuard.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["rolesguard)@roles(userrole.admin",{"_index":103,"title":{},"body":{"controllers/AuthController.html":{}}}],["rolesguard)@roles(userrole.superadmin",{"_index":126,"title":{},"body":{"controllers/AuthController.html":{}}}],["rolesguard)@useguards(featureguard",{"_index":120,"title":{},"body":{"controllers/AuthController.html":{}}}],["roli",{"_index":923,"title":{},"body":{"injectables/UsersService.html":{}}}],["rozwa",{"_index":544,"title":{},"body":{"classes/FeatureRestrictionFilter.html":{},"injectables/UserLimitService.html":{}}}],["run",{"_index":1020,"title":{},"body":{"index.html":{}}}],["runs",{"_index":1040,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":985,"title":{},"body":{"dependencies.html":{}}}],["samesite",{"_index":194,"title":{},"body":{"controllers/AuthController.html":{}}}],["scalable",{"_index":1009,"title":{},"body":{"index.html":{}}}],["scale",{"_index":754,"title":{},"body":{"entities/User.html":{}}}],["scheduling",{"_index":493,"title":{},"body":{"interfaces/FeatureConfig.html":{},"miscellaneous/variables.html":{}}}],["search",{"_index":555,"title":{},"body":{"classes/FilterUsersDto.html":{},"injectables/UsersService.html":{}}}],["secret",{"_index":232,"title":{},"body":{"modules/AuthModule.html":{}}}],["secretorkey",{"_index":600,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["secure",{"_index":193,"title":{},"body":{"controllers/AuthController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{}}}],["see",{"_index":884,"title":{},"body":{"injectables/UsersService.html":{}}}],["select",{"_index":740,"title":{},"body":{"entities/User.html":{},"injectables/UsersService.html":{}}}],["sendcompanymemberinvitation",{"_index":625,"title":{},"body":{"injectables/MailService.html":{}}}],["sendcompanymemberinvitation(email",{"_index":628,"title":{},"body":{"injectables/MailService.html":{}}}],["sendnewclientinvitation",{"_index":626,"title":{},"body":{"injectables/MailService.html":{}}}],["sendnewclientinvitation(email",{"_index":632,"title":{},"body":{"injectables/MailService.html":{}}}],["server",{"_index":1010,"title":{},"body":{"index.html":{}}}],["set",{"_index":189,"title":{},"body":{"controllers/AuthController.html":{}}}],["setmetadata(company_access_key",{"_index":1139,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setmetadata(feature_key",{"_index":1140,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setmetadata(roles_key",{"_index":1141,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setup",{"_index":330,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["setup_key",{"_index":326,"title":{},"body":{"injectables/AuthService.html":{}}}],["setupkey",{"_index":328,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateSuperAdminDto.html":{}}}],["shift",{"_index":492,"title":{},"body":{"interfaces/FeatureConfig.html":{},"miscellaneous/variables.html":{}}}],["shift_scheduling",{"_index":490,"title":{},"body":{"interfaces/FeatureConfig.html":{},"miscellaneous/variables.html":{}}}],["show",{"_index":914,"title":{},"body":{"injectables/UsersService.html":{}}}],["side",{"_index":1011,"title":{},"body":{"index.html":{}}}],["signoptions",{"_index":234,"title":{},"body":{"modules/AuthModule.html":{}}}],["simple",{"_index":1058,"title":{},"body":{"index.html":{}}}],["skip",{"_index":860,"title":{},"body":{"injectables/UsersService.html":{}}}],["skip(skip",{"_index":899,"title":{},"body":{"injectables/UsersService.html":{}}}],["smtp.gmail.com",{"_index":616,"title":{},"body":{"modules/MailModule.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/Company.html":{},"guards/CompanyAccessGuard.html":{},"classes/CompleteRegistrationDto.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateInvitationDto.html":{},"classes/CreateSuperAdminDto.html":{},"interfaces/FeatureConfig.html":{},"guards/FeatureGuard.html":{},"classes/FeatureRestrictionFilter.html":{},"classes/FilterUsersDto.html":{},"modules/GuardsModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"interfaces/PlanLimits.html":{},"guards/RolesGuard.html":{},"classes/UpdateUserProfileDto.html":{},"entities/User.html":{},"guards/UserLimitGuard.html":{},"injectables/UserLimitService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["specific",{"_index":928,"title":{},"body":{"injectables/UsersService.html":{}}}],["sponsors",{"_index":1110,"title":{},"body":{"index.html":{}}}],["src/.../company",{"_index":990,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/.../features.config.ts",{"_index":1136,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":1001,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../plan",{"_index":1137,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../require",{"_index":1135,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../roles.decorator.ts",{"_index":1138,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user",{"_index":992,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":47,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":82,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":83,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.controller.ts",{"_index":87,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:21",{"_index":127,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:31",{"_index":123,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:42",{"_index":115,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:49",{"_index":135,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:72",{"_index":138,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:89",{"_index":106,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:97",{"_index":131,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module.ts",{"_index":220,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":237,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:110",{"_index":252,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:138",{"_index":257,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:159",{"_index":264,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:198",{"_index":251,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:21",{"_index":246,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:238",{"_index":260,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:269",{"_index":255,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:30",{"_index":254,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:305",{"_index":262,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:62",{"_index":253,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/decorators/roles.decorator.ts",{"_index":946,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/guards/jwt",{"_index":572,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["src/auth/guards/roles.guard.ts",{"_index":691,"title":{},"body":{"guards/RolesGuard.html":{},"coverage.html":{}}}],["src/auth/guards/roles.guard.ts:10",{"_index":693,"title":{},"body":{"guards/RolesGuard.html":{}}}],["src/auth/guards/roles.guard.ts:7",{"_index":692,"title":{},"body":{"guards/RolesGuard.html":{}}}],["src/auth/strategies/jwt.strategy.ts",{"_index":581,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/strategies/jwt.strategy.ts:26",{"_index":587,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/strategies/jwt.strategy.ts:7",{"_index":585,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/config/features.config.ts",{"_index":472,"title":{},"body":{"interfaces/FeatureConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/config/plan",{"_index":681,"title":{},"body":{"interfaces/PlanLimits.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/decorators/company",{"_index":950,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/decorators/require",{"_index":953,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/dto/company/create",{"_index":444,"title":{},"body":{"classes/CreateCompanyDto.html":{},"coverage.html":{}}}],["src/dto/user/complete",{"_index":428,"title":{},"body":{"classes/CompleteRegistrationDto.html":{},"coverage.html":{}}}],["src/dto/user/create",{"_index":460,"title":{},"body":{"classes/CreateInvitationDto.html":{},"classes/CreateSuperAdminDto.html":{},"coverage.html":{}}}],["src/dto/user/filter",{"_index":551,"title":{},"body":{"classes/FilterUsersDto.html":{},"coverage.html":{}}}],["src/dto/user/update",{"_index":709,"title":{},"body":{"classes/UpdateUserProfileDto.html":{},"coverage.html":{}}}],["src/entities/company.entity.ts",{"_index":344,"title":{},"body":{"entities/Company.html":{},"coverage.html":{}}}],["src/entities/company.entity.ts:18",{"_index":365,"title":{},"body":{"entities/Company.html":{}}}],["src/entities/company.entity.ts:21",{"_index":370,"title":{},"body":{"entities/Company.html":{}}}],["src/entities/company.entity.ts:24",{"_index":362,"title":{},"body":{"entities/Company.html":{}}}],["src/entities/company.entity.ts:27",{"_index":374,"title":{},"body":{"entities/Company.html":{}}}],["src/entities/company.entity.ts:30",{"_index":359,"title":{},"body":{"entities/Company.html":{}}}],["src/entities/company.entity.ts:33",{"_index":383,"title":{},"body":{"entities/Company.html":{}}}],["src/entities/company.entity.ts:36",{"_index":363,"title":{},"body":{"entities/Company.html":{}}}],["src/entities/company.entity.ts:39",{"_index":381,"title":{},"body":{"entities/Company.html":{}}}],["src/entities/company.entity.ts:42",{"_index":382,"title":{},"body":{"entities/Company.html":{}}}],["src/entities/company.entity.ts:49",{"_index":380,"title":{},"body":{"entities/Company.html":{}}}],["src/entities/company.entity.ts:53",{"_index":372,"title":{},"body":{"entities/Company.html":{}}}],["src/entities/company.entity.ts:56",{"_index":373,"title":{},"body":{"entities/Company.html":{}}}],["src/entities/company.entity.ts:59",{"_index":391,"title":{},"body":{"entities/Company.html":{}}}],["src/entities/company.entity.ts:62",{"_index":386,"title":{},"body":{"entities/Company.html":{}}}],["src/entities/company.entity.ts:65",{"_index":368,"title":{},"body":{"entities/Company.html":{}}}],["src/entities/company.entity.ts:68",{"_index":361,"title":{},"body":{"entities/Company.html":{}}}],["src/entities/company.entity.ts:71",{"_index":388,"title":{},"body":{"entities/Company.html":{}}}],["src/entities/user.entity.ts",{"_index":720,"title":{},"body":{"entities/User.html":{},"coverage.html":{}}}],["src/entities/user.entity.ts:19",{"_index":732,"title":{},"body":{"entities/User.html":{}}}],["src/entities/user.entity.ts:22",{"_index":729,"title":{},"body":{"entities/User.html":{}}}],["src/entities/user.entity.ts:25",{"_index":741,"title":{},"body":{"entities/User.html":{}}}],["src/entities/user.entity.ts:28",{"_index":730,"title":{},"body":{"entities/User.html":{}}}],["src/entities/user.entity.ts:31",{"_index":739,"title":{},"body":{"entities/User.html":{}}}],["src/entities/user.entity.ts:34",{"_index":742,"title":{},"body":{"entities/User.html":{}}}],["src/entities/user.entity.ts:37",{"_index":722,"title":{},"body":{"entities/User.html":{}}}],["src/entities/user.entity.ts:40",{"_index":746,"title":{},"body":{"entities/User.html":{}}}],["src/entities/user.entity.ts:43",{"_index":731,"title":{},"body":{"entities/User.html":{}}}],["src/entities/user.entity.ts:46",{"_index":743,"title":{},"body":{"entities/User.html":{}}}],["src/entities/user.entity.ts:53",{"_index":744,"title":{},"body":{"entities/User.html":{}}}],["src/entities/user.entity.ts:60",{"_index":745,"title":{},"body":{"entities/User.html":{}}}],["src/entities/user.entity.ts:63",{"_index":755,"title":{},"body":{"entities/User.html":{}}}],["src/entities/user.entity.ts:67",{"_index":725,"title":{},"body":{"entities/User.html":{}}}],["src/entities/user.entity.ts:70",{"_index":726,"title":{},"body":{"entities/User.html":{}}}],["src/entities/user.entity.ts:78",{"_index":750,"title":{},"body":{"entities/User.html":{}}}],["src/entities/user.entity.ts:81",{"_index":737,"title":{},"body":{"entities/User.html":{}}}],["src/entities/user.entity.ts:84",{"_index":735,"title":{},"body":{"entities/User.html":{}}}],["src/entities/user.entity.ts:87",{"_index":738,"title":{},"body":{"entities/User.html":{}}}],["src/entities/user.entity.ts:90",{"_index":727,"title":{},"body":{"entities/User.html":{}}}],["src/entities/user.entity.ts:93",{"_index":751,"title":{},"body":{"entities/User.html":{}}}],["src/enums/company",{"_index":995,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/enums/user",{"_index":275,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/enumerations.html":{}}}],["src/filters/feature",{"_index":517,"title":{},"body":{"classes/FeatureRestrictionFilter.html":{},"coverage.html":{}}}],["src/guards/company",{"_index":406,"title":{},"body":{"guards/CompanyAccessGuard.html":{},"coverage.html":{}}}],["src/guards/feature.guard",{"_index":162,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/guards/feature.guard.ts",{"_index":494,"title":{},"body":{"guards/FeatureGuard.html":{},"coverage.html":{}}}],["src/guards/feature.guard.ts:12",{"_index":496,"title":{},"body":{"guards/FeatureGuard.html":{}}}],["src/guards/feature.guard.ts:16",{"_index":497,"title":{},"body":{"guards/FeatureGuard.html":{}}}],["src/guards/guards.module.ts",{"_index":569,"title":{},"body":{"modules/GuardsModule.html":{}}}],["src/guards/user",{"_index":164,"title":{},"body":{"controllers/AuthController.html":{},"guards/UserLimitGuard.html":{},"injectables/UserLimitService.html":{},"coverage.html":{}}}],["src/mail/mail.module.ts",{"_index":608,"title":{},"body":{"modules/MailModule.html":{}}}],["src/mail/mail.service.ts",{"_index":623,"title":{},"body":{"injectables/MailService.html":{},"coverage.html":{}}}],["src/mail/mail.service.ts:25",{"_index":633,"title":{},"body":{"injectables/MailService.html":{}}}],["src/mail/mail.service.ts:45",{"_index":631,"title":{},"body":{"injectables/MailService.html":{}}}],["src/mail/mail.service.ts:7",{"_index":627,"title":{},"body":{"injectables/MailService.html":{}}}],["src/main.ts",{"_index":959,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/users/users.controller.ts",{"_index":795,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/users/users.controller.ts:20",{"_index":804,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:28",{"_index":809,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:35",{"_index":801,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:45",{"_index":813,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.module.ts",{"_index":848,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/users/users.service.ts",{"_index":850,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/users/users.service.ts:107",{"_index":854,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:142",{"_index":857,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:15",{"_index":855,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:82",{"_index":856,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:9",{"_index":852,"title":{},"body":{"injectables/UsersService.html":{}}}],["ssl",{"_index":76,"title":{},"body":{"modules/AppModule.html":{}}}],["start",{"_index":1022,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":1025,"title":{},"body":{"index.html":{}}}],["start:prodrun",{"_index":1026,"title":{},"body":{"index.html":{}}}],["started",{"_index":1003,"title":{"index.html":{}},"body":{}}],["starter",{"_index":1015,"title":{},"body":{"index.html":{}}}],["statements",{"_index":941,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":339,"title":{},"body":{"injectables/AuthService.html":{},"entities/Company.html":{},"classes/FeatureRestrictionFilter.html":{},"entities/User.html":{}}}],["status.enum",{"_index":276,"title":{},"body":{"injectables/AuthService.html":{},"entities/User.html":{}}}],["status.enum.ts",{"_index":994,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["statuscode",{"_index":535,"title":{},"body":{"classes/FeatureRestrictionFilter.html":{}}}],["stay",{"_index":1095,"title":{},"body":{"index.html":{}}}],["steps",{"_index":1037,"title":{},"body":{"index.html":{}}}],["straightforward",{"_index":1054,"title":{},"body":{"index.html":{}}}],["strategies/jwt.strategy",{"_index":224,"title":{},"body":{"modules/AuthModule.html":{}}}],["strategy",{"_index":591,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["streetname",{"_index":354,"title":{},"body":{"entities/Company.html":{},"classes/CreateCompanyDto.html":{},"classes/UpdateUserProfileDto.html":{},"entities/User.html":{}}}],["strict",{"_index":195,"title":{},"body":{"controllers/AuthController.html":{}}}],["string",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"entities/Company.html":{},"classes/CompleteRegistrationDto.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateInvitationDto.html":{},"classes/CreateSuperAdminDto.html":{},"interfaces/FeatureConfig.html":{},"classes/FilterUsersDto.html":{},"injectables/MailService.html":{},"interfaces/PlanLimits.html":{},"classes/UpdateUserProfileDto.html":{},"entities/User.html":{},"injectables/UserLimitService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["subject",{"_index":655,"title":{},"body":{"injectables/MailService.html":{}}}],["super",{"_index":595,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["superadmin",{"_index":336,"title":{},"body":{"injectables/AuthService.html":{},"guards/FeatureGuard.html":{},"guards/UserLimitGuard.html":{},"miscellaneous/enumerations.html":{}}}],["superadmin.dto",{"_index":159,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["superadmin.dto.ts",{"_index":464,"title":{},"body":{"classes/CreateSuperAdminDto.html":{},"coverage.html":{}}}],["superadmin.dto.ts:14",{"_index":467,"title":{},"body":{"classes/CreateSuperAdminDto.html":{}}}],["superadmin.dto.ts:18",{"_index":468,"title":{},"body":{"classes/CreateSuperAdminDto.html":{}}}],["superadmin.dto.ts:6",{"_index":465,"title":{},"body":{"classes/CreateSuperAdminDto.html":{}}}],["superadmin_companies",{"_index":748,"title":{},"body":{"entities/User.html":{}}}],["superadmincompanies",{"_index":721,"title":{},"body":{"entities/User.html":{}}}],["superadminrole",{"_index":888,"title":{},"body":{"injectables/UsersService.html":{}}}],["superadmins",{"_index":355,"title":{},"body":{"entities/Company.html":{},"guards/CompanyAccessGuard.html":{},"guards/FeatureGuard.html":{},"guards/UserLimitGuard.html":{},"injectables/UsersService.html":{}}}],["superadminów",{"_index":934,"title":{},"body":{"injectables/UsersService.html":{}}}],["support",{"_index":1074,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":1127,"title":{},"body":{"modules.html":{}}}],["swojej",{"_index":921,"title":{},"body":{"injectables/UsersService.html":{}}}],["synchronize",{"_index":73,"title":{},"body":{"modules/AppModule.html":{}}}],["systemie",{"_index":679,"title":{},"body":{"injectables/MailService.html":{}}}],["systemu",{"_index":663,"title":{},"body":{"injectables/MailService.html":{}}}],["ta",{"_index":536,"title":{},"body":{"classes/FeatureRestrictionFilter.html":{}}}],["table",{"_index":962,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":961,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":1038,"title":{},"body":{"index.html":{}}}],["take(parseint(limit",{"_index":900,"title":{},"body":{"injectables/UsersService.html":{}}}],["test",{"_index":1029,"title":{},"body":{"index.html":{}}}],["test:covdeployment",{"_index":1032,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":1031,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1027,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":1109,"title":{},"body":{"index.html":{}}}],["this.appservice.gethello",{"_index":25,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.changeuserrole(userid",{"_index":212,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.completeregistration(completeregistrationdto",{"_index":176,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.createcompanymemberinvitation",{"_index":174,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.createnewclientinvitation(createinvitationdto",{"_index":170,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.createsuperadmin(createsuperadmindto",{"_index":214,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.login(email",{"_index":183,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.companyrepository.findone",{"_index":781,"title":{},"body":{"injectables/UserLimitService.html":{}}}],["this.configservice.get",{"_index":649,"title":{},"body":{"injectables/MailService.html":{}}}],["this.configservice.get('smtp_from",{"_index":654,"title":{},"body":{"injectables/MailService.html":{}}}],["this.configservice.get('smtp_host",{"_index":637,"title":{},"body":{"injectables/MailService.html":{}}}],["this.configservice.get('smtp_password",{"_index":642,"title":{},"body":{"injectables/MailService.html":{}}}],["this.configservice.get('smtp_port",{"_index":639,"title":{},"body":{"injectables/MailService.html":{}}}],["this.configservice.get('smtp_secure",{"_index":640,"title":{},"body":{"injectables/MailService.html":{}}}],["this.configservice.get('smtp_user",{"_index":641,"title":{},"body":{"injectables/MailService.html":{}}}],["this.generatetoken(user",{"_index":341,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.mailservice.sendcompanymemberinvitation",{"_index":320,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.mailservice.sendnewclientinvitation(email",{"_index":300,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.planhierarchy[companyplan",{"_index":515,"title":{},"body":{"guards/FeatureGuard.html":{}}}],["this.planhierarchy[featureconfig.minplan",{"_index":513,"title":{},"body":{"guards/FeatureGuard.html":{}}}],["this.reflector.get",{"_index":503,"title":{},"body":{"guards/FeatureGuard.html":{}}}],["this.reflector.getallandoverride(roles_key",{"_index":696,"title":{},"body":{"guards/RolesGuard.html":{}}}],["this.transporter",{"_index":635,"title":{},"body":{"injectables/MailService.html":{}}}],["this.transporter.sendmail",{"_index":653,"title":{},"body":{"injectables/MailService.html":{}}}],["this.userlimitservice.checkuserlimit(user.id",{"_index":769,"title":{},"body":{"guards/UserLimitGuard.html":{}}}],["this.userrepository.count",{"_index":787,"title":{},"body":{"injectables/UserLimitService.html":{}}}],["this.userrepository.create",{"_index":295,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userrepository.createquerybuilder('user",{"_index":864,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userrepository.findone",{"_index":283,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["this.userrepository.save(user",{"_index":299,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["this.usersservice.changerole(userid",{"_index":840,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findall(filterdto",{"_index":834,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findone(id",{"_index":838,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.updatewage(id",{"_index":844,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.validateuser(email",{"_index":342,"title":{},"body":{"injectables/AuthService.html":{}}}],["throw",{"_index":284,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"guards/UserLimitGuard.html":{},"injectables/UsersService.html":{}}}],["time",{"_index":1089,"title":{},"body":{"index.html":{}}}],["timestamp",{"_index":734,"title":{},"body":{"entities/User.html":{}}}],["tls",{"_index":643,"title":{},"body":{"injectables/MailService.html":{}}}],["token",{"_index":181,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CompleteRegistrationDto.html":{},"injectables/JwtStrategy.html":{},"injectables/MailService.html":{},"guards/RolesGuard.html":{}}}],["tokens",{"_index":186,"title":{},"body":{"controllers/AuthController.html":{}}}],["total",{"_index":903,"title":{},"body":{"injectables/UsersService.html":{}}}],["touch",{"_index":1117,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":971,"title":{},"body":{"dependencies.html":{}}}],["transport",{"_index":615,"title":{},"body":{"modules/MailModule.html":{}}}],["transporter",{"_index":624,"title":{},"body":{"injectables/MailService.html":{}}}],["true",{"_index":65,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"entities/Company.html":{},"guards/CompanyAccessGuard.html":{},"guards/FeatureGuard.html":{},"guards/RolesGuard.html":{},"entities/User.html":{},"guards/UserLimitGuard.html":{},"injectables/UserLimitService.html":{},"miscellaneous/variables.html":{}}}],["twitter",{"_index":1123,"title":{},"body":{"index.html":{}}}],["twoim",{"_index":542,"title":{},"body":{"classes/FeatureRestrictionFilter.html":{}}}],["tworzy",{"_index":930,"title":{},"body":{"injectables/UsersService.html":{}}}],["tylko",{"_index":310,"title":{},"body":{"injectables/AuthService.html":{}}}],["tym",{"_index":287,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["type",{"_index":68,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"entities/Company.html":{},"guards/CompanyAccessGuard.html":{},"classes/CompleteRegistrationDto.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateInvitationDto.html":{},"classes/CreateSuperAdminDto.html":{},"interfaces/FeatureConfig.html":{},"guards/FeatureGuard.html":{},"classes/FeatureRestrictionFilter.html":{},"classes/FilterUsersDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/MailService.html":{},"interfaces/PlanLimits.html":{},"guards/RolesGuard.html":{},"classes/UpdateUserProfileDto.html":{},"entities/User.html":{},"guards/UserLimitGuard.html":{},"injectables/UserLimitService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeorm",{"_index":268,"title":{},"body":{"injectables/AuthService.html":{},"entities/Company.html":{},"entities/User.html":{},"injectables/UserLimitService.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["typeormmodule",{"_index":52,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/GuardsModule.html":{},"modules/UsersModule.html":{}}}],["typeormmodule.forfeature([user",{"_index":227,"title":{},"body":{"modules/AuthModule.html":{},"modules/GuardsModule.html":{},"modules/UsersModule.html":{}}}],["typeormmodule.forrootasync",{"_index":66,"title":{},"body":{"modules/AppModule.html":{}}}],["typescript",{"_index":1014,"title":{},"body":{"index.html":{}}}],["unauthorizedexception",{"_index":265,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{}}}],["unauthorizedexception('invalid",{"_index":329,"title":{},"body":{"injectables/AuthService.html":{}}}],["undefined",{"_index":379,"title":{},"body":{"entities/Company.html":{},"entities/User.html":{},"controllers/UsersController.html":{}}}],["unique",{"_index":760,"title":{},"body":{"entities/User.html":{}}}],["unit",{"_index":1028,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":110,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["unlicensed",{"_index":1133,"title":{},"body":{"properties.html":{}}}],["up",{"_index":686,"title":{},"body":{"interfaces/PlanLimits.html":{},"miscellaneous/variables.html":{}}}],["updatedat",{"_index":356,"title":{},"body":{"entities/Company.html":{},"entities/User.html":{}}}],["updatedatecolumn",{"_index":387,"title":{},"body":{"entities/Company.html":{},"entities/User.html":{}}}],["updates",{"_index":1097,"title":{},"body":{"index.html":{}}}],["updateuserprofiledto",{"_index":708,"title":{"classes/UpdateUserProfileDto.html":{}},"body":{"classes/UpdateUserProfileDto.html":{},"coverage.html":{}}}],["updatewage",{"_index":798,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["updatewage(id",{"_index":810,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["uprawnie",{"_index":925,"title":{},"body":{"injectables/UsersService.html":{}}}],["url",{"_index":70,"title":{},"body":{"modules/AppModule.html":{}}}],["usefactory",{"_index":67,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/MailModule.html":{}}}],["useguards",{"_index":141,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["useguards(companyaccessguard",{"_index":836,"title":{},"body":{"controllers/UsersController.html":{}}}],["useguards(featureguard",{"_index":172,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(jwtauthguard",{"_index":168,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["user",{"_index":55,"title":{"entities/User.html":{}},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/Company.html":{},"guards/CompanyAccessGuard.html":{},"interfaces/FeatureConfig.html":{},"guards/FeatureGuard.html":{},"modules/GuardsModule.html":{},"injectables/JwtAuthGuard.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"guards/RolesGuard.html":{},"entities/User.html":{},"guards/UserLimitGuard.html":{},"injectables/UserLimitService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["user's",{"_index":508,"title":{},"body":{"guards/FeatureGuard.html":{}}}],["user.city",{"_index":870,"title":{},"body":{"injectables/UsersService.html":{}}}],["user.company",{"_index":390,"title":{},"body":{"entities/Company.html":{}}}],["user.company?.plan",{"_index":509,"title":{},"body":{"guards/FeatureGuard.html":{}}}],["user.companyid",{"_index":426,"title":{},"body":{"guards/CompanyAccessGuard.html":{},"guards/UserLimitGuard.html":{},"injectables/UsersService.html":{}}}],["user.createdat",{"_index":878,"title":{},"body":{"injectables/UsersService.html":{}}}],["user.email",{"_index":866,"title":{},"body":{"injectables/UsersService.html":{}}}],["user.entity",{"_index":399,"title":{},"body":{"entities/Company.html":{}}}],["user.firstname",{"_index":867,"title":{},"body":{"injectables/UsersService.html":{}}}],["user.housenumber",{"_index":872,"title":{},"body":{"injectables/UsersService.html":{}}}],["user.id",{"_index":865,"title":{},"body":{"injectables/UsersService.html":{}}}],["user.invitationexpires",{"_index":325,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["user.invitationtoken",{"_index":876,"title":{},"body":{"injectables/UsersService.html":{}}}],["user.isprofilecomplete",{"_index":877,"title":{},"body":{"injectables/UsersService.html":{}}}],["user.lastname",{"_index":868,"title":{},"body":{"injectables/UsersService.html":{}}}],["user.phonenumber",{"_index":869,"title":{},"body":{"injectables/UsersService.html":{}}}],["user.postcode",{"_index":873,"title":{},"body":{"injectables/UsersService.html":{}}}],["user.role",{"_index":425,"title":{},"body":{"guards/CompanyAccessGuard.html":{},"guards/FeatureGuard.html":{},"guards/RolesGuard.html":{},"guards/UserLimitGuard.html":{},"injectables/UsersService.html":{}}}],["user.status",{"_index":874,"title":{},"body":{"injectables/UsersService.html":{}}}],["user.streetname",{"_index":871,"title":{},"body":{"injectables/UsersService.html":{}}}],["user.superadmincompanies",{"_index":385,"title":{},"body":{"entities/Company.html":{}}}],["user.updatedat",{"_index":879,"title":{},"body":{"injectables/UsersService.html":{}}}],["user.wage",{"_index":875,"title":{},"body":{"injectables/UsersService.html":{}}}],["user_management",{"_index":477,"title":{},"body":{"interfaces/FeatureConfig.html":{},"miscellaneous/variables.html":{}}}],["userid",{"_index":211,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"entities/User.html":{},"injectables/UserLimitService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["userlimitguard",{"_index":163,"title":{"guards/UserLimitGuard.html":{}},"body":{"controllers/AuthController.html":{},"modules/GuardsModule.html":{},"guards/UserLimitGuard.html":{},"coverage.html":{},"overview.html":{}}}],["userlimitguard)@roles(userrole.owner",{"_index":121,"title":{},"body":{"controllers/AuthController.html":{}}}],["userlimitservice",{"_index":568,"title":{"injectables/UserLimitService.html":{}},"body":{"modules/GuardsModule.html":{},"guards/UserLimitGuard.html":{},"injectables/UserLimitService.html":{},"coverage.html":{},"overview.html":{}}}],["userrepository",{"_index":247,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserLimitService.html":{},"injectables/UsersService.html":{}}}],["userrole",{"_index":153,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/CompanyAccessGuard.html":{},"classes/FilterUsersDto.html":{},"guards/RolesGuard.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["userrole.admin",{"_index":122,"title":{},"body":{"controllers/AuthController.html":{},"guards/RolesGuard.html":{},"controllers/UsersController.html":{}}}],["userrole.admin)@requirefeature('role_management",{"_index":800,"title":{},"body":{"controllers/UsersController.html":{}}}],["userrole.admin)@requirefeature('wage_management",{"_index":812,"title":{},"body":{"controllers/UsersController.html":{}}}],["userrole.admin)@useguards(companyaccessguard)@companyaccess",{"_index":808,"title":{},"body":{"controllers/UsersController.html":{}}}],["userrole.admin].includes(currentuser.role",{"_index":309,"title":{},"body":{"injectables/AuthService.html":{}}}],["userrole.leader",{"_index":702,"title":{},"body":{"guards/RolesGuard.html":{}}}],["userrole.owner",{"_index":104,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/RolesGuard.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["userrole.superadmin",{"_index":105,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/CompanyAccessGuard.html":{},"guards/RolesGuard.html":{},"injectables/UsersService.html":{}}}],["userrole.user",{"_index":318,"title":{},"body":{"injectables/AuthService.html":{},"guards/RolesGuard.html":{},"entities/User.html":{}}}],["userrolelevel",{"_index":703,"title":{},"body":{"guards/RolesGuard.html":{}}}],["users",{"_index":357,"title":{},"body":{"entities/Company.html":{},"guards/CompanyAccessGuard.html":{},"interfaces/PlanLimits.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["users.controller",{"_index":849,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.dto",{"_index":827,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["users.dto.ts",{"_index":552,"title":{},"body":{"classes/FilterUsersDto.html":{},"coverage.html":{}}}],["users.dto.ts:11",{"_index":561,"title":{},"body":{"classes/FilterUsersDto.html":{}}}],["users.dto.ts:15",{"_index":557,"title":{},"body":{"classes/FilterUsersDto.html":{}}}],["users.dto.ts:19",{"_index":559,"title":{},"body":{"classes/FilterUsersDto.html":{}}}],["users.dto.ts:23",{"_index":558,"title":{},"body":{"classes/FilterUsersDto.html":{}}}],["users.dto.ts:7",{"_index":562,"title":{},"body":{"classes/FilterUsersDto.html":{}}}],["users.service",{"_index":817,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["users/users.module",{"_index":61,"title":{},"body":{"modules/AppModule.html":{}}}],["userscontroller",{"_index":794,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["usersmodule",{"_index":43,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersservice",{"_index":816,"title":{"injectables/UsersService.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["userstatus",{"_index":274,"title":{},"body":{"injectables/AuthService.html":{},"entities/User.html":{},"miscellaneous/enumerations.html":{}}}],["userstatus.active",{"_index":340,"title":{},"body":{"injectables/AuthService.html":{},"entities/User.html":{}}}],["using",{"_index":1090,"title":{},"body":{"index.html":{}}}],["uuid",{"_index":273,"title":{},"body":{"injectables/AuthService.html":{}}}],["uuidv4",{"_index":272,"title":{},"body":{"injectables/AuthService.html":{}}}],["użytkownik",{"_index":285,"title":{},"body":{"injectables/AuthService.html":{}}}],["użytkownikiem",{"_index":927,"title":{},"body":{"injectables/UsersService.html":{}}}],["użytkowników",{"_index":317,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserLimitService.html":{}}}],["v4",{"_index":271,"title":{},"body":{"injectables/AuthService.html":{}}}],["validate",{"_index":583,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(payload",{"_index":586,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validateuser",{"_index":240,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateuser(email",{"_index":263,"title":{},"body":{"injectables/AuthService.html":{}}}],["validator",{"_index":440,"title":{},"body":{"classes/CompleteRegistrationDto.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateInvitationDto.html":{},"classes/CreateSuperAdminDto.html":{},"classes/FilterUsersDto.html":{},"classes/UpdateUserProfileDto.html":{},"dependencies.html":{}}}],["validsetupkey",{"_index":327,"title":{},"body":{"injectables/AuthService.html":{}}}],["value",{"_index":996,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["varchar",{"_index":736,"title":{},"body":{"entities/User.html":{}}}],["variable",{"_index":947,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1134,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verify",{"_index":304,"title":{},"body":{"injectables/AuthService.html":{}}}],["version",{"_index":1131,"title":{},"body":{"properties.html":{}}}],["video",{"_index":1082,"title":{},"body":{"index.html":{}}}],["view",{"_index":912,"title":{},"body":{"injectables/UsersService.html":{}}}],["visit",{"_index":1071,"title":{},"body":{"index.html":{}}}],["visualize",{"_index":1085,"title":{},"body":{"index.html":{}}}],["void",{"_index":527,"title":{},"body":{"classes/FeatureRestrictionFilter.html":{}}}],["w",{"_index":541,"title":{},"body":{"classes/FeatureRestrictionFilter.html":{},"injectables/MailService.html":{}}}],["wage",{"_index":486,"title":{},"body":{"interfaces/FeatureConfig.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["wage_management",{"_index":483,"title":{},"body":{"interfaces/FeatureConfig.html":{},"miscellaneous/variables.html":{}}}],["wages",{"_index":937,"title":{},"body":{"injectables/UsersService.html":{}}}],["watch",{"_index":1023,"title":{},"body":{"index.html":{}}}],["ważny",{"_index":671,"title":{},"body":{"injectables/MailService.html":{}}}],["weak",{"_index":432,"title":{},"body":{"classes/CompleteRegistrationDto.html":{},"classes/CreateSuperAdminDto.html":{}}}],["website",{"_index":1121,"title":{},"body":{"index.html":{}}}],["where('user.companyid",{"_index":886,"title":{},"body":{"injectables/UsersService.html":{}}}],["witaj",{"_index":659,"title":{},"body":{"injectables/MailService.html":{}}}],["work",{"_index":491,"title":{},"body":{"interfaces/FeatureConfig.html":{},"miscellaneous/variables.html":{}}}],["working",{"_index":1070,"title":{},"body":{"index.html":{}}}],["world",{"_index":85,"title":{},"body":{"injectables/AppService.html":{}}}],["wylogowano",{"_index":207,"title":{},"body":{"controllers/AuthController.html":{}}}],["wysłane",{"_index":303,"title":{},"body":{"injectables/AuthService.html":{}}}],["własnej",{"_index":922,"title":{},"body":{"injectables/UsersService.html":{}}}],["właściciel",{"_index":311,"title":{},"body":{"injectables/AuthService.html":{}}}],["właścicieli",{"_index":933,"title":{},"body":{"injectables/UsersService.html":{}}}],["x",{"_index":1099,"title":{},"body":{"index.html":{}}}],["you'd",{"_index":1113,"title":{},"body":{"index.html":{}}}],["you're",{"_index":1033,"title":{},"body":{"index.html":{}}}],["z",{"_index":286,"title":{},"body":{"injectables/AuthService.html":{},"classes/CompleteRegistrationDto.html":{},"classes/CreateSuperAdminDto.html":{},"injectables/MailService.html":{}}}],["z])(?=.*[a",{"_index":431,"title":{},"body":{"classes/CompleteRegistrationDto.html":{},"classes/CreateSuperAdminDto.html":{}}}],["zaprasza",{"_index":315,"title":{},"body":{"injectables/AuthService.html":{}}}],["zaprosi",{"_index":676,"title":{},"body":{"injectables/MailService.html":{}}}],["zaproszenie",{"_index":301,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MailService.html":{}}}],["zaproszony",{"_index":661,"title":{},"body":{"injectables/MailService.html":{}}}],["zarządzania",{"_index":926,"title":{},"body":{"injectables/UsersService.html":{}}}],["zmieni",{"_index":920,"title":{},"body":{"injectables/UsersService.html":{}}}],["znaleziona",{"_index":785,"title":{},"body":{"injectables/UserLimitService.html":{}}}],["znaleziony",{"_index":911,"title":{},"body":{"injectables/UsersService.html":{}}}],["zoom",{"_index":44,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/GuardsModule.html":{},"modules/MailModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["zosta",{"_index":910,"title":{},"body":{"injectables/UsersService.html":{}}}],["została",{"_index":784,"title":{},"body":{"injectables/UserLimitService.html":{}}}],["zostałe",{"_index":660,"title":{},"body":{"injectables/MailService.html":{}}}],["zostało",{"_index":302,"title":{},"body":{"injectables/AuthService.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/app.controller.ts:9\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nGuardsModule\n\nGuardsModule\n\nAppModule -->\n\nGuardsModule->AppModule\n\n\n\n\n\nMailModule\n\nMailModule\n\nAppModule -->\n\nMailModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            GuardsModule\n                        \n                        \n                            MailModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { User } from './entities/user.entity';\nimport { Company } from './entities/company.entity';\nimport { MailModule } from './mail/mail.module';\nimport { AuthModule } from './auth/auth.module';\nimport { UsersModule } from './users/users.module';\nimport { GuardsModule } from './guards/guards.module';\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      isGlobal: true,\n    }),\n    TypeOrmModule.forRootAsync({\n      imports: [ConfigModule],\n      useFactory: (configService: ConfigService) => ({\n        type: 'postgres',\n        url: configService.get('DATABASE_URL'),\n        entities: [User, Company],\n        synchronize: configService.get('NODE_ENV') === 'DEV',\n        ssl: process.env.NODE_ENV === 'production',\n      }),\n      inject: [ConfigService],\n    }),\n    MailModule,\n    AuthModule,\n    UsersModule,\n    GuardsModule,\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                changeUserRole\n                            \n                            \n                                    \n                                    Async\n                                completeRegistration\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                createCompanyMemberInvitation\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                createNewClientInvitation\n                            \n                            \n                                    \n                                    Async\n                                createSuperAdmin\n                            \n                            \n                                    \n                                    Async\n                                login\n                            \n                            \n                                    \n                                    Async\n                                logout\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        changeUserRole\n                        \n                    \n                \n            \n            \n                \n                        \n                    changeUserRole(undefined: literal type, req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('change-role')@UseGuards(JwtAuthGuard, RolesGuard)@Roles(UserRole.ADMIN, UserRole.OWNER, UserRole.SUPERADMIN)\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:89\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        completeRegistration\n                        \n                    \n                \n            \n            \n                \n                        \n                    completeRegistration(completeRegistrationDto: CompleteRegistrationDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('complete-registration')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                completeRegistrationDto\n                                            \n                                                            CompleteRegistrationDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Async\n                        createCompanyMemberInvitation\n                        \n                    \n                \n            \n            \n                \n                        \n                    createCompanyMemberInvitation(createInvitationDto: CreateInvitationDto, req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('invite-member')@UseGuards(JwtAuthGuard, RolesGuard)@UseGuards(FeatureGuard, UserLimitGuard)@Roles(UserRole.OWNER, UserRole.ADMIN)\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createInvitationDto\n                                            \n                                                            CreateInvitationDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        createNewClientInvitation\n                        \n                    \n                \n            \n            \n                \n                        \n                    createNewClientInvitation(createInvitationDto: CreateInvitationDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('invite-client')@UseGuards(JwtAuthGuard, RolesGuard)@Roles(UserRole.SUPERADMIN)\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createInvitationDto\n                                            \n                                                            CreateInvitationDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        createSuperAdmin\n                        \n                    \n                \n            \n            \n                \n                        \n                    createSuperAdmin(createSuperAdminDto: CreateSuperAdminDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('setup/superadmin')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:97\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createSuperAdminDto\n                                            \n                                                            CreateSuperAdminDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(undefined: literal type, response: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('login')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        logout\n                        \n                    \n                \n            \n            \n                \n                        \n                    logout(response: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('logout')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:72\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                response\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Post, Body, UseGuards, Req, Res } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { CreateInvitationDto } from '../dto/user/create-invitation.dto';\nimport { CompleteRegistrationDto } from '../dto/user/complete-registration.dto';\nimport { RolesGuard } from './guards/roles.guard';\nimport { Roles } from './decorators/roles.decorator';\nimport { UserRole } from '../enums/user-role.enum';\nimport { JwtAuthGuard } from './guards/jwt-auth.guard';\nimport { CreateSuperAdminDto } from '../dto/user/create-superadmin.dto';\nimport { Response } from 'express';\nimport { FeatureGuard } from 'src/guards/feature.guard';\nimport { UserLimitGuard } from 'src/guards/user-limit.guard';\n\n@Controller('auth')\nexport class AuthController {\n  constructor(private readonly authService: AuthService) {}\n\n  @Post('invite-client')\n  @UseGuards(JwtAuthGuard, RolesGuard)\n  @Roles(UserRole.SUPERADMIN)\n  async createNewClientInvitation(\n    @Body() createInvitationDto: CreateInvitationDto,\n  ) {\n    return this.authService.createNewClientInvitation(createInvitationDto);\n  }\n\n  @Post('invite-member')\n  @UseGuards(JwtAuthGuard, RolesGuard)\n  @UseGuards(FeatureGuard, UserLimitGuard)\n  @Roles(UserRole.OWNER, UserRole.ADMIN)\n  async createCompanyMemberInvitation(\n    @Body() createInvitationDto: CreateInvitationDto,\n    @Req() req,\n  ) {\n    return this.authService.createCompanyMemberInvitation(\n      createInvitationDto,\n      req.user,\n    );\n  }\n\n  @Post('complete-registration')\n  async completeRegistration(\n    @Body() completeRegistrationDto: CompleteRegistrationDto,\n  ) {\n    return this.authService.completeRegistration(completeRegistrationDto);\n  }\n\n  @Post('login')\n  async login(\n    @Body() { email, password }: { email: string; password: string },\n    @Res({ passthrough: true }) response: Response,\n  ) {\n    const { user, token } = await this.authService.login(email, password);\n\n    // Clear any existing tokens\n    response.clearCookie('jwt');\n    response.clearCookie('token');\n\n    // Set new token\n    response.cookie('fitlit_token', token, {\n      httpOnly: true,\n      secure: true,\n      sameSite: 'strict',\n      maxAge: 24 * 60 * 60 * 1000, // 24 hours\n      domain: process.env.COOKIE_DOMAIN,\n    });\n\n    return { user };\n  }\n\n  @Post('logout')\n  async logout(@Res({ passthrough: true }) response: Response) {\n    // Clear all possible tokens\n    response.clearCookie('fitlit_token', {\n      httpOnly: true,\n      secure: true,\n      sameSite: 'strict',\n      domain: process.env.COOKIE_DOMAIN,\n    });\n    response.clearCookie('jwt');\n    response.clearCookie('token');\n\n    return { message: 'Wylogowano pomyślnie' };\n  }\n\n  @Post('change-role')\n  @UseGuards(JwtAuthGuard, RolesGuard)\n  @Roles(UserRole.ADMIN, UserRole.OWNER, UserRole.SUPERADMIN)\n  async changeUserRole(\n    @Body() { userId, role }: { userId: string; role: UserRole },\n    @Req() req,\n  ) {\n    return this.authService.changeUserRole(userId, role, req.user);\n  }\n\n  @Post('setup/superadmin')\n  async createSuperAdmin(@Body() createSuperAdminDto: CreateSuperAdminDto) {\n    return this.authService.createSuperAdmin(createSuperAdminDto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nGuardsModule\n\nGuardsModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nGuardsModule->AuthModule\n\n\n\n\n\nMailModule\n\nMailModule\n\nAuthModule -->\n\nMailModule->AuthModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            GuardsModule\n                        \n                        \n                            MailModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { JwtModule } from '@nestjs/jwt';\nimport { ConfigService } from '@nestjs/config';\nimport { AuthService } from './auth.service';\nimport { AuthController } from './auth.controller';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { User } from '../entities/user.entity';\nimport { MailModule } from '../mail/mail.module';\nimport { JwtStrategy } from './strategies/jwt.strategy';\nimport { PassportModule } from '@nestjs/passport';\nimport { GuardsModule } from '../guards/guards.module';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([User]),\n    PassportModule.register({ defaultStrategy: 'jwt' }),\n    JwtModule.registerAsync({\n      useFactory: (configService: ConfigService) => ({\n        secret: configService.get('JWT_SECRET'),\n        signOptions: {\n          expiresIn: `${configService.get('JWT_EXPIRATION_TIME')}s`,\n        },\n      }),\n      inject: [ConfigService],\n    }),\n    MailModule,\n    GuardsModule,\n  ],\n  providers: [AuthService, JwtStrategy],\n  controllers: [AuthController],\n  exports: [AuthService],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                changeUserRole\n                            \n                            \n                                    Async\n                                completeRegistration\n                            \n                            \n                                    Async\n                                createCompanyMemberInvitation\n                            \n                            \n                                    Async\n                                createNewClientInvitation\n                            \n                            \n                                    Async\n                                createSuperAdmin\n                            \n                            \n                                    Async\n                                generateToken\n                            \n                            \n                                    Async\n                                inviteToCompany\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                validateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository, jwtService: JwtService, mailService: MailService, configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mailService\n                                                  \n                                                        \n                                                                        MailService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        changeUserRole\n                        \n                    \n                \n            \n            \n                \n                        \n                    changeUserRole(userId: string, newRole: UserRole, currentUser: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:198\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                newRole\n                                            \n                                                            UserRole\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                currentUser\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        completeRegistration\n                        \n                    \n                \n            \n            \n                \n                        \n                    completeRegistration(completeRegistrationDto: CompleteRegistrationDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:110\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                completeRegistrationDto\n                                            \n                                                            CompleteRegistrationDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createCompanyMemberInvitation\n                        \n                    \n                \n            \n            \n                \n                        \n                    createCompanyMemberInvitation(createInvitationDto: CreateInvitationDto, currentUser: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:62\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createInvitationDto\n                                            \n                                                            CreateInvitationDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                currentUser\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createNewClientInvitation\n                        \n                    \n                \n            \n            \n                \n                        \n                    createNewClientInvitation(createInvitationDto: CreateInvitationDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createInvitationDto\n                                            \n                                                            CreateInvitationDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createSuperAdmin\n                        \n                    \n                \n            \n            \n                \n                        \n                    createSuperAdmin(createSuperAdminDto: CreateSuperAdminDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:269\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createSuperAdminDto\n                                            \n                                                            CreateSuperAdminDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        generateToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    generateToken(user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:138\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        inviteToCompany\n                        \n                    \n                \n            \n            \n                \n                        \n                    inviteToCompany(email: string, companyId: string, currentUser: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:238\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                companyId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                currentUser\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(email: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:305\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validateUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    validateUser(email: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:159\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  Injectable,\n  UnauthorizedException,\n  BadRequestException,\n} from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { User } from '../entities/user.entity';\nimport { CreateInvitationDto } from '../dto/user/create-invitation.dto';\nimport { CompleteRegistrationDto } from '../dto/user/complete-registration.dto';\nimport { MailService } from '../mail/mail.service';\nimport { UserRole } from '../enums/user-role.enum';\nimport * as bcrypt from 'bcrypt';\nimport { v4 as uuidv4 } from 'uuid';\nimport { UserStatus } from 'src/enums/user-status.enum';\nimport { CreateSuperAdminDto } from '../dto/user/create-superadmin.dto';\nimport { ConfigService } from '@nestjs/config';\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    @InjectRepository(User)\n    private readonly userRepository: Repository,\n    private readonly jwtService: JwtService,\n    private readonly mailService: MailService,\n    private readonly configService: ConfigService,\n  ) {}\n\n  async createNewClientInvitation(createInvitationDto: CreateInvitationDto) {\n    const { email } = createInvitationDto;\n\n    // Check if user already exists\n    const existingUser = await this.userRepository.findOne({\n      where: { email },\n    });\n    if (existingUser) {\n      throw new BadRequestException(\n        'Użytkownik z tym adresem email już istnieje',\n      );\n    }\n\n    // Create invitation token\n    const token = uuidv4();\n    const expiresIn = new Date();\n    expiresIn.setHours(expiresIn.getHours() + 24);\n\n    // Create user with invitation token\n    const user = this.userRepository.create({\n      email,\n      invitationToken: token,\n      invitationExpires: expiresIn,\n      role: UserRole.OWNER, // They will be company owners\n    });\n\n    await this.userRepository.save(user);\n    await this.mailService.sendNewClientInvitation(email, token);\n\n    return { message: 'Zaproszenie zostało wysłane pomyślnie' };\n  }\n\n  async createCompanyMemberInvitation(\n    createInvitationDto: CreateInvitationDto,\n    currentUser: User,\n  ) {\n    const { email } = createInvitationDto;\n\n    // Check if user already exists\n    const existingUser = await this.userRepository.findOne({\n      where: { email },\n    });\n    if (existingUser) {\n      throw new BadRequestException(\n        'Użytkownik z tym adresem email już istnieje',\n      );\n    }\n\n    // Verify inviter has permission (must be OWNER or ADMIN)\n    if (![UserRole.OWNER, UserRole.ADMIN].includes(currentUser.role)) {\n      throw new UnauthorizedException(\n        'Tylko właściciel lub administrator może zapraszać nowych użytkowników',\n      );\n    }\n\n    // Create invitation token\n    const token = uuidv4();\n    const expiresIn = new Date();\n    expiresIn.setHours(expiresIn.getHours() + 24);\n\n    // Create user with invitation token\n    const user = this.userRepository.create({\n      email,\n      invitationToken: token,\n      invitationExpires: expiresIn,\n      role: UserRole.USER,\n      companyId: currentUser.companyId,\n    });\n\n    await this.userRepository.save(user);\n    await this.mailService.sendCompanyMemberInvitation(\n      email,\n      token,\n      currentUser.company.name,\n      `${currentUser.firstName} ${currentUser.lastName}`,\n    );\n\n    return { message: 'Zaproszenie zostało wysłane pomyślnie' };\n  }\n\n  async completeRegistration(completeRegistrationDto: CompleteRegistrationDto) {\n    const { token, password } = completeRegistrationDto;\n\n    const user = await this.userRepository.findOne({\n      where: { invitationToken: token },\n    });\n\n    const now = new Date();\n    if (!user || !user.invitationExpires || user.invitationExpires ('SETUP_KEY');\n    if (!validSetupKey || setupKey !== validSetupKey) {\n      throw new UnauthorizedException('Invalid setup key');\n    }\n\n    // Check if user already exists\n    const existingUser = await this.userRepository.findOne({\n      where: { email },\n    });\n    if (existingUser) {\n      throw new BadRequestException(\n        'Użytkownik z tym adresem email już istnieje',\n      );\n    }\n\n    // Hash password\n    const hashedPassword = await bcrypt.hash(password, 10);\n\n    // Create superadmin user\n    const user = this.userRepository.create({\n      email,\n      password: hashedPassword,\n      role: UserRole.SUPERADMIN,\n      isProfileComplete: false,\n      status: UserStatus.ACTIVE,\n    });\n\n    await this.userRepository.save(user);\n\n    return this.generateToken(user);\n  }\n\n  async login(email: string, password: string) {\n    const user = await this.validateUser(email, password);\n    return this.generateToken(user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Company.html":{"url":"entities/Company.html","title":"entity - Company","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Company\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/entities/company.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                city\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                houseNumber\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                isProfileComplete\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                owner\n                            \n                            \n                                    \n                                ownerId\n                            \n                            \n                                    \n                                phoneNumber\n                            \n                            \n                                    \n                                plan\n                            \n                            \n                                    \n                                postCode\n                            \n                            \n                                    \n                                status\n                            \n                            \n                                    \n                                streetName\n                            \n                            \n                                    \n                                superadmins\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                users\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        city\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/company.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/company.entity.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/company.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        houseNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/company.entity.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/company.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isProfileComplete\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/company.entity.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/company.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        owner\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined)@JoinColumn({name: 'ownerId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/company.entity.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ownerId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/company.entity.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        phoneNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/company.entity.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        plan\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CompanyPlan\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'enum', enum: CompanyPlan, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/company.entity.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        postCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/company.entity.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/company.entity.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        streetName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/company.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        superadmins\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, user => user.superadminCompanies)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/company.entity.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/company.entity.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        users\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, user => user.company)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/company.entity.ts:59\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Entity,\n  PrimaryGeneratedColumn,\n  Column,\n  CreateDateColumn,\n  UpdateDateColumn,\n  OneToMany,\n  OneToOne,\n  JoinColumn,\n  ManyToMany,\n} from 'typeorm';\nimport { CompanyPlan } from '../enums/company-plan.enum';\nimport { User } from './user.entity';\n\n@Entity('companies')\nexport class Company {\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column()\n  name: string;\n\n  @Column({ nullable: true })\n  email: string;\n\n  @Column({ nullable: true })\n  phoneNumber: string;\n\n  @Column({ nullable: true })\n  city: string;\n\n  @Column({ nullable: true })\n  streetName: string;\n\n  @Column({ nullable: true })\n  houseNumber: string;\n\n  @Column({ nullable: true })\n  postCode: string;\n\n  @Column({ default: true })\n  status: boolean;\n\n  @Column({\n    type: 'enum',\n    enum: CompanyPlan,\n    default: CompanyPlan.BASIC,\n  })\n  plan: CompanyPlan;\n\n  @OneToOne(() => User)\n  @JoinColumn({ name: 'ownerId' })\n  owner: User;\n\n  @Column({ nullable: true })\n  ownerId: string;\n\n  @OneToMany(() => User, (user) => user.company)\n  users: User[];\n\n  @ManyToMany(() => User, (user) => user.superadminCompanies)\n  superadmins: User[];\n\n  @Column({ default: false })\n  isProfileComplete: boolean;\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/CompanyAccessGuard.html":{"url":"guards/CompanyAccessGuard.html","title":"guard - CompanyAccessGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    CompanyAccessGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/guards/company-access.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in src/guards/company-access.guard.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/guards/company-access.guard.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable, CanActivate, ExecutionContext } from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { UserRole } from '../enums/user-role.enum';\n\n@Injectable()\nexport class CompanyAccessGuard implements CanActivate {\n  constructor(private reflector: Reflector) {}\n\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n    const companyId = request.params.companyId || request.query.companyId;\n\n    // Superadmins can access all companies\n    if (user.role === UserRole.SUPERADMIN) {\n      return true;\n    }\n\n    // Other users can only access their own company\n    return user.companyId === companyId;\n  }\n} \n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CompleteRegistrationDto.html":{"url":"classes/CompleteRegistrationDto.html","title":"class - CompleteRegistrationDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CompleteRegistrationDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/dto/user/complete-registration.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                password\n                            \n                            \n                                    \n                                    \n                                token\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()@MinLength(8)@Matches(/((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$/, {message: 'Password is too weak'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/user/complete-registration.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/user/complete-registration.dto.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString, MinLength, Matches } from 'class-validator';\n\nexport class CompleteRegistrationDto {\n  @IsNotEmpty()\n  @IsString()\n  token: string;\n\n  @IsNotEmpty()\n  @IsString()\n  @MinLength(8)\n  @Matches(/((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$/, {\n    message: 'Password is too weak',\n  })\n  password: string;\n} \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateCompanyDto.html":{"url":"classes/CreateCompanyDto.html","title":"class - CreateCompanyDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateCompanyDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/dto/company/create-company.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Optional\n                                city\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                email\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                houseNumber\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                phoneNumber\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                postCode\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                streetName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        city\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/company/create-company.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/company/create-company.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        houseNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/company/create-company.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/company/create-company.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        phoneNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsPhoneNumber()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/company/create-company.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        postCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/company/create-company.dto.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        streetName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/company/create-company.dto.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString, IsNotEmpty, IsOptional, IsEmail, IsPhoneNumber } from 'class-validator';\n\nexport class CreateCompanyDto {\n  @IsString()\n  @IsNotEmpty()\n  name: string;\n\n  @IsEmail()\n  @IsOptional()\n  email?: string;\n\n  @IsPhoneNumber()\n  @IsOptional()\n  phoneNumber?: string;\n\n  @IsString()\n  @IsOptional()\n  city?: string;\n\n  @IsString()\n  @IsOptional()\n  streetName?: string;\n\n  @IsString()\n  @IsOptional()\n  houseNumber?: string;\n\n  @IsString()\n  @IsOptional()\n  postCode?: string;\n} \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateInvitationDto.html":{"url":"classes/CreateInvitationDto.html","title":"class - CreateInvitationDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateInvitationDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/dto/user/create-invitation.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                email\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/user/create-invitation.dto.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsNotEmpty } from 'class-validator';\n\nexport class CreateInvitationDto {\n  @IsEmail()\n  @IsNotEmpty()\n  email: string;\n} \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateSuperAdminDto.html":{"url":"classes/CreateSuperAdminDto.html","title":"class - CreateSuperAdminDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateSuperAdminDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/dto/user/create-superadmin.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                password\n                            \n                            \n                                    \n                                    \n                                setupKey\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/user/create-superadmin.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@MinLength(8)@Matches(/((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$/, {message: 'Password is too weak'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/user/create-superadmin.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        setupKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/user/create-superadmin.dto.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsString, IsNotEmpty, MinLength, Matches } from 'class-validator';\n\nexport class CreateSuperAdminDto {\n  @IsEmail()\n  @IsNotEmpty()\n  email: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @MinLength(8)\n  @Matches(/((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$/, {\n    message: 'Password is too weak',\n  })\n  password: string;\n\n  @IsString()\n  @IsNotEmpty()\n  setupKey: string;\n} \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FeatureConfig.html":{"url":"interfaces/FeatureConfig.html","title":"interface - FeatureConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FeatureConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/config/features.config.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            minPlan\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        minPlan\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        minPlan:         CompanyPlan\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CompanyPlan\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { CompanyPlan } from '../enums/company-plan.enum';\n\ninterface FeatureConfig {\n  minPlan: CompanyPlan;\n  description: string;\n}\n\nexport const features: Record = {\n  USER_MANAGEMENT: {\n    minPlan: CompanyPlan.BASIC,\n    description: \"Basic user management\"\n  },\n  ROLE_MANAGEMENT: {\n    minPlan: CompanyPlan.BUSINESS,\n    description: \"Advanced role management\"\n  },\n  WAGE_MANAGEMENT: {\n    minPlan: CompanyPlan.ENTERPRISE,\n    description: \"Employee wage management\"\n  },\n  ADVANCED_ANALYTICS: {\n    minPlan: CompanyPlan.ENTERPRISE,\n    description: \"Advanced analytics and reporting\"\n  },\n  SHIFT_SCHEDULING: {\n    minPlan: CompanyPlan.BUSINESS,\n    description: \"Work shift scheduling\"\n  }\n}; \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/FeatureGuard.html":{"url":"guards/FeatureGuard.html","title":"guard - FeatureGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    FeatureGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/guards/feature.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                planHierarchy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in src/guards/feature.guard.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/guards/feature.guard.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable, CanActivate, ExecutionContext } from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { CompanyPlan } from '../enums/company-plan.enum';\nimport { features } from '../config/features.config';\n\n@Injectable()\nexport class FeatureGuard implements CanActivate {\n  private readonly planHierarchy = {\n    [CompanyPlan.ENTERPRISE]: 3,\n    [CompanyPlan.BUSINESS]: 2,\n    [CompanyPlan.BASIC]: 1,\n  };\n\n  constructor(private reflector: Reflector) {}\n\n  canActivate(context: ExecutionContext): boolean {\n    const requiredFeature = this.reflector.get(\n      'requiredFeature',\n      context.getHandler(),\n    );\n\n    if (!requiredFeature) {\n      return true;\n    }\n\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    // Superadmins bypass feature restrictions\n    if (user.role === 'SUPERADMIN') {\n      return true;\n    }\n\n    // Get company plan from user's company\n    const companyPlan = user.company?.plan || CompanyPlan.BASIC;\n\n    // Get required plan for the feature\n    const featureConfig = features[requiredFeature];\n    if (!featureConfig) {\n      return false;\n    }\n\n    const requiredPlanLevel = this.planHierarchy[featureConfig.minPlan];\n    const currentPlanLevel = this.planHierarchy[companyPlan];\n\n    return currentPlanLevel >= requiredPlanLevel;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FeatureRestrictionFilter.html":{"url":"classes/FeatureRestrictionFilter.html","title":"class - FeatureRestrictionFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FeatureRestrictionFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/filters/feature-restriction.filter.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception: HttpException, host: ArgumentsHost)\n                \n            \n\n\n                    \n                        \n                            Defined in src/filters/feature-restriction.filter.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                exception\n                                            \n                                                        HttpException\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                host\n                                            \n                                                        ArgumentsHost\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ExceptionFilter, Catch, ArgumentsHost, HttpException } from '@nestjs/common';\nimport { Response } from 'express';\n\n@Catch(HttpException)\nexport class FeatureRestrictionFilter implements ExceptionFilter {\n  catch(exception: HttpException, host: ArgumentsHost) {\n    const ctx = host.switchToHttp();\n    const response = ctx.getResponse();\n    const status = exception.getStatus();\n\n    if (status === 403) {\n      response.status(403).json({\n        statusCode: 403,\n        message: 'Ta funkcja nie jest dostępna w Twoim planie. Rozważ aktualizację planu.',\n        error: 'Forbidden',\n      });\n    } else {\n      response.status(status).json(exception.getResponse());\n    }\n  }\n} \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FilterUsersDto.html":{"url":"classes/FilterUsersDto.html","title":"class - FilterUsersDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FilterUsersDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/dto/user/filter-users.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Optional\n                                companyId\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                limit\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                page\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                role\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                search\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        companyId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/user/filter-users.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        limit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/user/filter-users.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        page\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/user/filter-users.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserRole\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsEnum(UserRole)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/user/filter-users.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        search\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/user/filter-users.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsOptional, IsString, IsEnum } from 'class-validator';\nimport { UserRole } from '../../enums/user-role.enum';\n\nexport class FilterUsersDto {\n  @IsOptional()\n  @IsString()\n  search?: string;\n\n  @IsOptional()\n  @IsEnum(UserRole)\n  role?: UserRole;\n\n  @IsOptional()\n  @IsString()\n  companyId?: string;\n\n  @IsOptional()\n  @IsString()\n  page?: string;\n\n  @IsOptional()\n  @IsString()\n  limit?: string;\n} \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GuardsModule.html":{"url":"modules/GuardsModule.html","title":"module - GuardsModule","body":"\n                   \n\n\n\n\n    Modules\n    GuardsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_GuardsModule\n\n\n\ncluster_GuardsModule_providers\n\n\n\ncluster_GuardsModule_exports\n\n\n\n\nFeatureGuard \n\nFeatureGuard \n\n\n\nUserLimitGuard \n\nUserLimitGuard \n\n\n\nUserLimitService \n\nUserLimitService \n\n\n\nGuardsModule\n\nGuardsModule\n\nFeatureGuard  -->\n\nGuardsModule->FeatureGuard \n\n\n\nUserLimitGuard  -->\n\nGuardsModule->UserLimitGuard \n\n\n\nUserLimitService  -->\n\nGuardsModule->UserLimitService \n\n\n\n\n\nUserLimitService\n\nUserLimitService\n\nGuardsModule -->\n\nUserLimitService->GuardsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/guards/guards.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserLimitService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FeatureGuard\n                        \n                        \n                            UserLimitGuard\n                        \n                        \n                            UserLimitService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { User } from '../entities/user.entity';\nimport { Company } from '../entities/company.entity';\nimport { UserLimitGuard } from './user-limit.guard';\nimport { FeatureGuard } from './feature.guard';\nimport { UserLimitService } from './user-limit.service';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([User, Company]),\n  ],\n  providers: [UserLimitGuard, FeatureGuard, UserLimitService],\n  exports: [UserLimitGuard, FeatureGuard, UserLimitService],\n})\nexport class GuardsModule {} \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthGuard.html":{"url":"injectables/JwtAuthGuard.html","title":"injectable - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/guards/jwt-auth.guard.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        AuthGuard('jwt')\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handleRequest\n                        \n                    \n                \n            \n            \n                \nhandleRequest(err: any, user: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/guards/jwt-auth.guard.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                err\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class JwtAuthGuard extends AuthGuard('jwt') {\n  handleRequest(err: any, user: any) {\n    if (err || !user) {\n      throw err || new UnauthorizedException();\n    }\n    return user;\n  }\n} \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/strategies/jwt.strategy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PassportStrategy(Strategy)\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/strategies/jwt.strategy.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(payload: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/strategies/jwt.strategy.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\nimport { ConfigService } from '@nestjs/config';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor(private configService: ConfigService) {\n    const jwtSecret = configService.get('JWT_SECRET');\n    if (!jwtSecret) {\n      throw new Error('JWT_SECRET is not defined');\n    }\n\n    super({\n      jwtFromRequest: ExtractJwt.fromExtractors([\n        (request) => {\n          const token = request?.cookies?.fitlit_token;\n          return token;\n        },\n      ]),\n      ignoreExpiration: false,\n      secretOrKey: jwtSecret,\n    });\n  }\n\n  async validate(payload: any) {\n    return {\n      id: payload.sub,\n      email: payload.email,\n      role: payload.role,\n      companyId: payload.companyId,\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MailModule.html":{"url":"modules/MailModule.html","title":"module - MailModule","body":"\n                   \n\n\n\n\n    Modules\n    MailModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MailModule\n\n\n\ncluster_MailModule_providers\n\n\n\ncluster_MailModule_exports\n\n\n\n\nMailService \n\nMailService \n\n\n\nMailModule\n\nMailModule\n\nMailService  -->\n\nMailModule->MailService \n\n\n\n\n\nMailService\n\nMailService\n\nMailModule -->\n\nMailService->MailModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/mail/mail.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            MailService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            MailService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MailerModule } from '@nestjs-modules/mailer';\nimport { ConfigService } from '@nestjs/config';\nimport { MailService } from './mail.service';\n\n@Module({\n  imports: [\n    MailerModule.forRootAsync({\n      useFactory: async (config: ConfigService) => ({\n        transport: {\n          host: 'smtp.gmail.com',\n          secure: config.get('SMTP_SECURE'),\n          auth: {\n            user: config.get('EMAIL_USER'),\n            pass: config.get('EMAIL_PASSWORD'),\n          },\n        },\n        defaults: {\n          from: config.get('EMAIL_FROM'),\n        },\n      }),\n      inject: [ConfigService],\n    }),\n  ],\n  providers: [MailService],\n  exports: [MailService],\n})\nexport class MailModule {} \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MailService.html":{"url":"injectables/MailService.html","title":"injectable - MailService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MailService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/mail/mail.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                transporter\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                sendCompanyMemberInvitation\n                            \n                            \n                                    Async\n                                sendNewClientInvitation\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/mail/mail.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        sendCompanyMemberInvitation\n                        \n                    \n                \n            \n            \n                \n                        \n                    sendCompanyMemberInvitation(email: string, token: string, companyName: string, inviterName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/mail/mail.service.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                companyName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                inviterName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        sendNewClientInvitation\n                        \n                    \n                \n            \n            \n                \n                        \n                    sendNewClientInvitation(email: string, token: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/mail/mail.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        transporter\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/mail/mail.service.ts:7\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport * as nodemailer from 'nodemailer';\n\n@Injectable()\nexport class MailService {\n  private transporter;\n\n  constructor(private configService: ConfigService) {\n    this.transporter = nodemailer.createTransport({\n      host: this.configService.get('SMTP_HOST'),\n      port: this.configService.get('SMTP_PORT'),\n      secure: this.configService.get('SMTP_SECURE'),\n      auth: {\n        user: this.configService.get('SMTP_USER'),\n        pass: this.configService.get('SMTP_PASSWORD'),\n      },\n      tls: {\n        // Do not fail on invalid certs\n        rejectUnauthorized: false,\n      },\n    });\n  }\n\n  async sendNewClientInvitation(email: string, token: string) {\n    const invitationLink = `${this.configService.get(\n      'FRONTEND_URL',\n    )}/complete-registration?token=${token}`;\n\n    await this.transporter.sendMail({\n      from: this.configService.get('SMTP_FROM'),\n      to: email,\n      subject: 'Zaproszenie do FitFleet AIOM',\n      html: `\n        Witaj!\n        Zostałeś zaproszony do korzystania z systemu FitFleet AIOM.\n        Aby dokończyć rejestrację, kliknij w poniższy link:\n        Dokończ rejestrację\n        Link jest ważny przez 24 godziny.\n        Pozdrawiamy,Zespół FitFleet AIOM\n      `,\n    });\n  }\n\n  async sendCompanyMemberInvitation(\n    email: string,\n    token: string,\n    companyName: string,\n    inviterName: string,\n  ) {\n    const invitationLink = `${this.configService.get(\n      'FRONTEND_URL',\n    )}/complete-registration?token=${token}`;\n\n    await this.transporter.sendMail({\n      from: this.configService.get('SMTP_FROM'),\n      to: email,\n      subject: `Zaproszenie do firmy ${companyName} w FitFleet AIOM`,\n      html: `\n        Witaj!\n        ${inviterName} zaprosił Cię do dołączenia do firmy ${companyName} w systemie FitFleet AIOM.\n        Aby dokończyć rejestrację, kliknij w poniższy link:\n        Dokończ rejestrację\n        Link jest ważny przez 24 godziny.\n        Pozdrawiamy,Zespół FitFleet AIOM\n      `,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PlanLimits.html":{"url":"interfaces/PlanLimits.html","title":"interface - PlanLimits","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PlanLimits\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/config/plan-limits.config.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            maxUsers\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maxUsers\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        maxUsers:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { CompanyPlan } from '../enums/company-plan.enum';\n\ninterface PlanLimits {\n  maxUsers: number;\n  description: string;\n}\n\nexport const planLimits: Record = {\n  [CompanyPlan.BASIC]: {\n    maxUsers: 15,\n    description: \"Basic plan with up to 15 users\"\n  },\n  [CompanyPlan.BUSINESS]: {\n    maxUsers: 30,\n    description: \"Business plan with up to 30 users\"\n  },\n  [CompanyPlan.ENTERPRISE]: {\n    maxUsers: 50,\n    description: \"Enterprise plan with up to 50 users\"\n  }\n}; \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/RolesGuard.html":{"url":"guards/RolesGuard.html","title":"guard - RolesGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    RolesGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/auth/guards/roles.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in src/auth/guards/roles.guard.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/guards/roles.guard.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable, CanActivate, ExecutionContext } from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { UserRole } from '../../enums/user-role.enum';\nimport { ROLES_KEY } from '../decorators/roles.decorator';\n\n@Injectable()\nexport class RolesGuard implements CanActivate {\n  constructor(private reflector: Reflector) {}\n\n  canActivate(context: ExecutionContext): boolean {\n    const requiredRoles = this.reflector.getAllAndOverride(ROLES_KEY, [\n      context.getHandler(),\n      context.getClass(),\n    ]);\n\n    if (!requiredRoles) {\n      return true;\n    }\n\n    const { user } = context.switchToHttp().getRequest();\n    // user.role comes from the JWT token\n    const roleHierarchy = {\n      [UserRole.SUPERADMIN]: 5,\n      [UserRole.OWNER]: 4,\n      [UserRole.ADMIN]: 3,\n      [UserRole.LEADER]: 2,\n      [UserRole.USER]: 1,\n    };\n\n    const userRoleLevel = roleHierarchy[user.role];\n    const requiredRoleLevel = Math.max(...requiredRoles.map(role => roleHierarchy[role]));\n\n    return userRoleLevel >= requiredRoleLevel;\n  }\n} \n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserProfileDto.html":{"url":"classes/UpdateUserProfileDto.html","title":"class - UpdateUserProfileDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserProfileDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/dto/user/update-profile.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Optional\n                                city\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                firstName\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                houseNumber\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                lastName\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                phoneNumber\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                postCode\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                streetName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        city\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/user/update-profile.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/user/update-profile.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        houseNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/user/update-profile.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/user/update-profile.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        phoneNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsPhoneNumber()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/user/update-profile.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        postCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/user/update-profile.dto.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        streetName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/user/update-profile.dto.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString, IsOptional, IsPhoneNumber } from 'class-validator';\n\nexport class UpdateUserProfileDto {\n  @IsString()\n  @IsOptional()\n  firstName?: string;\n\n  @IsString()\n  @IsOptional()\n  lastName?: string;\n\n  @IsPhoneNumber()\n  @IsOptional()\n  phoneNumber?: string;\n\n  @IsString()\n  @IsOptional()\n  city?: string;\n\n  @IsString()\n  @IsOptional()\n  streetName?: string;\n\n  @IsString()\n  @IsOptional()\n  houseNumber?: string;\n\n  @IsString()\n  @IsOptional()\n  postCode?: string;\n} \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/User.html":{"url":"entities/User.html","title":"entity - User","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/entities/user.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                city\n                            \n                            \n                                    \n                                    \n                                company\n                            \n                            \n                                    \n                                companyId\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                firstName\n                            \n                            \n                                    \n                                houseNumber\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                invitationExpires\n                            \n                            \n                                    \n                                invitationToken\n                            \n                            \n                                    \n                                isProfileComplete\n                            \n                            \n                                    \n                                lastName\n                            \n                            \n                                    \n                                password\n                            \n                            \n                                    \n                                phoneNumber\n                            \n                            \n                                    \n                                postCode\n                            \n                            \n                                    \n                                role\n                            \n                            \n                                    \n                                status\n                            \n                            \n                                    \n                                streetName\n                            \n                            \n                                    \n                                    \n                                superadminCompanies\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                wage\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        city\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/user.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        company\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Company\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, company => company.users)@JoinColumn({name: 'companyId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/user.entity.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        companyId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/user.entity.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/user.entity.ts:90\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/user.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/user.entity.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        houseNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/user.entity.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/user.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        invitationExpires\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true, type: 'timestamp'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/user.entity.ts:84\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        invitationToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true, type: 'varchar'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/user.entity.ts:81\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isProfileComplete\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/user.entity.ts:87\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/user.entity.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true, select: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/user.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        phoneNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/user.entity.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        postCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/user.entity.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserRole\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'enum', enum: UserRole, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/user.entity.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserStatus\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'enum', enum: UserStatus, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/user.entity.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        streetName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/user.entity.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        superadminCompanies\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Company[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined)@JoinTable({name: 'superadmin_companies', joinColumn: undefined, inverseJoinColumn: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/user.entity.ts:78\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/user.entity.ts:93\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        wage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('decimal', {precision: 10, scale: 2, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/user.entity.ts:63\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Entity,\n  PrimaryGeneratedColumn,\n  Column,\n  CreateDateColumn,\n  UpdateDateColumn,\n  ManyToOne,\n  JoinColumn,\n  ManyToMany,\n  JoinTable,\n} from 'typeorm';\nimport { UserRole } from '../enums/user-role.enum';\nimport { UserStatus } from '../enums/user-status.enum';\nimport { Company } from './company.entity';\n\n@Entity('users')\nexport class User {\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column({ unique: true })\n  email: string;\n\n  @Column({ nullable: true, select: false })\n  password: string;\n\n  @Column({ nullable: true })\n  firstName: string;\n\n  @Column({ nullable: true })\n  lastName: string;\n\n  @Column({ nullable: true })\n  phoneNumber: string;\n\n  @Column({ nullable: true })\n  city: string;\n\n  @Column({ nullable: true })\n  streetName: string;\n\n  @Column({ nullable: true })\n  houseNumber: string;\n\n  @Column({ nullable: true })\n  postCode: string;\n\n  @Column({\n    type: 'enum',\n    enum: UserRole,\n    default: UserRole.USER,\n  })\n  role: UserRole;\n\n  @Column({\n    type: 'enum',\n    enum: UserStatus,\n    default: UserStatus.ACTIVE,\n  })\n  status: UserStatus;\n\n  @Column('decimal', { precision: 10, scale: 2, nullable: true })\n  wage: number;\n\n  @ManyToOne(() => Company, (company) => company.users)\n  @JoinColumn({ name: 'companyId' })\n  company: Company;\n\n  @Column({ nullable: true })\n  companyId: string;\n\n  @ManyToMany(() => Company)\n  @JoinTable({\n    name: 'superadmin_companies',\n    joinColumn: { name: 'userId', referencedColumnName: 'id' },\n    inverseJoinColumn: { name: 'companyId', referencedColumnName: 'id' },\n  })\n  superadminCompanies: Company[];\n\n  @Column({ nullable: true, type: 'varchar' })\n  invitationToken: string | null;\n\n  @Column({ nullable: true, type: 'timestamp' })\n  invitationExpires: Date | null;\n\n  @Column({ default: false })\n  isProfileComplete: boolean;\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/UserLimitGuard.html":{"url":"guards/UserLimitGuard.html","title":"guard - UserLimitGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    UserLimitGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/guards/user-limit.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(userLimitService: UserLimitService)\n                    \n                \n                        \n                            \n                                Defined in src/guards/user-limit.guard.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userLimitService\n                                                  \n                                                        \n                                                                        UserLimitService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                        \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/guards/user-limit.guard.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable, CanActivate, ExecutionContext, BadRequestException } from '@nestjs/common';\nimport { UserLimitService } from './user-limit.service';\n\n@Injectable()\nexport class UserLimitGuard implements CanActivate {\n  constructor(private readonly userLimitService: UserLimitService) {}\n\n  async canActivate(context: ExecutionContext): Promise {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    // Superadmins bypass the limit\n    if (user.role === 'SUPERADMIN') {\n      return true;\n    }\n\n    const result = await this.userLimitService.checkUserLimit(user.id, user.companyId);\n    \n    if (!result.allowed) {\n      throw new BadRequestException(result.message);\n    }\n\n    return true;\n  }\n} \n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserLimitService.html":{"url":"injectables/UserLimitService.html","title":"injectable - UserLimitService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserLimitService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/guards/user-limit.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                checkUserLimit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository, companyRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/guards/user-limit.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        companyRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        checkUserLimit\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkUserLimit(userId: string, companyId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/guards/user-limit.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                companyId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { User } from '../entities/user.entity';\nimport { Company } from '../entities/company.entity';\nimport { planLimits } from '../config/plan-limits.config';\n\n@Injectable()\nexport class UserLimitService {\n  constructor(\n    @InjectRepository(User)\n    private readonly userRepository: Repository,\n    @InjectRepository(Company)\n    private readonly companyRepository: Repository,\n  ) {}\n\n  async checkUserLimit(userId: string, companyId: string): Promise {\n    const company = await this.companyRepository.findOne({\n      where: { id: companyId },\n    });\n\n    if (!company) {\n      return { \n        allowed: false, \n        message: 'Firma nie została znaleziona'\n      };\n    }\n\n    const currentUserCount = await this.userRepository.count({\n      where: { companyId: company.id },\n    });\n\n    const planLimit = planLimits[company.plan].maxUsers;\n\n    if (currentUserCount >= planLimit) {\n      return {\n        allowed: false,\n        message: `Osiągnięto limit użytkowników dla planu ${company.plan}. Limit: ${planLimit}. Rozważ aktualizację planu.`,\n      };\n    }\n\n    return { allowed: true };\n  }\n} \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                changeUserRole\n                            \n                            \n                                    \n                                    \n                                    Async\n                                findAll\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                findOne\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                updateWage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        changeUserRole\n                        \n                    \n                \n            \n            \n                \n                        \n                    changeUserRole(undefined: literal type, req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('change-role')@Roles(UserRole.OWNER, UserRole.ADMIN)@RequireFeature('ROLE_MANAGEMENT')\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(filterDto: FilterUsersDto, req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@Roles(UserRole.SUPERADMIN, UserRole.OWNER, UserRole.ADMIN)\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filterDto\n                                            \n                                                            FilterUsersDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string, req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@Roles(UserRole.SUPERADMIN, UserRole.OWNER, UserRole.ADMIN)@UseGuards(CompanyAccessGuard)@CompanyAccess()\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        updateWage\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateWage(id: string, undefined: literal type, req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post(':id/wage')@Roles(UserRole.OWNER, UserRole.ADMIN)@RequireFeature('WAGE_MANAGEMENT')\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Param, Query, UseGuards, Req, Post, Body } from '@nestjs/common';\nimport { UsersService } from './users.service';\nimport { JwtAuthGuard } from '../auth/guards/jwt-auth.guard';\nimport { RolesGuard } from '../auth/guards/roles.guard';\nimport { CompanyAccessGuard } from '../guards/company-access.guard';\nimport { Roles } from '../auth/decorators/roles.decorator';\nimport { CompanyAccess } from '../decorators/company-access.decorator';\nimport { UserRole } from '../enums/user-role.enum';\nimport { FilterUsersDto } from '../dto/user/filter-users.dto';\nimport { FeatureGuard } from '../guards/feature.guard';\nimport { RequireFeature } from '../decorators/require-feature.decorator';\n\n@Controller('users')\n@UseGuards(JwtAuthGuard, RolesGuard, FeatureGuard)\nexport class UsersController {\n  constructor(private readonly usersService: UsersService) {}\n\n  @Get()\n  @Roles(UserRole.SUPERADMIN, UserRole.OWNER, UserRole.ADMIN)\n  async findAll(@Query() filterDto: FilterUsersDto, @Req() req) {\n    return this.usersService.findAll(filterDto, req.user);\n  }\n\n  @Get(':id')\n  @Roles(UserRole.SUPERADMIN, UserRole.OWNER, UserRole.ADMIN)\n  @UseGuards(CompanyAccessGuard)\n  @CompanyAccess()\n  async findOne(@Param('id') id: string, @Req() req) {\n    return this.usersService.findOne(id, req.user);\n  }\n\n  @Post('change-role')\n  @Roles(UserRole.OWNER, UserRole.ADMIN)\n  @RequireFeature('ROLE_MANAGEMENT')\n  async changeUserRole(\n    @Body() { userId, role }: { userId: string; role: UserRole },\n    @Req() req,\n  ) {\n    return this.usersService.changeRole(userId, role, req.user);\n  }\n\n  @Post(':id/wage')\n  @Roles(UserRole.OWNER, UserRole.ADMIN)\n  @RequireFeature('WAGE_MANAGEMENT')\n  async updateWage(\n    @Param('id') id: string,\n    @Body() { wage }: { wage: number },\n    @Req() req,\n  ) {\n    return this.usersService.updateWage(id, wage, req.user);\n  }\n} \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nUsersService \n\nUsersService \n\n\n\nUsersModule\n\nUsersModule\n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { UsersService } from './users.service';\nimport { UsersController } from './users.controller';\nimport { User } from '../entities/user.entity';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([User])],\n  providers: [UsersService],\n  controllers: [UsersController],\n  exports: [UsersService],\n})\nexport class UsersModule {} \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                changeRole\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                updateWage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/users/users.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        changeRole\n                        \n                    \n                \n            \n            \n                \n                        \n                    changeRole(userId: string, newRole: UserRole, currentUser: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:107\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                newRole\n                                            \n                                                            UserRole\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                currentUser\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(filterDto: FilterUsersDto, currentUser: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filterDto\n                                            \n                                                            FilterUsersDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                currentUser\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string, currentUser: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:82\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                currentUser\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateWage\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateWage(id: string, wage: number, currentUser: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:142\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                wage\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                currentUser\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException, BadRequestException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository, Not, ILike } from 'typeorm';\nimport { User } from '../entities/user.entity';\nimport { FilterUsersDto } from '../dto/user/filter-users.dto';\nimport { UserRole } from '../enums/user-role.enum';\n\n@Injectable()\nexport class UsersService {\n  constructor(\n    @InjectRepository(User)\n    private readonly userRepository: Repository,\n  ) {}\n\n  async findAll(filterDto: FilterUsersDto, currentUser: User) {\n    const { search, role, page = '1', limit = '10' } = filterDto;\n    const skip = (parseInt(page) - 1) * parseInt(limit);\n\n    const queryBuilder = this.userRepository.createQueryBuilder('user')\n      .select([\n        'user.id',\n        'user.email',\n        'user.firstName',\n        'user.lastName',\n        'user.phoneNumber',\n        'user.city',\n        'user.streetName',\n        'user.houseNumber',\n        'user.postCode',\n        'user.role',\n        'user.status',\n        'user.wage',\n        'user.companyId',\n        'user.invitationToken',\n        'user.invitationExpires',\n        'user.isProfileComplete',\n        'user.createdAt',\n        'user.updatedAt',\n      ]);\n\n    // Base conditions\n    if (currentUser.role !== UserRole.SUPERADMIN) {\n      // Non-superadmins can only see users from their company and never see superadmins\n      queryBuilder\n        .where('user.companyId = :companyId', { companyId: currentUser.companyId })\n        .andWhere('user.role != :superadminRole', { superadminRole: UserRole.SUPERADMIN });\n    }\n\n    // Search condition\n    if (search) {\n      queryBuilder.andWhere(\n        '(LOWER(user.email) LIKE LOWER(:search) OR LOWER(user.firstName) LIKE LOWER(:search) OR LOWER(user.lastName) LIKE LOWER(:search))',\n        { search: `%${search}%` },\n      );\n    }\n\n    // Role filter\n    if (role) {\n      queryBuilder.andWhere('user.role = :role', { role });\n    }\n\n    // Add pagination\n    queryBuilder\n      .skip(skip)\n      .take(parseInt(limit))\n      .orderBy('user.createdAt', 'DESC');\n\n    // Get total count for pagination\n    const [users, total] = await queryBuilder.getManyAndCount();\n\n    return {\n      users,\n      pagination: {\n        total,\n        page: parseInt(page),\n        limit: parseInt(limit),\n        pages: Math.ceil(total / parseInt(limit)),\n      },\n    };\n  }\n\n  async findOne(id: string, currentUser: User) {\n    const user = await this.userRepository.findOne({ \n      where: { id },\n      relations: ['company'],\n    });\n\n    if (!user) {\n      throw new NotFoundException('Użytkownik nie został znaleziony');\n    }\n\n    // Check if user has access to view this user\n    if (currentUser.role !== UserRole.SUPERADMIN && \n        user.companyId !== currentUser.companyId) {\n      throw new NotFoundException('Użytkownik nie został znaleziony');\n    }\n\n    // Don't show superadmins to non-superadmins\n    if (user.role === UserRole.SUPERADMIN && \n        currentUser.role !== UserRole.SUPERADMIN) {\n      throw new NotFoundException('Użytkownik nie został znaleziony');\n    }\n\n    return user;\n  }\n\n  async changeRole(userId: string, newRole: UserRole, currentUser: User) {\n    const user = await this.userRepository.findOne({ where: { id: userId } });\n    \n    if (!user) {\n      throw new NotFoundException('Użytkownik nie został znaleziony');\n    }\n\n    // Owners can't change their own role\n    if (currentUser.id === userId) {\n      throw new BadRequestException('Nie możesz zmienić swojej własnej roli');\n    }\n\n    // Check company access\n    if (currentUser.role !== UserRole.SUPERADMIN && \n        user.companyId !== currentUser.companyId) {\n      throw new BadRequestException('Nie masz uprawnień do zarządzania tym użytkownikiem');\n    }\n\n    // Owner-specific restrictions\n    if (currentUser.role === UserRole.OWNER) {\n      // Can't create or modify owners\n      if (newRole === UserRole.OWNER || user.role === UserRole.OWNER) {\n        throw new BadRequestException('Nie możesz tworzyć ani modyfikować właścicieli');\n      }\n      \n      // Can't modify superadmins\n      if (user.role === UserRole.SUPERADMIN) {\n        throw new BadRequestException('Nie możesz modyfikować superadminów');\n      }\n    }\n\n    user.role = newRole;\n    return this.userRepository.save(user);\n  }\n\n  async updateWage(id: string, wage: number, currentUser: User) {\n    const user = await this.userRepository.findOne({ where: { id } });\n    \n    if (!user) {\n      throw new NotFoundException('Użytkownik nie został znaleziony');\n    }\n\n    // Check company access\n    if (currentUser.role !== UserRole.SUPERADMIN && \n        user.companyId !== currentUser.companyId) {\n      throw new BadRequestException('Nie masz uprawnień do zarządzania tym użytkownikiem');\n    }\n\n    // Only allow positive wages\n    if (wage \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                        src/auth/decorators/roles.decorator.ts\n            \n            variable\n            Roles\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/auth/decorators/roles.decorator.ts\n            \n            variable\n            ROLES_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/guards/jwt-auth.guard.ts\n            \n            injectable\n            JwtAuthGuard\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/guards/roles.guard.ts\n            \n            guard\n            RolesGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/strategies/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/config/features.config.ts\n            \n            interface\n            FeatureConfig\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        src/config/features.config.ts\n            \n            variable\n            features\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/plan-limits.config.ts\n            \n            interface\n            PlanLimits\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        src/config/plan-limits.config.ts\n            \n            variable\n            planLimits\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/decorators/company-access.decorator.ts\n            \n            variable\n            COMPANY_ACCESS_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/decorators/company-access.decorator.ts\n            \n            variable\n            CompanyAccess\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/decorators/require-feature.decorator.ts\n            \n            variable\n            FEATURE_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/decorators/require-feature.decorator.ts\n            \n            variable\n            RequireFeature\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/dto/company/create-company.dto.ts\n            \n            class\n            CreateCompanyDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/dto/user/complete-registration.dto.ts\n            \n            class\n            CompleteRegistrationDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/dto/user/create-invitation.dto.ts\n            \n            class\n            CreateInvitationDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/dto/user/create-superadmin.dto.ts\n            \n            class\n            CreateSuperAdminDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/dto/user/filter-users.dto.ts\n            \n            class\n            FilterUsersDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/dto/user/update-profile.dto.ts\n            \n            class\n            UpdateUserProfileDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/entities/company.entity.ts\n            \n            entity\n            Company\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/entities/user.entity.ts\n            \n            entity\n            User\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/filters/feature-restriction.filter.ts\n            \n            class\n            FeatureRestrictionFilter\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/guards/company-access.guard.ts\n            \n            guard\n            CompanyAccessGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/guards/feature.guard.ts\n            \n            guard\n            FeatureGuard\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/guards/user-limit.guard.ts\n            \n            guard\n            UserLimitGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/guards/user-limit.service.ts\n            \n            injectable\n            UserLimitService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/mail/mail.service.ts\n            \n            injectable\n            MailService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                        src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/6)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs-modules/mailer : ^2.0.2\n        \n            @nestjs/common : ^11.0.1\n        \n            @nestjs/config : ^4.0.0\n        \n            @nestjs/core : ^11.0.1\n        \n            @nestjs/jwt : ^11.0.0\n        \n            @nestjs/passport : ^11.0.5\n        \n            @nestjs/platform-express : ^11.0.1\n        \n            @nestjs/typeorm : ^11.0.0\n        \n            bcrypt : ^5.1.1\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.1\n        \n            cookie-parser : ^1.4.7\n        \n            nodemailer : ^6.10.0\n        \n            passport : ^0.7.0\n        \n            passport-jwt : ^4.0.1\n        \n            pg : ^8.13.3\n        \n            reflect-metadata : ^0.2.2\n        \n            rxjs : ^7.8.1\n        \n            typeorm : ^0.3.20\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CompanyPlan   (src/.../company-plan.enum.ts)\n                        \n                        \n                            UserRole   (src/.../user-role.enum.ts)\n                        \n                        \n                            UserStatus   (src/.../user-status.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/enums/company-plan.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        CompanyPlan\n                    \n                \n                        \n                            \n                                 BASIC\n                            \n                        \n                        \n                            \n                                Value : BASIC\n                            \n                        \n                        \n                            \n                                 BUSINESS\n                            \n                        \n                        \n                            \n                                Value : BUSINESS\n                            \n                        \n                        \n                            \n                                 ENTERPRISE\n                            \n                        \n                        \n                            \n                                Value : ENTERPRISE\n                            \n                        \n            \n        \n\n    src/enums/user-role.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        UserRole\n                    \n                \n                        \n                            \n                                 SUPERADMIN\n                            \n                        \n                        \n                            \n                                Value : superadmin\n                            \n                        \n                        \n                            \n                                 OWNER\n                            \n                        \n                        \n                            \n                                Value : owner\n                            \n                        \n                        \n                            \n                                 ADMIN\n                            \n                        \n                        \n                            \n                                Value : admin\n                            \n                        \n                        \n                            \n                                 LEADER\n                            \n                        \n                        \n                            \n                                Value : leader\n                            \n                        \n                        \n                            \n                                 USER\n                            \n                        \n                        \n                            \n                                Value : user\n                            \n                        \n            \n        \n\n    src/enums/user-status.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        UserStatus\n                    \n                \n                        \n                            \n                                 ACTIVE\n                            \n                        \n                        \n                            \n                                Value : active\n                            \n                        \n                        \n                            \n                                 BLOCKED\n                            \n                        \n                        \n                            \n                                Value : blocked\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nProject setup\nExample :$ npm installCompile and run the project\nExample :# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodRun tests\nExample :# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covDeployment\nWhen you're ready to deploy your NestJS application to production, there are some key steps you can take to ensure it runs as efficiently as possible. Check out the deployment documentation for more information.\nIf you are looking for a cloud-based platform to deploy your NestJS application, check out Mau, our official platform for deploying NestJS applications on AWS. Mau makes deployment straightforward and fast, requiring just a few simple steps:\nExample :$ npm install -g mau\n$ mau deployWith Mau, you can deploy your application in just a few clicks, allowing you to focus on building features rather than managing infrastructure.\nResources\nCheck out a few resources that may come in handy when working with NestJS:\n\nVisit the NestJS Documentation to learn more about the framework.\nFor questions and support, please visit our Discord channel.\nTo dive deeper and get more hands-on experience, check out our official video courses.\nDeploy your application to AWS with the help of NestJS Mau in just a few clicks.\nVisualize your application graph and interact with the NestJS application in real-time using NestJS Devtools.\nNeed help with your project (part-time to full-time)? Check out our official enterprise support.\nTo stay in the loop and get updates, follow us on X and LinkedIn.\nLooking for a job, or have a job to offer? Check out our official Jobs board.\n\nSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GuardsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MailModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_GuardsModule\n\n\n\ncluster_GuardsModule_exports\n\n\n\ncluster_GuardsModule_providers\n\n\n\ncluster_MailModule\n\n\n\ncluster_MailModule_exports\n\n\n\ncluster_MailModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nGuardsModule\n\nGuardsModule\n\nAuthModule -->\n\nGuardsModule->AuthModule\n\n\n\nAppModule -->\n\nGuardsModule->AppModule\n\n\n\n\n\nFeatureGuard \n\nFeatureGuard \n\nFeatureGuard  -->\n\nGuardsModule->FeatureGuard \n\n\n\n\n\nUserLimitGuard \n\nUserLimitGuard \n\nUserLimitGuard  -->\n\nGuardsModule->UserLimitGuard \n\n\n\n\n\nUserLimitService \n\nUserLimitService \n\nUserLimitService  -->\n\nGuardsModule->UserLimitService \n\n\n\n\n\nMailModule\n\nMailModule\n\nAuthModule -->\n\nMailModule->AuthModule\n\n\n\nAppModule -->\n\nMailModule->AppModule\n\n\n\n\n\nMailService \n\nMailService \n\nMailService  -->\n\nMailModule->MailService \n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nUserLimitService\n\nUserLimitService\n\nGuardsModule -->\n\nUserLimitService->GuardsModule\n\n\n\n\n\nMailService\n\nMailService\n\nMailModule -->\n\nMailService->MailModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        5 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    3 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    2 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    7 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    7 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    4 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            COMPANY_ACCESS_KEY   (src/.../company-access.decorator.ts)\n                        \n                        \n                            CompanyAccess   (src/.../company-access.decorator.ts)\n                        \n                        \n                            FEATURE_KEY   (src/.../require-feature.decorator.ts)\n                        \n                        \n                            features   (src/.../features.config.ts)\n                        \n                        \n                            planLimits   (src/.../plan-limits.config.ts)\n                        \n                        \n                            RequireFeature   (src/.../require-feature.decorator.ts)\n                        \n                        \n                            Roles   (src/.../roles.decorator.ts)\n                        \n                        \n                            ROLES_KEY   (src/.../roles.decorator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/decorators/company-access.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        COMPANY_ACCESS_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'companyAccess'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CompanyAccess\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => SetMetadata(COMPANY_ACCESS_KEY, true)\n                    \n                \n\n\n        \n    \n\n    src/decorators/require-feature.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        FEATURE_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'requiredFeature'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        RequireFeature\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (feature: string) => SetMetadata(FEATURE_KEY, feature)\n                    \n                \n\n\n        \n    \n\n    src/config/features.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        features\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Record\n\n                    \n                \n                \n                    \n                        Default value : {\n  USER_MANAGEMENT: {\n    minPlan: CompanyPlan.BASIC,\n    description: \"Basic user management\"\n  },\n  ROLE_MANAGEMENT: {\n    minPlan: CompanyPlan.BUSINESS,\n    description: \"Advanced role management\"\n  },\n  WAGE_MANAGEMENT: {\n    minPlan: CompanyPlan.ENTERPRISE,\n    description: \"Employee wage management\"\n  },\n  ADVANCED_ANALYTICS: {\n    minPlan: CompanyPlan.ENTERPRISE,\n    description: \"Advanced analytics and reporting\"\n  },\n  SHIFT_SCHEDULING: {\n    minPlan: CompanyPlan.BUSINESS,\n    description: \"Work shift scheduling\"\n  }\n}\n                    \n                \n\n\n        \n    \n\n    src/config/plan-limits.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        planLimits\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Record\n\n                    \n                \n                \n                    \n                        Default value : {\n  [CompanyPlan.BASIC]: {\n    maxUsers: 15,\n    description: \"Basic plan with up to 15 users\"\n  },\n  [CompanyPlan.BUSINESS]: {\n    maxUsers: 30,\n    description: \"Business plan with up to 30 users\"\n  },\n  [CompanyPlan.ENTERPRISE]: {\n    maxUsers: 50,\n    description: \"Enterprise plan with up to 50 users\"\n  }\n}\n                    \n                \n\n\n        \n    \n\n    src/auth/decorators/roles.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Roles\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (...roles: UserRole[]) => SetMetadata(ROLES_KEY, roles)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ROLES_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'roles'\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
